[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/bus/MessageBus.js",
    "memberof": null,
    "longname": "src/bus/MessageBus.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import MiniBus from './MiniBus';\r\n/**\r\n* Message BUS Interface is an extension of the MiniBus\r\n* It doesn't support the default '*' listener, instead it uses the registry.resolve(..)\r\n*/\r\nclass MessageBus extends MiniBus {\r\n  /* private\r\n  _registry: Registry\r\n  _forwards: { <from-url>: { fl: MsgListener, sandboxToUrls: Map(Sandbox, [to-url]), urlToSandbox: { to-url: Sandbox } } }\r\n\r\n  //_forwards: { <from-url>: { fl: MsgListener, destinations: [to-url] } }\r\n  */\r\n\r\n  //TODO: future optimization\r\n  //1. message batch processing with setInterval\r\n  //2. resolve default gateway/protostub with register.resolve\r\n\r\n  constructor(registry) {\r\n    super();\r\n    this._registry = registry;\r\n    this._forwards = {};\r\n  }\r\n\r\n  addForward(from, to) {\r\n    let _this = this;\r\n\r\n    //verify if forward exist\r\n    let conf = _this._forwards[from];\r\n    if (!conf) {\r\n      let forwardListener = _this.addListener(from, (msg) => {\r\n        conf.sandboxToUrls.forEach((urls, sandbox) => {\r\n          console.log('MB-FORWARD: ( ' + from + ' to ' + urls.size + ' destinations)');\r\n          urls.forEach((value) => { console.log('SEND-TO: ', value); });\r\n\r\n          sandbox.postMessage(msg);\r\n        });\r\n      });\r\n\r\n      conf = {\r\n        from: from,\r\n        fl: forwardListener,\r\n        sandboxToUrls: new Map(),\r\n        urlToSandbox: new Map(),\r\n\r\n        //remove forward detination\r\n        remove: (url) => {\r\n          let sandbox = this.urlToSandbox.get(url);\r\n          if (sandbox) {\r\n            this.urlToSandbox.delete(url);\r\n            this.sandboxToUrls.get(sandbox).delete(url);\r\n          }\r\n        }\r\n      };\r\n\r\n      _this._forwards[from] = conf;\r\n    }\r\n\r\n    return new Promise((resolve) => {\r\n      //add forward detination\r\n      this._registry.getSandbox(to).then((sandbox) => {\r\n        let urls = conf.sandboxToUrls.get(sandbox);\r\n        if (!urls) {\r\n          urls = new Set();\r\n          conf.sandboxToUrls.set(sandbox, urls);\r\n        }\r\n\r\n        urls.add(to);\r\n        conf.urlToSandbox.set(to, sandbox);\r\n\r\n        resolve(conf);\r\n      });\r\n    });\r\n  }\r\n\r\n  /*\r\n  addForward(from, to) {\r\n    let _this = this;\r\n\r\n    //verify if forward exist\r\n    let conf = _this._forwards[from];\r\n    if (!conf) {\r\n      let forwardListener = _this.addListener(from, (msg) => {\r\n        let resolves = new Set();\r\n        conf.destinations.forEach((url) => {\r\n          //resolve and forward for unique resolution...\r\n          _this._registry.resolve(url).then((route) => {\r\n            if (!resolves.has(route)) {\r\n              console.log('MB-FORWARD: (' + from + ', ' + url + ', ' + route + ')');\r\n              resolves.add(route);\r\n              _this._publish(route, msg);\r\n            } else {\r\n              console.log('MB-FORWARD-IGNORE: (' + from + ', ' + url + ', ' + route + ')');\r\n            }\r\n          }).catch(function(e) {\r\n            console.log('RESOLVE-ERROR: ', e);\r\n          });\r\n\r\n        });\r\n      });\r\n\r\n      //TODO: remove(url) -remove url destination, if destinations is empty, remove forward-\r\n      conf = {\r\n        from: from,\r\n        fl: forwardListener,\r\n        destinations: new Set()\r\n      };\r\n\r\n      _this._forwards[from] = conf;\r\n    }\r\n\r\n    //add new forward detination and return\r\n    conf.destinations.add(to);\r\n    return conf;\r\n  }*/\r\n\r\n  _publish(url, msg) {\r\n    let _this = this;\r\n\r\n    let itemList = _this._subscriptions[url];\r\n    if (itemList) {\r\n      _this._publishOn(itemList, msg);\r\n    }\r\n  }\r\n\r\n  _onPostMessage(msg) {\r\n    let _this = this;\r\n\r\n    //resolve external protostub...\r\n    _this._registry.resolve(msg.to).then((route) => {\r\n      _this._publish(route, msg);\r\n    }).catch(function(e) {\r\n      console.log('RESOLVE-ERROR: ', e);\r\n    });\r\n  }\r\n}\r\n\r\nexport default MessageBus;\r\n"
  },
  {
    "__docId__": 1,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MessageBus",
    "memberof": "src/bus/MessageBus.js",
    "longname": "src/bus/MessageBus.js~MessageBus",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/bus/MessageBus.js",
    "importStyle": "MessageBus",
    "description": "Message BUS Interface is an extension of the MiniBus\nIt doesn't support the default '*' listener, instead it uses the registry.resolve(..)",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "src/bus/MiniBus.js~MiniBus"
    ]
  },
  {
    "__docId__": 2,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/bus/MessageBus.js~MessageBus",
    "longname": "src/bus/MessageBus.js~MessageBus#constructor",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "registry",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 3,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_registry",
    "memberof": "src/bus/MessageBus.js~MessageBus",
    "longname": "src/bus/MessageBus.js~MessageBus#_registry",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_forwards",
    "memberof": "src/bus/MessageBus.js~MessageBus",
    "longname": "src/bus/MessageBus.js~MessageBus#_forwards",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 5,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addForward",
    "memberof": "src/bus/MessageBus.js~MessageBus",
    "longname": "src/bus/MessageBus.js~MessageBus#addForward",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "from",
        "types": [
          "*"
        ]
      },
      {
        "name": "to",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 6,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_publish",
    "memberof": "src/bus/MessageBus.js~MessageBus",
    "longname": "src/bus/MessageBus.js~MessageBus#_publish",
    "access": null,
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "msg",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 7,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onPostMessage",
    "memberof": "src/bus/MessageBus.js~MessageBus",
    "longname": "src/bus/MessageBus.js~MessageBus#_onPostMessage",
    "access": null,
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "params": [
      {
        "name": "msg",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 8,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/bus/MiniBus.js",
    "memberof": null,
    "longname": "src/bus/MiniBus.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Pipeline from './Pipeline';\r\n\r\n/**\r\n* @author micaelpedrosa@gmail.com\r\n* Minimal interface and implementation to send and receive messages. It can be reused in many type of components.\r\n* Components that need a message system should receive this class as a dependency or extend it.\r\n* Extensions should implement the following private methods: _onPostMessage and _registerExternalListener\r\n*/\r\nclass MiniBus {\r\n  /* private\r\n  _msgId: number;\r\n  _subscriptions: <url: MsgListener[]>\r\n\r\n  _responseTimeOut: number\r\n  _responseCallbacks: <url+id: (msg) => void>\r\n\r\n  _pipeline: Pipeline\r\n  */\r\n\r\n  constructor() {\r\n    let _this = this;\r\n    _this._msgId = 0;\r\n    _this._subscriptions = {};\r\n\r\n    _this._responseTimeOut = 5000; //default to 3s\r\n    _this._responseCallbacks = {};\r\n\r\n    _this._pipeline = new Pipeline((error) => {\r\n      console.log('PIPELINE-ERROR: ', JSON.stringify(error));\r\n    });\r\n\r\n    _this._registerExternalListener();\r\n  }\r\n\r\n  get pipeline() { return this._pipeline; }\r\n\r\n  /**\r\n  * Register listener to receive message when \"msg.to === url\".\r\n  * Special url \"*\" for default listener is accepted to intercept all messages.\r\n  * @param {URL} url Address to intercept, tha is in the message \"to\"\r\n  * @param {Listener} listener listener\r\n  * @return {MsgListener} instance of MsgListener\r\n  */\r\n  addListener(url, listener) {\r\n    let _this = this;\r\n\r\n    let item = new MsgListener(_this._subscriptions, url, listener);\r\n    let itemList = _this._subscriptions[url];\r\n    if (!itemList) {\r\n      itemList = [];\r\n      _this._subscriptions[url] = itemList;\r\n    }\r\n\r\n    itemList.push(item);\r\n    return item;\r\n  }\r\n\r\n  /**\r\n   * Manually add a response listener. Only one listener per message ID should exist.\r\n   * ATENTION, there is no timeout for this listener.\r\n   * The listener should be removed with a removeResponseListener, failing to do this will result in a unreleased memory problem.\r\n   * @param {URL} url Origin address of the message sent, \"msg.from\".\r\n   * @param {number} msgId Message ID that is returned from the postMessage.\r\n   * @param {Function} responseListener Callback function for the response\r\n   */\r\n  addResponseListener(url, msgId, responseListener) {\r\n    this._responseCallbacks[url + msgId] = responseListener;\r\n  }\r\n\r\n  /**\r\n   * Remove the response listener.\r\n   * @param {URL} url Origin address of the message sent, \"msg.from\".\r\n   * @param {number} msgId  Message ID that is returned from the postMessage\r\n   */\r\n  removeResponseListener(url, msgId) {\r\n    delete this._responseCallbacks[url + msgId];\r\n  }\r\n\r\n  /**\r\n   * Remove all existent listeners for the URL\r\n   * @param  {URL} url Address registered\r\n   */\r\n  removeAllListenersOf(url) {\r\n    delete this._subscriptions[url];\r\n  }\r\n\r\n  /**\r\n  * Send messages to local listeners, or if not exists to external listeners.\r\n  * It's has an optional mechanism for automatic management of response handlers.\r\n  * The response handler will be unregistered after receiving the response, or after response timeout (default to 3s).\r\n  * @param  {Message} msg Message to send. Message ID is automatically added to the message.\r\n  * @param  {Function} responseCallback Optional parameter, if the developer what's automatic response management.\r\n  * @return {number} Returns the message ID, in case it should be needed for manual management of the response handler.\r\n  */\r\n  postMessage(inMsg, responseCallback) {\r\n    let _this = this;\r\n\r\n    //TODO: how do we manage message ID's? Should it be a global runtime counter, or per URL address?\r\n    //Global counter will not work, because there will be multiple MiniBus instances!\r\n    //Per URL, can be a lot of data to maintain!\r\n    //Maybe a counter per MiniBus instance. This is the assumed solution for now.\r\n    if (!inMsg.id || inMsg.id === 0) {\r\n      _this._msgId++;\r\n      inMsg.id = _this._msgId;\r\n    }\r\n\r\n    _this._pipeline.process(inMsg, (msg) => {\r\n\r\n      //automatic management of response handlers\r\n      if (responseCallback) {\r\n        let responseId = msg.from + msg.id;\r\n        _this._responseCallbacks[responseId] = responseCallback;\r\n\r\n        setTimeout(() => {\r\n          let responseFun = _this._responseCallbacks[responseId];\r\n          delete _this._responseCallbacks[responseId];\r\n\r\n          if (responseFun) {\r\n            let errorMsg = {\r\n              id: msg.id, type: 'response',\r\n              body: { code: 408, desc: 'Response timeout!', value: inMsg }\r\n            };\r\n\r\n            responseFun(errorMsg);\r\n          }\r\n        }, _this._responseTimeOut);\r\n      }\r\n\r\n      if (!_this._onResponse(msg)) {\r\n        let itemList = _this._subscriptions[msg.to];\r\n        if (itemList) {\r\n          //do not publish on default address, because of loopback cycle\r\n          _this._publishOn(itemList, msg);\r\n        } else {\r\n          //if there is no listener, send to external interface\r\n          _this._onPostMessage(msg);\r\n        }\r\n      }\r\n    });\r\n\r\n    return inMsg.id;\r\n  }\r\n\r\n  /**\r\n   * Helper method to bind listeners (in both directions) into other MiniBus target.\r\n   * @param  {URL} outUrl Outbound URL, register listener for url in direction \"this -> target\"\r\n   * @param  {URL} inUrl Inbound URL, register listener for url in direction \"target -> this\"\r\n   * @param  {MiniBus} target The other target MiniBus\r\n   * @return {Bound} an object that contains the properties [thisListener, targetListener] and the unbind method.\r\n   */\r\n  bind(outUrl, inUrl, target) {\r\n    let _this = this;\r\n\r\n    let thisListn = _this.addListener(outUrl, (msg) => {\r\n      target.postMessage(msg);\r\n    });\r\n\r\n    let targetListn = target.addListener(inUrl, (msg) => {\r\n      _this.postMessage(msg);\r\n    });\r\n\r\n    return {\r\n      thisListener: thisListn,\r\n      targetListener: targetListn,\r\n      unbind: () => {\r\n        this.thisListener.remove();\r\n        this.targetListener.remove();\r\n      }\r\n    };\r\n  }\r\n\r\n  //publish on a subscription list.\r\n  _publishOn(itemList, msg) {\r\n    itemList.forEach((sub) => {\r\n      sub._callback(msg);\r\n    });\r\n  }\r\n\r\n  _onResponse(msg) {\r\n    let _this = this;\r\n\r\n    if (msg.type === 'response') {\r\n      let responseId = msg.to + msg.id;\r\n      let responseFun = _this._responseCallbacks[responseId];\r\n\r\n      //if it's a provisional response, don't delete response listener\r\n      if (msg.body.code >= 200) {\r\n        delete _this._responseCallbacks[responseId];\r\n      }\r\n\r\n      if (responseFun) {\r\n        responseFun(msg);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  //receive messages from external interface\r\n  _onMessage(msg) {\r\n    let _this = this;\r\n\r\n    if (!_this._onResponse(msg)) {\r\n      let itemList = _this._subscriptions[msg.to];\r\n      if (itemList) {\r\n        _this._publishOn(itemList, msg);\r\n      } else {\r\n        //is there any \"*\" (default) listeners?\r\n        itemList = _this._subscriptions['*'];\r\n        if (itemList) {\r\n          _this._publishOn(itemList, msg);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Not public available, used by the class extension implementation, to process messages from the public \"postMessage\" without a registered listener.\r\n   * Used to send the message to an external interface, like a WebWorker, IFrame, etc.\r\n   * @param  {Message.Message} msg Message\r\n   */\r\n  _onPostMessage(msg) { /*implementation will send message to external system*/ }\r\n\r\n  /**\r\n   * Not public available, used by the class extension implementation, to process all messages that enter the MiniBus from an external interface, like a WebWorker, IFrame, etc.\r\n   * This method is called one time in the constructor to register external listeners.\r\n   * The implementation will probably call the \"_onMessage\" method to publish in the local listeners.\r\n   * DO NOT call \"postMessage\", there is a danger that the message enters in a cycle!\r\n   */\r\n  _registerExternalListener() { /*implementation will register external listener and call \"this._onMessage(msg)\" */ }\r\n\r\n}\r\n\r\nclass MsgListener {\r\n  /* private\r\n  _subscriptions: <string: MsgListener[]>;\r\n  _url: string;\r\n  _callback: (msg) => void;\r\n  */\r\n\r\n  constructor(subscriptions, url, callback) {\r\n    let _this = this;\r\n\r\n    _this._subscriptions = subscriptions;\r\n    _this._url = url;\r\n    _this._callback = callback;\r\n  }\r\n\r\n  get url() { return this._url; }\r\n\r\n  remove() {\r\n    let _this = this;\r\n\r\n    let subs = _this._subscriptions[_this._url];\r\n    if (subs) {\r\n      let index = subs.indexOf(_this);\r\n      subs.splice(index, 1);\r\n\r\n      //if there are no listeners, remove the subscription entirely.\r\n      if (subs.length === 0) {\r\n        delete _this._subscriptions[_this._url];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default MiniBus;\r\n"
  },
  {
    "__docId__": 9,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MsgListener",
    "memberof": "src/bus/MiniBus.js",
    "longname": "src/bus/MiniBus.js~MsgListener",
    "access": null,
    "export": false,
    "importPath": "runtime-core/src/bus/MiniBus.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 235,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 10,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/bus/MiniBus.js~MsgListener",
    "longname": "src/bus/MiniBus.js~MsgListener#constructor",
    "access": null,
    "description": null,
    "lineNumber": 242,
    "undocument": true,
    "params": [
      {
        "name": "subscriptions",
        "types": [
          "*"
        ]
      },
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 11,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "url",
    "memberof": "src/bus/MiniBus.js~MsgListener",
    "longname": "src/bus/MiniBus.js~MsgListener#url",
    "access": null,
    "description": null,
    "lineNumber": 250,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 12,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "remove",
    "memberof": "src/bus/MiniBus.js~MsgListener",
    "longname": "src/bus/MiniBus.js~MsgListener#remove",
    "access": null,
    "description": null,
    "lineNumber": 252,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 13,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MiniBus",
    "memberof": "src/bus/MiniBus.js",
    "longname": "src/bus/MiniBus.js~MiniBus",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/bus/MiniBus.js",
    "importStyle": "MiniBus",
    "description": null,
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "micaelpedrosa@gmail.com\nMinimal interface and implementation to send and receive messages. It can be reused in many type of components.\nComponents that need a message system should receive this class as a dependency or extend it.\nExtensions should implement the following private methods: _onPostMessage and _registerExternalListener"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 14,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/bus/MiniBus.js~MiniBus",
    "longname": "src/bus/MiniBus.js~MiniBus#constructor",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 15,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "pipeline",
    "memberof": "src/bus/MiniBus.js~MiniBus",
    "longname": "src/bus/MiniBus.js~MiniBus#pipeline",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 16,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addListener",
    "memberof": "src/bus/MiniBus.js~MiniBus",
    "longname": "src/bus/MiniBus.js~MiniBus#addListener",
    "access": null,
    "description": "Register listener to receive message when \"msg.to === url\".\nSpecial url \"*\" for default listener is accepted to intercept all messages.",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "URL"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Address to intercept, tha is in the message \"to\""
      },
      {
        "nullable": null,
        "types": [
          "Listener"
        ],
        "spread": false,
        "optional": false,
        "name": "listener",
        "description": "listener"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MsgListener"
      ],
      "spread": false,
      "description": "instance of MsgListener"
    },
    "generator": false
  },
  {
    "__docId__": 17,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addResponseListener",
    "memberof": "src/bus/MiniBus.js~MiniBus",
    "longname": "src/bus/MiniBus.js~MiniBus#addResponseListener",
    "access": null,
    "description": "Manually add a response listener. Only one listener per message ID should exist.\nATENTION, there is no timeout for this listener.\nThe listener should be removed with a removeResponseListener, failing to do this will result in a unreleased memory problem.",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "URL"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Origin address of the message sent, \"msg.from\"."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "msgId",
        "description": "Message ID that is returned from the postMessage."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "responseListener",
        "description": "Callback function for the response"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 18,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeResponseListener",
    "memberof": "src/bus/MiniBus.js~MiniBus",
    "longname": "src/bus/MiniBus.js~MiniBus#removeResponseListener",
    "access": null,
    "description": "Remove the response listener.",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "URL"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Origin address of the message sent, \"msg.from\"."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "msgId",
        "description": "Message ID that is returned from the postMessage"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 19,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeAllListenersOf",
    "memberof": "src/bus/MiniBus.js~MiniBus",
    "longname": "src/bus/MiniBus.js~MiniBus#removeAllListenersOf",
    "access": null,
    "description": "Remove all existent listeners for the URL",
    "lineNumber": 83,
    "params": [
      {
        "nullable": null,
        "types": [
          "URL"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Address registered"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 20,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "postMessage",
    "memberof": "src/bus/MiniBus.js~MiniBus",
    "longname": "src/bus/MiniBus.js~MiniBus#postMessage",
    "access": null,
    "description": "Send messages to local listeners, or if not exists to external listeners.\nIt's has an optional mechanism for automatic management of response handlers.\nThe response handler will be unregistered after receiving the response, or after response timeout (default to 3s).",
    "lineNumber": 95,
    "params": [
      {
        "nullable": null,
        "types": [
          "Message"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": "Message to send. Message ID is automatically added to the message."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "responseCallback",
        "description": "Optional parameter, if the developer what's automatic response management."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Returns the message ID, in case it should be needed for manual management of the response handler."
    },
    "generator": false
  },
  {
    "__docId__": 21,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "bind",
    "memberof": "src/bus/MiniBus.js~MiniBus",
    "longname": "src/bus/MiniBus.js~MiniBus#bind",
    "access": null,
    "description": "Helper method to bind listeners (in both directions) into other MiniBus target.",
    "lineNumber": 151,
    "params": [
      {
        "nullable": null,
        "types": [
          "URL"
        ],
        "spread": false,
        "optional": false,
        "name": "outUrl",
        "description": "Outbound URL, register listener for url in direction \"this -> target\""
      },
      {
        "nullable": null,
        "types": [
          "URL"
        ],
        "spread": false,
        "optional": false,
        "name": "inUrl",
        "description": "Inbound URL, register listener for url in direction \"target -> this\""
      },
      {
        "nullable": null,
        "types": [
          "MiniBus"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "The other target MiniBus"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Bound"
      ],
      "spread": false,
      "description": "an object that contains the properties [thisListener, targetListener] and the unbind method."
    },
    "generator": false
  },
  {
    "__docId__": 22,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_publishOn",
    "memberof": "src/bus/MiniBus.js~MiniBus",
    "longname": "src/bus/MiniBus.js~MiniBus#_publishOn",
    "access": null,
    "description": null,
    "lineNumber": 173,
    "undocument": true,
    "params": [
      {
        "name": "itemList",
        "types": [
          "*"
        ]
      },
      {
        "name": "msg",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 23,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onResponse",
    "memberof": "src/bus/MiniBus.js~MiniBus",
    "longname": "src/bus/MiniBus.js~MiniBus#_onResponse",
    "access": null,
    "description": null,
    "lineNumber": 179,
    "undocument": true,
    "params": [
      {
        "name": "msg",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 24,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onMessage",
    "memberof": "src/bus/MiniBus.js~MiniBus",
    "longname": "src/bus/MiniBus.js~MiniBus#_onMessage",
    "access": null,
    "description": null,
    "lineNumber": 201,
    "undocument": true,
    "params": [
      {
        "name": "msg",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 25,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onPostMessage",
    "memberof": "src/bus/MiniBus.js~MiniBus",
    "longname": "src/bus/MiniBus.js~MiniBus#_onPostMessage",
    "access": null,
    "description": "Not public available, used by the class extension implementation, to process messages from the public \"postMessage\" without a registered listener.\nUsed to send the message to an external interface, like a WebWorker, IFrame, etc.",
    "lineNumber": 223,
    "params": [
      {
        "nullable": null,
        "types": [
          "Message.Message"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": "Message"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 26,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_registerExternalListener",
    "memberof": "src/bus/MiniBus.js~MiniBus",
    "longname": "src/bus/MiniBus.js~MiniBus#_registerExternalListener",
    "access": null,
    "description": "Not public available, used by the class extension implementation, to process all messages that enter the MiniBus from an external interface, like a WebWorker, IFrame, etc.\nThis method is called one time in the constructor to register external listeners.\nThe implementation will probably call the \"_onMessage\" method to publish in the local listeners.\nDO NOT call \"postMessage\", there is a danger that the message enters in a cycle!",
    "lineNumber": 231,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 27,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/bus/Pipeline.js",
    "memberof": null,
    "longname": "src/bus/Pipeline.js",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "content": "/**\r\n* @author micaelpedrosa@gmail.com\r\n* Pipeline\r\n* Sequencial processor of methods. Similar to how Sequential Promise's work, but better fit for message processing.\r\n*/\r\nclass Pipeline {\r\n  /* public\r\n    handlers: ((PipeContext) => void)[]\r\n    onFail: (error) => void\r\n  */\r\n\r\n  constructor(_onFail) {\r\n    let _this = this;\r\n\r\n    _this.handlers = [];\r\n    _this.onFail = _onFail;\r\n  }\r\n\r\n  process(msg, onDeliver) {\r\n    let _this = this;\r\n\r\n    if (_this.handlers.length > 0) {\r\n      let iter = new Iterator(_this.handlers);\r\n      iter.next(new PipeContext(_this, iter, msg, onDeliver));\r\n    } else {\r\n      onDeliver(msg);\r\n    }\r\n  }\r\n}\r\n\r\nclass PipeContext {\r\n  /* private\r\n    _inStop: boolean\r\n\r\n    _pipeline: Pipeline\r\n    _iter: Iterator\r\n    _msg: Message\r\n  */\r\n\r\n  constructor(pipeline, iter, msg, onDeliver) {\r\n    let _this = this;\r\n\r\n    _this._inStop = false;\r\n\r\n    _this._pipeline = pipeline;\r\n    _this._iter = iter;\r\n    _this._msg = msg;\r\n    _this._onDeliver = onDeliver;\r\n  }\r\n\r\n  get pipeline() { return this._pipeline; }\r\n\r\n  get msg() { return this._msg; }\r\n  set msg(inMsg) { this._msg = inMsg; }\r\n\r\n  next() {\r\n    let _this = this;\r\n\r\n    if (!_this._inStop) {\r\n      if (_this._iter.hasNext) {\r\n        _this._iter.next(_this);\r\n      } else {\r\n        _this._onDeliver(_this._msg);\r\n      }\r\n    }\r\n  }\r\n\r\n  deliver() {\r\n    let _this = this;\r\n    if (!_this._inStop) {\r\n      _this._inStop = true;\r\n      _this._onDeliver(_this._msg);\r\n    }\r\n  }\r\n\r\n  fail(error) {\r\n    let _this = this;\r\n\r\n    if (!_this._inStop) {\r\n      _this._inStop = true;\r\n      if (_this._pipeline.onFail) {\r\n        _this._pipeline.onFail(error);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass Iterator {\r\n  /* private\r\n    _index: number\r\n    _array: []\r\n  */\r\n\r\n  constructor(array) {\r\n    this._index = -1;\r\n    this._array = array;\r\n  }\r\n\r\n  get hasNext() {\r\n    return this._index < this._array.length - 1;\r\n  }\r\n\r\n  get next() {\r\n    this._index++;\r\n    return this._array[this._index];\r\n  }\r\n}\r\n\r\nexport default Pipeline;\r\n"
  },
  {
    "__docId__": 28,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "PipeContext",
    "memberof": "src/bus/Pipeline.js",
    "longname": "src/bus/Pipeline.js~PipeContext",
    "access": null,
    "export": false,
    "importPath": "runtime-core/src/bus/Pipeline.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 29,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/bus/Pipeline.js~PipeContext",
    "longname": "src/bus/Pipeline.js~PipeContext#constructor",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [
      {
        "name": "pipeline",
        "types": [
          "*"
        ]
      },
      {
        "name": "iter",
        "types": [
          "*"
        ]
      },
      {
        "name": "msg",
        "types": [
          "*"
        ]
      },
      {
        "name": "onDeliver",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 30,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "pipeline",
    "memberof": "src/bus/Pipeline.js~PipeContext",
    "longname": "src/bus/Pipeline.js~PipeContext#pipeline",
    "access": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 31,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "msg",
    "memberof": "src/bus/Pipeline.js~PipeContext",
    "longname": "src/bus/Pipeline.js~PipeContext#msg",
    "access": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 32,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "msg",
    "memberof": "src/bus/Pipeline.js~PipeContext",
    "longname": "src/bus/Pipeline.js~PipeContext#msg",
    "access": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 33,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_msg",
    "memberof": "src/bus/Pipeline.js~PipeContext",
    "longname": "src/bus/Pipeline.js~PipeContext#_msg",
    "access": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 34,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "next",
    "memberof": "src/bus/Pipeline.js~PipeContext",
    "longname": "src/bus/Pipeline.js~PipeContext#next",
    "access": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 35,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "deliver",
    "memberof": "src/bus/Pipeline.js~PipeContext",
    "longname": "src/bus/Pipeline.js~PipeContext#deliver",
    "access": null,
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 36,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fail",
    "memberof": "src/bus/Pipeline.js~PipeContext",
    "longname": "src/bus/Pipeline.js~PipeContext#fail",
    "access": null,
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "params": [
      {
        "name": "error",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 37,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Iterator",
    "memberof": "src/bus/Pipeline.js",
    "longname": "src/bus/Pipeline.js~Iterator",
    "access": null,
    "export": false,
    "importPath": "runtime-core/src/bus/Pipeline.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 38,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/bus/Pipeline.js~Iterator",
    "longname": "src/bus/Pipeline.js~Iterator#constructor",
    "access": null,
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "params": [
      {
        "name": "array",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 39,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_index",
    "memberof": "src/bus/Pipeline.js~Iterator",
    "longname": "src/bus/Pipeline.js~Iterator#_index",
    "access": null,
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 40,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_array",
    "memberof": "src/bus/Pipeline.js~Iterator",
    "longname": "src/bus/Pipeline.js~Iterator#_array",
    "access": null,
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 41,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "hasNext",
    "memberof": "src/bus/Pipeline.js~Iterator",
    "longname": "src/bus/Pipeline.js~Iterator#hasNext",
    "access": null,
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 42,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "next",
    "memberof": "src/bus/Pipeline.js~Iterator",
    "longname": "src/bus/Pipeline.js~Iterator#next",
    "access": null,
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 43,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Pipeline",
    "memberof": "src/bus/Pipeline.js",
    "longname": "src/bus/Pipeline.js~Pipeline",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/bus/Pipeline.js",
    "importStyle": "Pipeline",
    "description": null,
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "micaelpedrosa@gmail.com\nPipeline\nSequencial processor of methods. Similar to how Sequential Promise's work, but better fit for message processing."
      }
    ],
    "interface": false
  },
  {
    "__docId__": 44,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/bus/Pipeline.js~Pipeline",
    "longname": "src/bus/Pipeline.js~Pipeline#constructor",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "_onFail",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 45,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "process",
    "memberof": "src/bus/Pipeline.js~Pipeline",
    "longname": "src/bus/Pipeline.js~Pipeline#process",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "msg",
        "types": [
          "*"
        ]
      },
      {
        "name": "onDeliver",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 46,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/graphconnector/BloomFilter.js",
    "memberof": null,
    "longname": "src/graphconnector/BloomFilter.js",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "content": "/*\r\nAdapted from https://github.com/jasondavies/bloomfilter.js\r\n\r\nOriginal License:\r\n\r\nCopyright (c) 2011, Jason Davies\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are met:\r\n\r\n  * Redistributions of source code must retain the above copyright notice, this\r\n    list of conditions and the following disclaimer.\r\n\r\n  * Redistributions in binary form must reproduce the above copyright notice,\r\n    this list of conditions and the following disclaimer in the documentation\r\n    and/or other materials provided with the distribution.\r\n\r\n  * The name Jason Davies may not be used to endorse or promote products\r\n    derived from this software without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\nDISCLAIMED. IN NO EVENT SHALL JASON DAVIES BE LIABLE FOR ANY DIRECT, INDIRECT,\r\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\r\nOR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\r\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\n/**\r\n* Implements a Bloom filter.\r\n* @author Jason Davies; adapted and extended by beierle@tu-berlin.de\r\n*/\r\nclass BloomFilter {\r\n\r\n  //var typedArrays = typeof ArrayBuffer !== 'undefined';\r\n\r\n  // Creates a new bloom filter.  If *m* is an array-like object, with a length\r\n  // property, then the bloom filter is loaded with data from the array, where\r\n  // each element is a 32-bit integer.  Otherwise, *m* should specify the\r\n  // number of bits.  Note that *m* is rounded up to the nearest multiple of\r\n  // 32.  *k* specifies the number of hashing functions.\r\n  constructor(m,k) {\r\n\r\n    var typedArrays = typeof ArrayBuffer !== 'undefined';\r\n\r\n    var a;\r\n    if (typeof m !== 'number') {\r\n      a = m;\r\n      m = a.length * 32;\r\n    }\r\n\r\n    var n = Math.ceil(m / 32);\r\n    var i = -1;\r\n    this.m = m = n * 32;\r\n    this.k = k;\r\n\r\n    if (typedArrays) {\r\n      var kbytes = 1 << Math.ceil(Math.log(Math.ceil(Math.log(m) / Math.LN2 / 8)) / Math.LN2);\r\n      var array = kbytes === 1 ? Uint8Array : kbytes === 2 ? Uint16Array : Uint32Array;\r\n      var kbuffer = new ArrayBuffer(kbytes * k);\r\n      this.buckets = new Int32Array(n);\r\n      if (a) while (++i < n) buckets[i] = a[i];\r\n      this._locations = new Array(kbuffer);\r\n    } else {\r\n      //var buckets = this.buckets = [];\r\n      this.buckets = [];\r\n      if (a) while (++i < n) buckets[i] = a[i];\r\n      else while (++i < n) buckets[i] = 0;\r\n      this._locations = [];\r\n    }\r\n  }\r\n\r\n  // See http://willwhim.wpengine.com/2011/09/03/producing-n-hash-functions-by-hashing-only-once/\r\n  locations(v) {\r\n    var k = this.k;\r\n    var m = this.m;\r\n    var r = this._locations;\r\n    var a = this.fnv1a(v);\r\n    var b = this.fnv1ab(a);\r\n    var x = a % m;\r\n    for (var i = 0; i < k; ++i) {\r\n      r[i] = x < 0 ? (x + m) : x;\r\n      x = (x + b) % m;\r\n    }\r\n    return r;\r\n  }\r\n\r\n  add(v) {\r\n    var l = this.locations(v + '');\r\n    var k = this.k;\r\n    var buckets = this.buckets;\r\n    for (var i = 0; i < k; ++i) buckets[Math.floor(l[i] / 32)] |= 1 << (l[i] % 32);\r\n  }\r\n\r\n  test(v) {\r\n    var l = this.locations(v + '');\r\n    var k = this.k;\r\n    var buckets = this.buckets;\r\n    for (var i = 0; i < k; ++i) {\r\n      var b = l[i];\r\n      if ((buckets[Math.floor(b / 32)] & (1 << (b % 32))) === 0) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // NEW: ORs the BloomFilter from the parameter\r\n  // param has to be a BF; BFs should be same length\r\n  addBloomFilter(v) {\r\n    var buckets = this.buckets;\r\n    var bucketsParam = v.buckets;\r\n    for (var i = 0, n = buckets.length; i < n; ++i) {\r\n      buckets[i] = (buckets[i] | bucketsParam[i]);\r\n    }\r\n  }\r\n\r\n  // Estimated cardinality.\r\n  size() {\r\n    var buckets = this.buckets;\r\n    var bits = 0;\r\n    for (var i = 0, n = buckets.length; i < n; ++i) bits += this.popcnt(buckets[i]);\r\n    return -this.m * Math.log(1 - bits / this.m) / this.k;\r\n  }\r\n\r\n  // http://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetParallel\r\n  popcnt(v) {\r\n    v -= (v >> 1) & 0x55555555;\r\n    v = (v & 0x33333333) + ((v >> 2) & 0x33333333);\r\n    return ((v + (v >> 4) & 0xf0f0f0f) * 0x1010101) >> 24;\r\n  }\r\n\r\n  // Fowler/Noll/Vo hashing.\r\n  fnv1a(v) {\r\n    var a = 2166136261;\r\n    for (var i = 0, n = v.length; i < n; ++i) {\r\n      var c = v.charCodeAt(i);\r\n      var d = c & 0xff00;\r\n      if (d) a = this.fnvmultiply(a ^ d >> 8);\r\n      a = this.fnvmultiply(a ^ c & 0xff);\r\n    }\r\n    return this.fnvmix(a);\r\n  }\r\n\r\n  // a * 16777619 mod 2**32\r\n  fnvmultiply(a) {\r\n    return a + (a << 1) + (a << 4) + (a << 7) + (a << 8) + (a << 24);\r\n  }\r\n\r\n  // One additional iteration of FNV, given a hash.\r\n  fnv1ab(a) {\r\n    return this.fnvmix(this.fnvmultiply(a));\r\n  }\r\n\r\n  // See https://web.archive.org/web/20131019013225/http://home.comcast.net/~bretm/hash/6.html\r\n  fnvmix(a) {\r\n    a += a << 13;\r\n    a ^= a >>> 7;\r\n    a += a << 3;\r\n    a ^= a >>> 17;\r\n    a += a << 5;\r\n    return a & 0xffffffff;\r\n  }\r\n}\r\n\r\nexport default BloomFilter;\r\n"
  },
  {
    "__docId__": 47,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "BloomFilter",
    "memberof": "src/graphconnector/BloomFilter.js",
    "longname": "src/graphconnector/BloomFilter.js~BloomFilter",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/graphconnector/BloomFilter.js",
    "importStyle": "BloomFilter",
    "description": "Implements a Bloom filter.",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Jason Davies; adapted and extended by beierle@tu-berlin.de"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 48,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/graphconnector/BloomFilter.js~BloomFilter",
    "longname": "src/graphconnector/BloomFilter.js~BloomFilter#constructor",
    "access": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [
      {
        "name": "m",
        "types": [
          "*"
        ]
      },
      {
        "name": "k",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 49,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "m",
    "memberof": "src/graphconnector/BloomFilter.js~BloomFilter",
    "longname": "src/graphconnector/BloomFilter.js~BloomFilter#m",
    "access": null,
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "k",
    "memberof": "src/graphconnector/BloomFilter.js~BloomFilter",
    "longname": "src/graphconnector/BloomFilter.js~BloomFilter#k",
    "access": null,
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "buckets",
    "memberof": "src/graphconnector/BloomFilter.js~BloomFilter",
    "longname": "src/graphconnector/BloomFilter.js~BloomFilter#buckets",
    "access": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_locations",
    "memberof": "src/graphconnector/BloomFilter.js~BloomFilter",
    "longname": "src/graphconnector/BloomFilter.js~BloomFilter#_locations",
    "access": null,
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "buckets",
    "memberof": "src/graphconnector/BloomFilter.js~BloomFilter",
    "longname": "src/graphconnector/BloomFilter.js~BloomFilter#buckets",
    "access": null,
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_locations",
    "memberof": "src/graphconnector/BloomFilter.js~BloomFilter",
    "longname": "src/graphconnector/BloomFilter.js~BloomFilter#_locations",
    "access": null,
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "locations",
    "memberof": "src/graphconnector/BloomFilter.js~BloomFilter",
    "longname": "src/graphconnector/BloomFilter.js~BloomFilter#locations",
    "access": null,
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 56,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "add",
    "memberof": "src/graphconnector/BloomFilter.js~BloomFilter",
    "longname": "src/graphconnector/BloomFilter.js~BloomFilter#add",
    "access": null,
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 57,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "test",
    "memberof": "src/graphconnector/BloomFilter.js~BloomFilter",
    "longname": "src/graphconnector/BloomFilter.js~BloomFilter#test",
    "access": null,
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 58,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addBloomFilter",
    "memberof": "src/graphconnector/BloomFilter.js~BloomFilter",
    "longname": "src/graphconnector/BloomFilter.js~BloomFilter#addBloomFilter",
    "access": null,
    "description": null,
    "lineNumber": 115,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 59,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "size",
    "memberof": "src/graphconnector/BloomFilter.js~BloomFilter",
    "longname": "src/graphconnector/BloomFilter.js~BloomFilter#size",
    "access": null,
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 60,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "popcnt",
    "memberof": "src/graphconnector/BloomFilter.js~BloomFilter",
    "longname": "src/graphconnector/BloomFilter.js~BloomFilter#popcnt",
    "access": null,
    "description": null,
    "lineNumber": 132,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 61,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fnv1a",
    "memberof": "src/graphconnector/BloomFilter.js~BloomFilter",
    "longname": "src/graphconnector/BloomFilter.js~BloomFilter#fnv1a",
    "access": null,
    "description": null,
    "lineNumber": 139,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 62,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fnvmultiply",
    "memberof": "src/graphconnector/BloomFilter.js~BloomFilter",
    "longname": "src/graphconnector/BloomFilter.js~BloomFilter#fnvmultiply",
    "access": null,
    "description": null,
    "lineNumber": 151,
    "undocument": true,
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 63,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fnv1ab",
    "memberof": "src/graphconnector/BloomFilter.js~BloomFilter",
    "longname": "src/graphconnector/BloomFilter.js~BloomFilter#fnv1ab",
    "access": null,
    "description": null,
    "lineNumber": 156,
    "undocument": true,
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 64,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fnvmix",
    "memberof": "src/graphconnector/BloomFilter.js~BloomFilter",
    "longname": "src/graphconnector/BloomFilter.js~BloomFilter#fnvmix",
    "access": null,
    "description": null,
    "lineNumber": 161,
    "undocument": true,
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 65,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/graphconnector/GlobalRegistryRecord.js",
    "memberof": null,
    "longname": "src/graphconnector/GlobalRegistryRecord.js",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "content": "/**\r\n* Represents the user's information for the global registry.\r\n* @author beierle@tu-berlin.de\r\n*/\r\nclass GlobalRegistryRecord {\r\n\r\n  /**\r\n   * Constructs a new empty object.\r\n   */\r\n    constructor() {\r\n      this.guid;\r\n      this.salt;\r\n      this.userIDs = [];\r\n      this.lastUpdate;\r\n      this.timeout;\r\n      this.publicKeyPEM;\r\n      this.active;\r\n      this.revoked;\r\n    }\r\n\r\n  /**\r\n   * Constructs a new object representing information about one contact.\r\n   * @returns {Object}  object  A JavaScript Object with all fields for the Global Registry Record.\r\n   */\r\n    getRecord() {\r\n\r\n      // TODO: give error if fields are missing\r\n\r\n      let record = new Object();\r\n      record.guid = this.guid;\r\n      record.salt = this.salt;\r\n      record.userIDs = this.userIds;\r\n      record.lastUpdate = this.lastUpdate;\r\n      record.timeout = this.timeout;\r\n      record.publicKey = this.publicKeyPEM;\r\n      record.active = this.active;\r\n      record.revoked = this.revoked;\r\n\r\n      return record;\r\n    }\r\n\r\n}\r\n\r\nexport default GlobalRegistryRecord;\r\n"
  },
  {
    "__docId__": 66,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "GlobalRegistryRecord",
    "memberof": "src/graphconnector/GlobalRegistryRecord.js",
    "longname": "src/graphconnector/GlobalRegistryRecord.js~GlobalRegistryRecord",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/graphconnector/GlobalRegistryRecord.js",
    "importStyle": "GlobalRegistryRecord",
    "description": "Represents the user's information for the global registry.",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "beierle@tu-berlin.de"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 67,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/graphconnector/GlobalRegistryRecord.js~GlobalRegistryRecord",
    "longname": "src/graphconnector/GlobalRegistryRecord.js~GlobalRegistryRecord#constructor",
    "access": null,
    "description": "Constructs a new empty object.",
    "lineNumber": 10,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 68,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "userIDs",
    "memberof": "src/graphconnector/GlobalRegistryRecord.js~GlobalRegistryRecord",
    "longname": "src/graphconnector/GlobalRegistryRecord.js~GlobalRegistryRecord#userIDs",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getRecord",
    "memberof": "src/graphconnector/GlobalRegistryRecord.js~GlobalRegistryRecord",
    "longname": "src/graphconnector/GlobalRegistryRecord.js~GlobalRegistryRecord#getRecord",
    "access": null,
    "description": "Constructs a new object representing information about one contact.",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object}  object  A JavaScript Object with all fields for the Global Registry Record."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "object  A JavaScript Object with all fields for the Global Registry Record."
    },
    "generator": false
  },
  {
    "__docId__": 70,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/graphconnector/GraphConnector.js",
    "memberof": null,
    "longname": "src/graphconnector/GraphConnector.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import GraphConnectorContactData from './GraphConnectorContactData';\r\nimport BloomFilter from './BloomFilter';\r\nimport GlobalRegistryRecord from './GlobalRegistryRecord';\r\nimport bitcoin from 'bitcoinjs-lib';\r\nimport bip39 from 'bip39';\r\nimport sjcl from 'sjcl';\r\nimport jsrsasign from 'jsrsasign';\r\nimport base64url from 'base64-url';\r\n\r\n/**\r\n* The Graph Connector contains the contact list/address book.\r\n* @author beierle@tu-berlin.de\r\n*/\r\nclass GraphConnector {\r\n\r\n  // TODO: import / export methods\r\n  // TODO: communication with global registry\r\n\r\n  /**\r\n   * Constructs a new and empty Graph Connector.\r\n   */\r\n  constructor() {\r\n    this.contacts = [];\r\n    this.lastCalculationnBloomFilter1Hop = new Date(0).toISOString();\r\n\r\n    this.globalRegistryRecord = new GlobalRegistryRecord();\r\n    this._prvKey;\r\n\r\n    this.groups = [];\r\n    this.residenceLocation;\r\n    this.firstName;\r\n    this.lastName;\r\n  }\r\n\r\n  /**\r\n   * Generates a GUID and returns a mnemonic from which the GUID can be re-created later.\r\n   * @returns  {string}    mnemonic      A string with 16 words.\r\n   */\r\n  generateGUID() {\r\n\r\n    // generate mnemonic and salt\r\n    Buffer.TYPED_ARRAY_SUPPORT = true;\r\n    let mnemonic = bip39.generateMnemonic(160);\r\n\r\n    let saltWord = bip39.generateMnemonic(8);\r\n    this._createKeys(mnemonic, saltWord);\r\n\r\n    // set lasUpdate date\r\n    this.globalRegistryRecord.lastUpdate = new Date();\r\n\r\n    // set defualt timeout\r\n    let timeout = new Date();\r\n    timeout.setMonth(timeout.getMonth() + 120);\r\n    this.globalRegistryRecord.timeout = timeout.toISOString();\r\n\r\n    // set default values\r\n    this.globalRegistryRecord.active = 1;\r\n    this.globalRegistryRecord.revoked = 0;\r\n\r\n    // return mnemonic\r\n    let rtn = mnemonic + ' ' + saltWord;\r\n    return rtn;\r\n  }\r\n\r\n  /**\r\n   * Generates a public/private key pair from a given mnemonic (16 words).\r\n   * Expects a string containing 16 words seperated by single spaces.\r\n   * @param  {string}     mnemonicAndSalt     A string of 16 words.\r\n   */\r\n  useGUID(mnemonicAndSalt) {\r\n    // TODO: check if format is correct and if all words are from bip39 english wordlist\r\n    let lastIndex = mnemonicAndSalt.lastIndexOf(' ');\r\n    let mnemonic = mnemonicAndSalt.substring(0, lastIndex);\r\n    let saltWord = mnemonicAndSalt.substring(lastIndex + 1, mnemonicAndSalt.length);\r\n    this._createKeys(mnemonic, saltWord);\r\n\r\n    // TODO: retrieve current info from Global Registry and fill this.globalRegistryRecord\r\n  }\r\n\r\n  /**\r\n   * Creates the keys from mnemonic and salt. Also sets public key, guid, and salt for globalRegistryRecord.\r\n   * @param  {string}     mnemonic     A string with 15 words.\r\n   * @param  {string}     salt         A word.\r\n   */\r\n  _createKeys(mnemonic, saltWord) {\r\n\r\n    // generate key pair\r\n    let seed = bip39.mnemonicToSeed(mnemonic);\r\n    Buffer.TYPED_ARRAY_SUPPORT = false;\r\n    let hdnode = bitcoin.HDNode.fromSeedBuffer(seed);\r\n    let ecparams = KJUR.crypto.ECParameterDB.getByName('secp256k1');\r\n    let biPrv = hdnode.keyPair.d; // private key big integer\r\n    let epPub = ecparams.G.multiply(biPrv); // d*G\r\n    let biX = epPub.getX().toBigInteger(); // x from Q\r\n    let biY = epPub.getY().toBigInteger(); // y from Q\r\n    let charlen = ecparams.keylen / 4;\r\n    let hPrv = ('0000000000' + biPrv.toString(16)).slice(-charlen);\r\n    let hX   = ('0000000000' + biX.toString(16)).slice(-charlen);\r\n    let hY   = ('0000000000' + biY.toString(16)).slice(-charlen);\r\n    let hPub = '04' + hX + hY;\r\n    this._prvKey = new KJUR.crypto.ECDSA({curve: 'secp256k1'});\r\n    this._prvKey.setPrivateKeyHex(hPrv);\r\n    this._prvKey.isPrivate = true;\r\n    this._prvKey.isPublic = false;\r\n    let pubKey = new KJUR.crypto.ECDSA({curve: 'secp256k1'});\r\n    pubKey.setPublicKeyHex(hPub);\r\n    pubKey.isPrivate = false;\r\n    pubKey.isPublic = true;\r\n    let publicKeyPEM = jsrsasign.KEYUTIL.getPEM(pubKey, 'PKCS8PUB');\r\n    publicKeyPEM = publicKeyPEM.replace(/(\\r\\n|\\n|\\r)/gm, '');\r\n    this.globalRegistryRecord.publicKeyPEM = publicKeyPEM;\r\n\r\n    // generate salt\r\n    let saltHashedBitArray = sjcl.hash.sha256.hash(saltWord);\r\n    let salt = sjcl.codec.base64.fromBits(saltHashedBitArray);\r\n    this.globalRegistryRecord.salt = salt;\r\n\r\n    // generate GUID\r\n    let iterations = 10000;\r\n    let guidBitArray = sjcl.misc.pbkdf2(this.globalRegistryRecord.publicKeyPEM, salt, iterations);\r\n    let guid = sjcl.codec.base64url.fromBits(guidBitArray);\r\n    this.globalRegistryRecord.guid = guid;\r\n  }\r\n\r\n  /**\r\n   * SignGenerates a public/private key pair from a given mnemonic.\r\n   * @returns  {string}     JWT     JSON Web Token ready to commit to Global Registry.\r\n   */\r\n  signGlobalRegistryRecord() {\r\n\r\n    let record = this.globalRegistryRecord.getRecord();\r\n    let recordString = JSON.stringify(record);\r\n    let recordStringBase64 = base64url.encode(recordString);\r\n\r\n    let jwt = KJUR.jws.JWS.sign(null, {alg: 'ES256'}, {data: recordStringBase64}, this._prvKey);\r\n    return jwt;\r\n  }\r\n\r\n  /**\r\n   * Adds a UserID for the user.\r\n   * @param  {string}     userID          The UserID for a Domain Registry to add for the user.\r\n   */\r\n  addUserID(userID) {\r\n    // check if already inside\r\n    let found = false;\r\n    for (let i = 0; i < this.globalRegistryRecord.userIDs.length; i++) {\r\n      if (this.globalRegistryRecord.userIDs == userID) {\r\n        found = true;\r\n      }\r\n    }\r\n    if (!found) {\r\n      this.globalRegistryRecord.userIDs.push(userID);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes a UserID for the user.\r\n   * @param  {string}     userID          The UserID to remove.\r\n   */\r\n  removeUserID(userID) {\r\n    for (let i = 0; i < this.globalRegistryRecord.userIDs.length; i++) {\r\n      if (this.globalRegistryRecord.userIDs == userID) {\r\n        this.globalRegistryRecord.userIDs.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a contact to the Graph Connector.\r\n   * @param  {string}   guid          GUID of the new contact.\r\n   * @param  {string}   firstName     First name of the new contact.\r\n   * @param  {string}   lastname      Last name of the new contact.\r\n   */\r\n  addContact(guid, firstName, lastName) {\r\n\r\n    // TODO: what if two contacts have the same GUID?\r\n    // TODO: reject invalid GUIDs\r\n\r\n    this.contacts.push(new GraphConnectorContactData(guid, firstName, lastName));\r\n  }\r\n\r\n  /**\r\n   * Remove a contact from the Graph Connector.\r\n   * @param  {string}     guid      GUID of the user to be removed.\r\n   */\r\n  removeContact(guid) {\r\n    // remove from contacts\r\n    for (let i = 0; i < this.contacts.length; i++) {\r\n      if (this.contacts[i].guid == guid) {\r\n        this.contacts.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    // re-calculate BF1hop\r\n    this.calculateBloomFilter1Hop();\r\n  }\r\n\r\n  /**\r\n   * Calculates the Bloom filter containing all non-private contacts.\r\n   */\r\n  calculateBloomFilter1Hop() {\r\n    let bf = new BloomFilter(\r\n      431328,   // number of bits to allocate. With 30000 entries, we have a false positive rate of 0.1 %.\r\n      10        // number of hash functions.\r\n    );\r\n    for (let i = 0; i < this.contacts.length; i++) {\r\n      if (!this.contacts[i].privateContact) {\r\n        bf.add(this.contacts[i].guid);\r\n      }\r\n    }\r\n    this.contactsBloomFilter1Hop = bf;\r\n    this.lastCalculationnBloomFilter1Hop = new Date().toISOString();\r\n  }\r\n\r\n  /**\r\n   * Gets contacts by name.\r\n   * @param  {string}   name    First or last name to look for in the contact list.\r\n   * @returns  {array}   matchingContacts       Contacts matching the given name. The format is: Contacts<GraphConnectorContactData>.\r\n   */\r\n  getContact(name) {\r\n    // TODO: optimize, e.g., find misspelled people\r\n    let rtnArray = [];\r\n    for (let i = 0; i < this.contacts.length; i++) {\r\n      if (this.contacts[i].firstName == name || this.contacts[i].lastName == name) {\r\n        rtnArray.push(this.contacts[i]);\r\n      }\r\n    }\r\n    return rtnArray;\r\n  }\r\n\r\n  /**\r\n   * Checks, if the given GUID is known and returns a list of contacs that are direct connections as well as a list of contacts that (most likely) know the given contact.\r\n   * @param  {string}     guid      GUID of the contact to look for.\r\n   * @returns  {array}    relatedContacts     List of related direct contacts and of related friends-of-friends contacts.The format is: RelatedContacts<Direct<GraphConnectorContactData>,FoF<GraphConnectorContactData>>.\r\n   */\r\n  checkGUID(guid) {\r\n    let directContactsArray = [];\r\n    let fofContactsArray = [];\r\n    for (let i = 0; i < this.contacts.length; i++) {\r\n      if (this.contacts[i].guid == guid) {\r\n        directContactsArray.push(this.contacts[i]);\r\n      }\r\n      let bf1hop = this.contacts[i].contactsBloomFilter1Hop;\r\n      if (bf1hop !== undefined) {\r\n        if (bf1hop.test(guid)) {\r\n          fofContactsArray.push(this.contacts[i]);\r\n        }\r\n      }\r\n    }\r\n    let rtnArray = [];\r\n    rtnArray.push(directContactsArray, fofContactsArray);\r\n    return rtnArray;\r\n  }\r\n\r\n  // TODO: exportGraphData(?){}\r\n  // TODO: importGraphData(?){}\r\n\r\n}\r\n\r\nexport default GraphConnector;\r\n"
  },
  {
    "__docId__": 71,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "GraphConnector",
    "memberof": "src/graphconnector/GraphConnector.js",
    "longname": "src/graphconnector/GraphConnector.js~GraphConnector",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/graphconnector/GraphConnector.js",
    "importStyle": "GraphConnector",
    "description": "The Graph Connector contains the contact list/address book.",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "beierle@tu-berlin.de"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 72,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/graphconnector/GraphConnector.js~GraphConnector",
    "longname": "src/graphconnector/GraphConnector.js~GraphConnector#constructor",
    "access": null,
    "description": "Constructs a new and empty Graph Connector.",
    "lineNumber": 22,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 73,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "contacts",
    "memberof": "src/graphconnector/GraphConnector.js~GraphConnector",
    "longname": "src/graphconnector/GraphConnector.js~GraphConnector#contacts",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "lastCalculationnBloomFilter1Hop",
    "memberof": "src/graphconnector/GraphConnector.js~GraphConnector",
    "longname": "src/graphconnector/GraphConnector.js~GraphConnector#lastCalculationnBloomFilter1Hop",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "globalRegistryRecord",
    "memberof": "src/graphconnector/GraphConnector.js~GraphConnector",
    "longname": "src/graphconnector/GraphConnector.js~GraphConnector#globalRegistryRecord",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "groups",
    "memberof": "src/graphconnector/GraphConnector.js~GraphConnector",
    "longname": "src/graphconnector/GraphConnector.js~GraphConnector#groups",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "generateGUID",
    "memberof": "src/graphconnector/GraphConnector.js~GraphConnector",
    "longname": "src/graphconnector/GraphConnector.js~GraphConnector#generateGUID",
    "access": null,
    "description": "Generates a GUID and returns a mnemonic from which the GUID can be re-created later.",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": " {string}    mnemonic      A string with 16 words."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "mnemonic      A string with 16 words."
    },
    "generator": false
  },
  {
    "__docId__": 78,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "useGUID",
    "memberof": "src/graphconnector/GraphConnector.js~GraphConnector",
    "longname": "src/graphconnector/GraphConnector.js~GraphConnector#useGUID",
    "access": null,
    "description": "Generates a public/private key pair from a given mnemonic (16 words).\nExpects a string containing 16 words seperated by single spaces.",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "mnemonicAndSalt",
        "description": "A string of 16 words."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 79,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_createKeys",
    "memberof": "src/graphconnector/GraphConnector.js~GraphConnector",
    "longname": "src/graphconnector/GraphConnector.js~GraphConnector#_createKeys",
    "access": null,
    "description": "Creates the keys from mnemonic and salt. Also sets public key, guid, and salt for globalRegistryRecord.",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "mnemonic",
        "description": "A string with 15 words."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "salt",
        "description": "A word."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 80,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_prvKey",
    "memberof": "src/graphconnector/GraphConnector.js~GraphConnector",
    "longname": "src/graphconnector/GraphConnector.js~GraphConnector#_prvKey",
    "access": null,
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "signGlobalRegistryRecord",
    "memberof": "src/graphconnector/GraphConnector.js~GraphConnector",
    "longname": "src/graphconnector/GraphConnector.js~GraphConnector#signGlobalRegistryRecord",
    "access": null,
    "description": "SignGenerates a public/private key pair from a given mnemonic.",
    "lineNumber": 129,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": " {string}     JWT     JSON Web Token ready to commit to Global Registry."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "JWT     JSON Web Token ready to commit to Global Registry."
    },
    "generator": false
  },
  {
    "__docId__": 82,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addUserID",
    "memberof": "src/graphconnector/GraphConnector.js~GraphConnector",
    "longname": "src/graphconnector/GraphConnector.js~GraphConnector#addUserID",
    "access": null,
    "description": "Adds a UserID for the user.",
    "lineNumber": 143,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userID",
        "description": "The UserID for a Domain Registry to add for the user."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 83,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeUserID",
    "memberof": "src/graphconnector/GraphConnector.js~GraphConnector",
    "longname": "src/graphconnector/GraphConnector.js~GraphConnector#removeUserID",
    "access": null,
    "description": "Removes a UserID for the user.",
    "lineNumber": 160,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userID",
        "description": "The UserID to remove."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 84,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addContact",
    "memberof": "src/graphconnector/GraphConnector.js~GraphConnector",
    "longname": "src/graphconnector/GraphConnector.js~GraphConnector#addContact",
    "access": null,
    "description": "Add a contact to the Graph Connector.",
    "lineNumber": 174,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "guid",
        "description": "GUID of the new contact."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "firstName",
        "description": "First name of the new contact."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "lastname",
        "description": "Last name of the new contact."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 85,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeContact",
    "memberof": "src/graphconnector/GraphConnector.js~GraphConnector",
    "longname": "src/graphconnector/GraphConnector.js~GraphConnector#removeContact",
    "access": null,
    "description": "Remove a contact from the Graph Connector.",
    "lineNumber": 186,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "guid",
        "description": "GUID of the user to be removed."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 86,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "calculateBloomFilter1Hop",
    "memberof": "src/graphconnector/GraphConnector.js~GraphConnector",
    "longname": "src/graphconnector/GraphConnector.js~GraphConnector#calculateBloomFilter1Hop",
    "access": null,
    "description": "Calculates the Bloom filter containing all non-private contacts.",
    "lineNumber": 201,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 87,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "contactsBloomFilter1Hop",
    "memberof": "src/graphconnector/GraphConnector.js~GraphConnector",
    "longname": "src/graphconnector/GraphConnector.js~GraphConnector#contactsBloomFilter1Hop",
    "access": null,
    "description": null,
    "lineNumber": 211,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "lastCalculationnBloomFilter1Hop",
    "memberof": "src/graphconnector/GraphConnector.js~GraphConnector",
    "longname": "src/graphconnector/GraphConnector.js~GraphConnector#lastCalculationnBloomFilter1Hop",
    "access": null,
    "description": null,
    "lineNumber": 212,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getContact",
    "memberof": "src/graphconnector/GraphConnector.js~GraphConnector",
    "longname": "src/graphconnector/GraphConnector.js~GraphConnector#getContact",
    "access": null,
    "description": "Gets contacts by name.",
    "lineNumber": 220,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": " {array}   matchingContacts       Contacts matching the given name. The format is: Contacts<GraphConnectorContactData>."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "First or last name to look for in the contact list."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "matchingContacts       Contacts matching the given name. The format is: Contacts<GraphConnectorContactData>."
    },
    "generator": false
  },
  {
    "__docId__": 90,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "checkGUID",
    "memberof": "src/graphconnector/GraphConnector.js~GraphConnector",
    "longname": "src/graphconnector/GraphConnector.js~GraphConnector#checkGUID",
    "access": null,
    "description": "Checks, if the given GUID is known and returns a list of contacs that are direct connections as well as a list of contacts that (most likely) know the given contact.",
    "lineNumber": 236,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": " {array}    relatedContacts     List of related direct contacts and of related friends-of-friends contacts.The format is: RelatedContacts<Direct<GraphConnectorContactData>,FoF<GraphConnectorContactData>>."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "guid",
        "description": "GUID of the contact to look for."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "relatedContacts     List of related direct contacts and of related friends-of-friends contacts.The format is: RelatedContacts<Direct<GraphConnectorContactData>,FoF<GraphConnectorContactData>>."
    },
    "generator": false
  },
  {
    "__docId__": 91,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/graphconnector/GraphConnectorContactData.js",
    "memberof": null,
    "longname": "src/graphconnector/GraphConnectorContactData.js",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "content": "/**\r\n* Represents information about a contact.\r\n* @author beierle@tu-berlin.de\r\n*/\r\nclass GraphConnectorContactData {\r\n\r\n  /**\r\n   * Constructs a new object representing information about one contact.\r\n   * @param  {String}     guid        The GUID of the new contact.\r\n   * @param  {String}   firstName   The first name of the new contact.\r\n   * @param  {String}   lastName    The last name of the new contact.\r\n   */\r\n    constructor(guid, firstName, lastName) {\r\n      this._guid = guid;\r\n      this._userIDs = [];\r\n      this._firstName = firstName;\r\n      this._lastName = lastName;\r\n      this._privateContact = false;\r\n      this._lastSyncBloomFilter1Hop = new Date(0).toISOString();\r\n      this._residenceLocation;\r\n    }\r\n\r\n    /**\r\n     * Returns the GUID.\r\n     * @returns  {String}     GUID        GUID of the contact.\r\n     */\r\n    get guid() {\r\n      return this._guid;\r\n    }\r\n\r\n    /**\r\n     * Sets the GUID.\r\n     * @param  {String}     GUID        GUID of the contat.\r\n     */\r\n    set guid(guid) {\r\n      this._guid = guid;\r\n    }\r\n\r\n    /**\r\n     * Returns the user IDs.\r\n     * @returns  {List<String>}     userIDs        UserIDs of the contact.\r\n     */\r\n    get userIDs() {\r\n      return this._userIDs;\r\n    }\r\n\r\n    /**\r\n     * Sets the userIDs.\r\n     * @param  {List<String>}     userIDs        UserIDs of the contat.\r\n     */\r\n    set userIDs(userIDs) {\r\n      this._userIDs = userIDs;\r\n    }\r\n\r\n    /**\r\n     * Returns the first name.\r\n     * @returns  {String}     firstName        First name of the contact.\r\n     */\r\n    get firstName() {\r\n      return this._firstName;\r\n    }\r\n\r\n    /**\r\n     * Sets the first name.\r\n     * @param  {String}     firstName        First name of the contat.\r\n     */\r\n    set firstName(firstName) {\r\n      this._firstName = firstName;\r\n    }\r\n\r\n    /**\r\n     * Returns the last name.\r\n     * @returns  {String}     lastName        Last name of the contact.\r\n     */\r\n    get lastName() {\r\n      return this._lastName;\r\n    }\r\n\r\n    /**\r\n     * Sets the last name.\r\n     * @param  {String}     lastName        Last name of the contat.\r\n     */\r\n    set lastName(lastName) {\r\n      this._lastName = lastName;\r\n    }\r\n\r\n    /**\r\n     * Returns the privacy status of the contact.\r\n     * @returns  {Boolean}     privateContact        True/false value indicating the privacy status of the contact.\r\n     */\r\n    get privateContact() {\r\n      return this._privateContact;\r\n    }\r\n\r\n    /**\r\n     * Sets the privacy status of the contact according to the given Boolean value.\r\n     * @param  {Boolean}     boolPrivate        True/false value indicating the privacy status of the contact.\r\n     */\r\n    set privateContact(boolPrivate) {\r\n      this._privateContact = boolPrivate;\r\n    }\r\n\r\n    /**\r\n     * Returns the Bloom filter containing the hashed GUIDs of the contacts for the contact.\r\n     * @returns  {BloomFilter}     bf        Bloom filter for the contact.\r\n     */\r\n    get contactsBloomFilter1Hop() {\r\n      return this._contactsBloomFilter1Hop;\r\n    }\r\n\r\n    /**\r\n     * Sets the friends-of-friends Bloom filter containing the hashed GUIDs of the contacts for the contact.\r\n     * @param  {BloomFilter}     bf        Bloom filter for the contact.\r\n     */\r\n    set contactsBloomFilter1Hop(bf) {\r\n      this._contactsBloomFilter1Hop = bf;\r\n    }\r\n\r\n    /**\r\n     * Returns the geohash of the residence location.\r\n     * @returns  {String}     geohash        Geohash of the residence location.\r\n     */\r\n    get residenceLocation() {\r\n      return this._residenceLocation;\r\n    }\r\n\r\n    /**\r\n     * Sets the geohash of the residence location.\r\n     * @param  {String}     geohash        Geohash of the residence location.\r\n     */\r\n    set residenceLocation(geohash) {\r\n      this._residenceLocation = geohash;\r\n    }\r\n\r\n}\r\n\r\nexport default GraphConnectorContactData;\r\n"
  },
  {
    "__docId__": 92,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "GraphConnectorContactData",
    "memberof": "src/graphconnector/GraphConnectorContactData.js",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/graphconnector/GraphConnectorContactData.js",
    "importStyle": "GraphConnectorContactData",
    "description": "Represents information about a contact.",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "beierle@tu-berlin.de"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 93,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#constructor",
    "access": null,
    "description": "Constructs a new object representing information about one contact.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "guid",
        "description": "The GUID of the new contact."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "firstName",
        "description": "The first name of the new contact."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "lastName",
        "description": "The last name of the new contact."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 94,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_guid",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#_guid",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_userIDs",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#_userIDs",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_firstName",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#_firstName",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_lastName",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#_lastName",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_privateContact",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#_privateContact",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 99,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_lastSyncBloomFilter1Hop",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#_lastSyncBloomFilter1Hop",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "guid",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#guid",
    "access": null,
    "description": "Returns the GUID.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": " {String}     GUID        GUID of the contact."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "GUID        GUID of the contact."
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 101,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "guid",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#guid",
    "access": null,
    "description": "Sets the GUID.",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "GUID",
        "description": "GUID of the contat."
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 102,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_guid",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#_guid",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "userIDs",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#userIDs",
    "access": null,
    "description": "Returns the user IDs.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": " {List<String>}     userIDs        UserIDs of the contact."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "List<String>"
      ],
      "spread": false,
      "description": "userIDs        UserIDs of the contact."
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 104,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "userIDs",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#userIDs",
    "access": null,
    "description": "Sets the userIDs.",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "List<String>"
        ],
        "spread": false,
        "optional": false,
        "name": "userIDs",
        "description": "UserIDs of the contat."
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 105,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_userIDs",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#_userIDs",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "firstName",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#firstName",
    "access": null,
    "description": "Returns the first name.",
    "lineNumber": 59,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": " {String}     firstName        First name of the contact."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "firstName        First name of the contact."
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 107,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "firstName",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#firstName",
    "access": null,
    "description": "Sets the first name.",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "firstName",
        "description": "First name of the contat."
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 108,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_firstName",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#_firstName",
    "access": null,
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "lastName",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#lastName",
    "access": null,
    "description": "Returns the last name.",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": " {String}     lastName        Last name of the contact."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "lastName        Last name of the contact."
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 110,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "lastName",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#lastName",
    "access": null,
    "description": "Sets the last name.",
    "lineNumber": 83,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "lastName",
        "description": "Last name of the contat."
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 111,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_lastName",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#_lastName",
    "access": null,
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 112,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "privateContact",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#privateContact",
    "access": null,
    "description": "Returns the privacy status of the contact.",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": " {Boolean}     privateContact        True/false value indicating the privacy status of the contact."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "privateContact        True/false value indicating the privacy status of the contact."
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 113,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "privateContact",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#privateContact",
    "access": null,
    "description": "Sets the privacy status of the contact according to the given Boolean value.",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "boolPrivate",
        "description": "True/false value indicating the privacy status of the contact."
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 114,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_privateContact",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#_privateContact",
    "access": null,
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "contactsBloomFilter1Hop",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#contactsBloomFilter1Hop",
    "access": null,
    "description": "Returns the Bloom filter containing the hashed GUIDs of the contacts for the contact.",
    "lineNumber": 107,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": " {BloomFilter}     bf        Bloom filter for the contact."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BloomFilter"
      ],
      "spread": false,
      "description": "bf        Bloom filter for the contact."
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 116,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "contactsBloomFilter1Hop",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#contactsBloomFilter1Hop",
    "access": null,
    "description": "Sets the friends-of-friends Bloom filter containing the hashed GUIDs of the contacts for the contact.",
    "lineNumber": 115,
    "params": [
      {
        "nullable": null,
        "types": [
          "BloomFilter"
        ],
        "spread": false,
        "optional": false,
        "name": "bf",
        "description": "Bloom filter for the contact."
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 117,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_contactsBloomFilter1Hop",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#_contactsBloomFilter1Hop",
    "access": null,
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "residenceLocation",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#residenceLocation",
    "access": null,
    "description": "Returns the geohash of the residence location.",
    "lineNumber": 123,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": " {String}     geohash        Geohash of the residence location."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "geohash        Geohash of the residence location."
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 119,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "residenceLocation",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#residenceLocation",
    "access": null,
    "description": "Sets the geohash of the residence location.",
    "lineNumber": 131,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "geohash",
        "description": "Geohash of the residence location."
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 120,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_residenceLocation",
    "memberof": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData",
    "longname": "src/graphconnector/GraphConnectorContactData.js~GraphConnectorContactData#_residenceLocation",
    "access": null,
    "description": null,
    "lineNumber": 132,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/identity/IdentityModule.js",
    "memberof": null,
    "longname": "src/identity/IdentityModule.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import hello from 'hellojs';\r\n\r\n/**\r\n* IdentityModule\r\n*\r\n* Initial specification: D4.1\r\n*\r\n* The IdentityModule is a component managing user Identity. It downloads, instantiates\r\n* and manage Identity Provider Proxy (IdP) for its own user identity or for external\r\n* user identity verification.\r\n*\r\n*/\r\nclass IdentityModule {\r\n\r\n  /**\r\n  * USER'S OWN IDENTITY\r\n  */\r\n  constructor() {\r\n    let _this = this;\r\n    //to store items with this format: {identity: identityURL, token: tokenID}\r\n    _this.identities = [];\r\n  }\r\n\r\n  /**\r\n  * Register a new Identity with an Identity Provider\r\n  */\r\n  registerIdentity() {\r\n    // Body...\r\n  }\r\n\r\n  /**\r\n  * In relation with a classical Relying Party: Registration\r\n  */\r\n  registerWithRP() {\r\n    // Body...\r\n  }\r\n\r\n  /**\r\n  * Find and return all available identities that can be associated to the Hyperty Instance\r\n  * @return {Array<Identities>}         Array         Identities\r\n  */\r\n  getIdentities() {\r\n    let _this = this;\r\n    return _this.identities;\r\n  }\r\n\r\n  /**\r\n  * In relation with a classical Relying Party: Login\r\n  * @param  {Identifier}      identifier      identifier\r\n  * @param  {Scope}           scope           scope\r\n  * @return {Promise}         Promise         IDToken\r\n  */\r\n  loginWithRP(identifier, scope) {\r\n    let _this = this;\r\n\r\n    /*\r\n      When calling this function, if everything is fine, a small pop-up will open requesting a login with a google account. After the login is made, the pop-up will close and the function will return the ID token.\r\n      This function was tested with the URL: http://127.0.0.1:8080/ and with the same redirect URI\r\n\r\n    \tIn case the redirect URI is not accepted or is required to add others redirect URIs, a little information is provided to fix the problem:\r\n\r\n    \tSo that an application can use Google's OAuth 2.0 authentication system for user login,\r\n    \tfirst is required to set up a project in the Google Developers Console to obtain OAuth 2.0 credentials and set a redirect URI.\r\n    \tA test account was created to set the project in the Google Developers Console to obtain OAuth 2.0 credentials,\twith the following credentials:\r\n\t        \tusername: openidtest10@gmail.com\r\n\t          password: testOpenID10\r\n\r\n    \tTo add more URI's, follow the steps:\r\n    \t1º choose the project ( can be the My OpenID Project)\t from  https://console.developers.google.com/projectselector/apis/credentials using the credentials provided above.\r\n    \t2º Open The Client Web 1 listed in OAuth 2.0 Client ID's\r\n    \t3º Add the URI  in the authorized redirect URI section.\r\n      4º change the REDIRECT parameter bellow with the pretended URI\r\n\r\n      identityModule._hello.init({google: \"808329566012-tqr8qoh111942gd2kg007t0s8f277roi.apps.googleusercontent.com\"});\r\n      identityModule._hello(\"google\").login();\r\n\r\n    */\r\n\r\n    let VALIDURL   =   'https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=';\r\n    let USERINFURL =   'https://www.googleapis.com/oauth2/v1/userinfo?access_token=';\r\n    let acToken;\r\n    let tokenType;\r\n    let expiresIn;\r\n    let user;\r\n    let tokenID;\r\n    let infoToken;\r\n    let loggedIn = false;\r\n\r\n    return new Promise(function(resolve, reject) {\r\n\r\n      if (_this.infoToken !== undefined) {\r\n        //TODO verify whether the token is still valid or not.\r\n        return resolve(_this.infoToken);\r\n      }\r\n\r\n      //function to validate the access token received during the authentication\r\n      function validateToken(token) {\r\n        let req = new XMLHttpRequest();\r\n        req.open('GET', VALIDURL + token, true);\r\n\r\n        req.onreadystatechange = function(e) {\r\n          if (req.readyState == 4) {\r\n            if (req.status == 200) {\r\n              getInfoToken(token);\r\n            } else if (req.status == 400) {\r\n              reject('There was an error processing the token');\r\n            } else {\r\n              reject('something else other than 200 was returned');\r\n            }\r\n          }\r\n        };\r\n        req.send();\r\n\r\n      }\r\n\r\n      //function to exchange the access token with an ID Token containing the information\r\n      function getInfoToken(token) {\r\n        let req = new XMLHttpRequest();\r\n        req.open('GET', USERINFURL + token, true);\r\n\r\n        req.onreadystatechange = function(e) {\r\n          if (req.readyState === 4) {\r\n            if (req.status === 200) {\r\n              infoToken = JSON.parse(req.responseText);\r\n              _this.infoToken = infoToken;\r\n              let email = infoToken.email;\r\n\r\n              //contruct the identityURL to be defined as in specification\r\n              // model: user://<idpdomain>/<user-identifier>\r\n              let identityURL = 'user://' + email.substring(email.indexOf('@') + 1, email.length) + '/' + email.substring(0, email.indexOf('@'));\r\n\r\n              //TODO remove later the 'token' field key\r\n              let identityBundle = {identity: identityURL, token: infoToken, accessToken: token, idToken: {}, infoToken: infoToken};\r\n\r\n              getIDToken(token, identityBundle);\r\n            } else if (req.status === 400) {\r\n              reject('There was an error processing the token');\r\n            } else {\r\n              reject('something else other than 200 was returned');\r\n            }\r\n          }\r\n        };\r\n        req.send();\r\n      }\r\n\r\n      function getIDToken(token, identityBundle) {\r\n        let req = new XMLHttpRequest();\r\n        req.open('GET', VALIDURL + token, true);\r\n\r\n        req.onreadystatechange = function(e) {\r\n          if (req.readyState === 4) {\r\n            if (req.status === 200) {\r\n              tokenID = JSON.parse(req.responseText);\r\n\r\n              identityBundle.idToken = tokenID;\r\n              _this.identities.push(identityBundle);\r\n              resolve(identityBundle.token);\r\n\r\n            } else if (req.status === 400) {\r\n              reject('There was an error processing the token');\r\n            } else {\r\n              reject('something else other than 200 was returned');\r\n            }\r\n          }\r\n        };\r\n        req.send();\r\n      }\r\n\r\n      hello.init({google: '808329566012-tqr8qoh111942gd2kg007t0s8f277roi.apps.googleusercontent.com'});\r\n      hello('google').login({scope: 'email'}).then(function(token) {\r\n\r\n        validateToken(token.authResponse.access_token);\r\n      }, function(error) {\r\n        console.log('errorValidating ', error);\r\n        reject(error);\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  /**\r\n  * In relation with a Hyperty Instance: Associate identity\r\n  */\r\n  setHypertyIdentity() {\r\n    // Body...\r\n  }\r\n\r\n  /**\r\n  * Generates an Identity Assertion for a call session\r\n  * @param  {DOMString} contents     contents\r\n  * @param  {DOMString} origin       origin\r\n  * @param  {DOMString} usernameHint usernameHint\r\n  * @return {IdAssertion}              IdAssertion\r\n  */\r\n  generateAssertion(contents, origin, usernameHint) {\r\n    // Body...\r\n  }\r\n\r\n  /**\r\n  * OTHER USER'S IDENTITY\r\n  */\r\n\r\n  /**\r\n  * Verification of a received IdAssertion validity\r\n  * @param  {DOMString} assertion assertion\r\n  */\r\n  validateAssertion(assertion) {\r\n    // Body...\r\n  }\r\n\r\n  /**\r\n  * Trust level evaluation of a received IdAssertion\r\n  * @param  {DOMString} assertion assertion\r\n  */\r\n  getAssertionTrustLevel(assertion) {\r\n    // Body...\r\n  }\r\n\r\n}\r\n\r\nexport default IdentityModule;\r\n"
  },
  {
    "__docId__": 122,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "IdentityModule",
    "memberof": "src/identity/IdentityModule.js",
    "longname": "src/identity/IdentityModule.js~IdentityModule",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/identity/IdentityModule.js",
    "importStyle": "IdentityModule",
    "description": "IdentityModule\nInitial specification: D4.1\nThe IdentityModule is a component managing user Identity. It downloads, instantiates\nand manage Identity Provider Proxy (IdP) for its own user identity or for external\nuser identity verification.",
    "lineNumber": 13,
    "interface": false
  },
  {
    "__docId__": 123,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/identity/IdentityModule.js~IdentityModule",
    "longname": "src/identity/IdentityModule.js~IdentityModule#constructor",
    "access": null,
    "description": "USER'S OWN IDENTITY",
    "lineNumber": 18,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 124,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "registerIdentity",
    "memberof": "src/identity/IdentityModule.js~IdentityModule",
    "longname": "src/identity/IdentityModule.js~IdentityModule#registerIdentity",
    "access": null,
    "description": "Register a new Identity with an Identity Provider",
    "lineNumber": 27,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 125,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "registerWithRP",
    "memberof": "src/identity/IdentityModule.js~IdentityModule",
    "longname": "src/identity/IdentityModule.js~IdentityModule#registerWithRP",
    "access": null,
    "description": "In relation with a classical Relying Party: Registration",
    "lineNumber": 34,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 126,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getIdentities",
    "memberof": "src/identity/IdentityModule.js~IdentityModule",
    "longname": "src/identity/IdentityModule.js~IdentityModule#getIdentities",
    "access": null,
    "description": "Find and return all available identities that can be associated to the Hyperty Instance",
    "lineNumber": 42,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Array<Identities>"
      ],
      "spread": false,
      "description": "Array         Identities"
    },
    "generator": false
  },
  {
    "__docId__": 127,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "loginWithRP",
    "memberof": "src/identity/IdentityModule.js~IdentityModule",
    "longname": "src/identity/IdentityModule.js~IdentityModule#loginWithRP",
    "access": null,
    "description": "In relation with a classical Relying Party: Login",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "Identifier"
        ],
        "spread": false,
        "optional": false,
        "name": "identifier",
        "description": "identifier"
      },
      {
        "nullable": null,
        "types": [
          "Scope"
        ],
        "spread": false,
        "optional": false,
        "name": "scope",
        "description": "scope"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise         IDToken"
    },
    "generator": false
  },
  {
    "__docId__": 128,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setHypertyIdentity",
    "memberof": "src/identity/IdentityModule.js~IdentityModule",
    "longname": "src/identity/IdentityModule.js~IdentityModule#setHypertyIdentity",
    "access": null,
    "description": "In relation with a Hyperty Instance: Associate identity",
    "lineNumber": 184,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 129,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "generateAssertion",
    "memberof": "src/identity/IdentityModule.js~IdentityModule",
    "longname": "src/identity/IdentityModule.js~IdentityModule#generateAssertion",
    "access": null,
    "description": "Generates an Identity Assertion for a call session",
    "lineNumber": 195,
    "params": [
      {
        "nullable": null,
        "types": [
          "DOMString"
        ],
        "spread": false,
        "optional": false,
        "name": "contents",
        "description": "contents"
      },
      {
        "nullable": null,
        "types": [
          "DOMString"
        ],
        "spread": false,
        "optional": false,
        "name": "origin",
        "description": "origin"
      },
      {
        "nullable": null,
        "types": [
          "DOMString"
        ],
        "spread": false,
        "optional": false,
        "name": "usernameHint",
        "description": "usernameHint"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IdAssertion"
      ],
      "spread": false,
      "description": "IdAssertion"
    },
    "generator": false
  },
  {
    "__docId__": 130,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "validateAssertion",
    "memberof": "src/identity/IdentityModule.js~IdentityModule",
    "longname": "src/identity/IdentityModule.js~IdentityModule#validateAssertion",
    "access": null,
    "description": "Verification of a received IdAssertion validity",
    "lineNumber": 207,
    "params": [
      {
        "nullable": null,
        "types": [
          "DOMString"
        ],
        "spread": false,
        "optional": false,
        "name": "assertion",
        "description": "assertion"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 131,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAssertionTrustLevel",
    "memberof": "src/identity/IdentityModule.js~IdentityModule",
    "longname": "src/identity/IdentityModule.js~IdentityModule#getAssertionTrustLevel",
    "access": null,
    "description": "Trust level evaluation of a received IdAssertion",
    "lineNumber": 215,
    "params": [
      {
        "nullable": null,
        "types": [
          "DOMString"
        ],
        "spread": false,
        "optional": false,
        "name": "assertion",
        "description": "assertion"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 132,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/minibus.js",
    "memberof": null,
    "longname": "src/minibus.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import MiniBus from './bus/MiniBus';\r\nexport default MiniBus;\r\n"
  },
  {
    "__docId__": 133,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/persistence/PersistenceManager.js",
    "memberof": null,
    "longname": "src/persistence/PersistenceManager.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import localStorage from 'universal-localstorage'\r\n\r\nconst persistenceManager = {\r\n    set: (key, version, value) => {\r\n            localStorage.setItem(key, JSON.stringify({ 'version': version, 'value': value }))\r\n         },\r\n\r\n    get: (key) => {\r\n            return JSON.parse(localStorage.getItem(key)).value\r\n         },\r\n\r\n    getVersion: (key) => {\r\n            return JSON.parse(localStorage.getItem(key)).version\r\n         },\r\n\r\n    delete: (key) => {\r\n            localStorage.removeItem(key)\r\n         }\r\n}\r\n\r\nexport default persistenceManager\r\n"
  },
  {
    "__docId__": 134,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "persistenceManager",
    "memberof": "src/persistence/PersistenceManager.js",
    "longname": "src/persistence/PersistenceManager.js~persistenceManager",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/persistence/PersistenceManager.js",
    "importStyle": "persistenceManager",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/policy/PolicyEngine.js",
    "memberof": null,
    "longname": "src/policy/PolicyEngine.js",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "content": "/**\r\n * Core Policy Engine (PDP/PEP) Interface\r\n * According to: https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/runtime-apis.md#core-policy-engine-pdppep-interface\r\n */\r\nclass PolicyEngine {\r\n\r\n  /**\r\n  * To initialise the Policy Engine\r\n  * @param  IdentityModule      identityModule      identityModule\r\n  * @param  Registry    runtimeRegistry     runtimeRegistry\r\n  */\r\n  constructor(identityModule, runtimeRegistry) {\r\n    let _this = this;\r\n    _this.idModule = identityModule;\r\n    _this.registry = runtimeRegistry;\r\n    _this.policiesTable = new Object();\r\n    /* assumes the Policy Engine has the blacklist */\r\n    _this.blacklist = [];\r\n    /* _this.blacklist.push('Alice');*/\r\n  }\r\n\r\n  /**\r\n   * To add policies to be enforced for a certain deployed Hyperty Instance\r\n   * Example of an hyperty: hyperty-instance://tecnico.pt/e1b8fb0b-95e2-4f44-aa18-b40984741196\r\n   * Example of a policy: {subject: 'message.header.from', target: 'blacklist', action: 'deny'}\r\n   * @param {URL.HypertyURL}     hyperty  hyperty\r\n   * @param {HypertyPolicyList}  policies policies\r\n   */\r\n  addPolicies(hyperty, policies) {\r\n    let _this = this;\r\n    _this.policiesTable[hyperty] = policies;\r\n  }\r\n\r\n  /**\r\n   * To remove previously added policies for a certain deployed Hyperty Instance\r\n   * @param  {URL.HypertyURL}  hyperty       hyperty\r\n   */\r\n  removePolicies(hyperty) {\r\n    let _this = this;\r\n    delete _this.policiesTable[hyperty];\r\n  }\r\n\r\n  /**\r\n   * Authorisation request to accept a Subscription for a certain resource. Returns a Response Message to be returned to Subscription requester\r\n   * @param  {Message.Message} message       message\r\n   * @return {AuthorisationResponse}                 AuthorisationResponse\r\n   */\r\n  authorise(message) {\r\n    let _this = this;\r\n\r\n    return new Promise(function(resolve, reject) {\r\n\r\n      // TODO: Optimize and improve this code;\r\n      // if (_this.checkPolicies(message) == 'allow') {\r\n\r\n      // let hypertyIdentity = _this.registry.getHypertyIdentity(message.body.hypertyURL);\r\n      // this step assume the hypertyIdentity will be google\r\n\r\n      _this.idModule.loginWithRP('google identity', 'scope').then(function(value) {\r\n        let assertedID = _this.idModule.getIdentities();\r\n\r\n        // Check if the message have an body or not\r\n        if (!message.hasOwnProperty('body')) {\r\n          message.body = {};\r\n        }\r\n\r\n        //TODO dumb/insecure way to verify the direction of the message, improvement required later\r\n        if (!message.body.hasOwnProperty('assertedIdentity')) {\r\n\r\n          message.body.assertedIdentity = assertedID[0].identity;\r\n          message.body.idToken = value;\r\n          message.body.authorised = true;\r\n\r\n          //console.log('Message: ', message);\r\n\r\n        } else {\r\n          //TODO validate the received message identity\r\n        }\r\n        resolve(message);\r\n      }, function(error) {\r\n        reject(error);\r\n      });\r\n\r\n      // } else {\r\n      //   resolve(false);\r\n      // }\r\n    });\r\n  }\r\n\r\n  checkPolicies(message) {\r\n    let _this = this;\r\n    var _results = ['allow']; /* by default, all messages are allowed */\r\n    var _policies = _this.policiesTable[message.body.hypertyURL];\r\n    if (_policies != undefined) { /* if there are applicable policies, checks them */\r\n      var _numPolicies = _policies.length;\r\n\r\n      for (var i = 0; i < _numPolicies; i++) {\r\n        var _policy = _policies[i];\r\n        console.log(_policy);\r\n        if (_policy.target == 'blacklist') {\r\n          if (_this.blacklist.indexOf(eval(_policy.subject)) > -1) {\r\n            console.log('Is in blacklist!');\r\n            _results.push(_policy.action);\r\n          }\r\n        }\r\n        if (_policy.target == 'whitelist') {\r\n          if (_this.whitelist.indexOf(eval(_policy.subject)) > -1) {\r\n            console.log('Is in whitelist!');\r\n            _results.push(_policy.action);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    console.log(_results);\r\n    if (_results.indexOf('deny') > -1) { /* if one policy evaluates to 'deny', the result is 'deny' */\r\n      return 'deny';\r\n    } else {\r\n      return 'allow';\r\n    }\r\n  }\r\n}\r\n\r\nexport default PolicyEngine;\r\n"
  },
  {
    "__docId__": 136,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "PolicyEngine",
    "memberof": "src/policy/PolicyEngine.js",
    "longname": "src/policy/PolicyEngine.js~PolicyEngine",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/policy/PolicyEngine.js",
    "importStyle": "PolicyEngine",
    "description": "Core Policy Engine (PDP/PEP) Interface\nAccording to: https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/runtime-apis.md#core-policy-engine-pdppep-interface",
    "lineNumber": 5,
    "interface": false
  },
  {
    "__docId__": 137,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/policy/PolicyEngine.js~PolicyEngine",
    "longname": "src/policy/PolicyEngine.js~PolicyEngine#constructor",
    "access": null,
    "description": "To initialise the Policy Engine",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "IdentityModule",
        "description": "identityModule      identityModule"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "Registry",
        "description": "runtimeRegistry     runtimeRegistry"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 138,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addPolicies",
    "memberof": "src/policy/PolicyEngine.js~PolicyEngine",
    "longname": "src/policy/PolicyEngine.js~PolicyEngine#addPolicies",
    "access": null,
    "description": "To add policies to be enforced for a certain deployed Hyperty Instance\nExample of an hyperty: hyperty-instance://tecnico.pt/e1b8fb0b-95e2-4f44-aa18-b40984741196\nExample of a policy: {subject: 'message.header.from', target: 'blacklist', action: 'deny'}",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "URL.HypertyURL"
        ],
        "spread": false,
        "optional": false,
        "name": "hyperty",
        "description": "hyperty"
      },
      {
        "nullable": null,
        "types": [
          "HypertyPolicyList"
        ],
        "spread": false,
        "optional": false,
        "name": "policies",
        "description": "policies"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 139,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removePolicies",
    "memberof": "src/policy/PolicyEngine.js~PolicyEngine",
    "longname": "src/policy/PolicyEngine.js~PolicyEngine#removePolicies",
    "access": null,
    "description": "To remove previously added policies for a certain deployed Hyperty Instance",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "URL.HypertyURL"
        ],
        "spread": false,
        "optional": false,
        "name": "hyperty",
        "description": "hyperty"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 140,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "authorise",
    "memberof": "src/policy/PolicyEngine.js~PolicyEngine",
    "longname": "src/policy/PolicyEngine.js~PolicyEngine#authorise",
    "access": null,
    "description": "Authorisation request to accept a Subscription for a certain resource. Returns a Response Message to be returned to Subscription requester",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "Message.Message"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "message"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AuthorisationResponse"
      ],
      "spread": false,
      "description": "AuthorisationResponse"
    },
    "generator": false
  },
  {
    "__docId__": 141,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "checkPolicies",
    "memberof": "src/policy/PolicyEngine.js~PolicyEngine",
    "longname": "src/policy/PolicyEngine.js~PolicyEngine#checkPolicies",
    "access": null,
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 142,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/protostub/ProtoStub.js",
    "memberof": null,
    "longname": "src/protostub/ProtoStub.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "/**\r\n * ProtoStub Interface\r\n */\r\nclass ProtoStub {\r\n\r\n  /**\r\n   * To initialise the protocol stub including as input parameters its allocated component runtime url, the runtime BUS postMessage function to be invoked on messages received by the protocol stub and required configuration retrieved from protocolStub descriptor.\r\n   * @param  {URL.RuntimeURL}                            runtimeProtoStubURL runtimeProtoSubURL\r\n   * @param  {Message.Message}                           busPostMessage     configuration\r\n   * @param  {ProtoStubDescriptor.ConfigurationDataList} configuration      configuration\r\n   */\r\n  constructor(runtimeProtoStubURL, busPostMessage, configuration) {\r\n    // Body...\r\n  }\r\n\r\n  /**\r\n   * To connect the protocol stub to the back-end server\r\n   * @param  {IDToken} identity identity\r\n   */\r\n  connect(identity) {\r\n    // Body...\r\n  }\r\n\r\n  /**\r\n   * To disconnect the protocol stub.\r\n   */\r\n  disconnect() {\r\n    // Body...\r\n  }\r\n\r\n  /**\r\n   * To post messages to be dispatched by the protocol stub to connected back-end server\r\n   * @param  {Message.Message}  message       message\r\n   */\r\n  postMessage(message) {\r\n\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * To activate this protocol stub, using the same method for all protostub.\r\n * @param  {URL.RuntimeURL}                            runtimeProtoStubURL runtimeProtoSubURL\r\n * @param  {Message.Message}                           busPostMessage     configuration\r\n * @param  {ProtoStubDescriptor.ConfigurationDataList} configuration      configuration\r\n * @return {Object} Object with name and instance of ProtoStub\r\n */\r\nexport default function activate(url, bus, config) {\r\n  return {\r\n    name: 'ProtoStub',\r\n    instance: new ProtoStub(url, bus, config)\r\n  };\r\n}\r\n"
  },
  {
    "__docId__": 143,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ProtoStub",
    "memberof": "src/protostub/ProtoStub.js",
    "longname": "src/protostub/ProtoStub.js~ProtoStub",
    "access": null,
    "export": false,
    "importPath": "runtime-core/src/protostub/ProtoStub.js",
    "importStyle": null,
    "description": "ProtoStub Interface",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 144,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/protostub/ProtoStub.js~ProtoStub",
    "longname": "src/protostub/ProtoStub.js~ProtoStub#constructor",
    "access": null,
    "description": "To initialise the protocol stub including as input parameters its allocated component runtime url, the runtime BUS postMessage function to be invoked on messages received by the protocol stub and required configuration retrieved from protocolStub descriptor.",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "URL.RuntimeURL"
        ],
        "spread": false,
        "optional": false,
        "name": "runtimeProtoStubURL",
        "description": "runtimeProtoSubURL"
      },
      {
        "nullable": null,
        "types": [
          "Message.Message"
        ],
        "spread": false,
        "optional": false,
        "name": "busPostMessage",
        "description": "configuration"
      },
      {
        "nullable": null,
        "types": [
          "ProtoStubDescriptor.ConfigurationDataList"
        ],
        "spread": false,
        "optional": false,
        "name": "configuration",
        "description": "configuration"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 145,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "connect",
    "memberof": "src/protostub/ProtoStub.js~ProtoStub",
    "longname": "src/protostub/ProtoStub.js~ProtoStub#connect",
    "access": null,
    "description": "To connect the protocol stub to the back-end server",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "IDToken"
        ],
        "spread": false,
        "optional": false,
        "name": "identity",
        "description": "identity"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 146,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "disconnect",
    "memberof": "src/protostub/ProtoStub.js~ProtoStub",
    "longname": "src/protostub/ProtoStub.js~ProtoStub#disconnect",
    "access": null,
    "description": "To disconnect the protocol stub.",
    "lineNumber": 27,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 147,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "postMessage",
    "memberof": "src/protostub/ProtoStub.js~ProtoStub",
    "longname": "src/protostub/ProtoStub.js~ProtoStub#postMessage",
    "access": null,
    "description": "To post messages to be dispatched by the protocol stub to connected back-end server",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "Message.Message"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "message"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 148,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "activate",
    "memberof": "src/protostub/ProtoStub.js",
    "longname": "src/protostub/ProtoStub.js~activate",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/protostub/ProtoStub.js",
    "importStyle": "activate",
    "description": "To activate this protocol stub, using the same method for all protostub.",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "URL.RuntimeURL"
        ],
        "spread": false,
        "optional": false,
        "name": "runtimeProtoStubURL",
        "description": "runtimeProtoSubURL"
      },
      {
        "nullable": null,
        "types": [
          "Message.Message"
        ],
        "spread": false,
        "optional": false,
        "name": "busPostMessage",
        "description": "configuration"
      },
      {
        "nullable": null,
        "types": [
          "ProtoStubDescriptor.ConfigurationDataList"
        ],
        "spread": false,
        "optional": false,
        "name": "configuration",
        "description": "configuration"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Object with name and instance of ProtoStub"
    },
    "generator": false
  },
  {
    "__docId__": 149,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/qos-ua/QoSUA.js",
    "memberof": null,
    "longname": "src/qos-ua/QoSUA.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "/**\r\n * QoS User Agent Interface\r\n */\r\nclass QoSUA {\r\n\r\n  /**\r\n   * Get Connectivity Statistics data\r\n   */\r\n  getCurrentConnectivityStatistics()  {\r\n    // Body...\r\n  }\r\n\r\n  /**\r\n   * Sends Connectivity Statistics data to QoS Broker\r\n   */\r\n  sendConnectivityStatisticsToBroker() {\r\n    // Body\r\n  }\r\n\r\n}\r\n"
  },
  {
    "__docId__": 150,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "QoSUA",
    "memberof": "src/qos-ua/QoSUA.js",
    "longname": "src/qos-ua/QoSUA.js~QoSUA",
    "access": null,
    "export": false,
    "importPath": "runtime-core/src/qos-ua/QoSUA.js",
    "importStyle": null,
    "description": "QoS User Agent Interface",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 151,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getCurrentConnectivityStatistics",
    "memberof": "src/qos-ua/QoSUA.js~QoSUA",
    "longname": "src/qos-ua/QoSUA.js~QoSUA#getCurrentConnectivityStatistics",
    "access": null,
    "description": "Get Connectivity Statistics data",
    "lineNumber": 9,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 152,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "sendConnectivityStatisticsToBroker",
    "memberof": "src/qos-ua/QoSUA.js~QoSUA",
    "longname": "src/qos-ua/QoSUA.js~QoSUA#sendConnectivityStatisticsToBroker",
    "access": null,
    "description": "Sends Connectivity Statistics data to QoS Broker",
    "lineNumber": 16,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 153,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/registry/AddressAllocation.js",
    "memberof": null,
    "longname": "src/registry/AddressAllocation.js",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "content": "// import MessageFactory from '../../resources/MessageFactory';\r\n\r\n/**\r\n * Class will ask to the message node for addresses\r\n */\r\nclass AddressAllocation {\r\n  /* private\r\n  _url: URL\r\n  _bus: MiniBus\r\n  */\r\n\r\n  /**\r\n   * Create an Address Allocation\r\n   * @param  {URL.URL}      url - url from who is sending the message\r\n   * @param  {MiniBus}      bus - MiniBus used for address allocation\r\n   */\r\n  constructor(url, bus) {\r\n    let _this = this;\r\n\r\n    // let messageFactory = new MessageFactory();\r\n    //\r\n    // _this._messageFactory = messageFactory;\r\n    _this._url = url;\r\n    _this._bus = bus;\r\n  }\r\n\r\n  /**\r\n   * get the URL value\r\n   * @return {string} The url value;\r\n   */\r\n  get url() { return this._url; }\r\n\r\n  /**\r\n   * Ask for creation of a number of Hyperty addresses, to the domain message node.\r\n   * @param  {Domain} domain - Domain of the message node.\r\n   * @param  {number} number - Number of addresses to request\r\n   * @returns {Promise<HypertyURL>}  A list of HypertyURL's\r\n   */\r\n  create(domain, number) {\r\n    let _this = this;\r\n\r\n    // let messageFactory = _this._messageFactory;\r\n\r\n    let msg = {\r\n      type: 'create', from: _this._url, to: 'domain://msg-node.' + domain + '/hyperty-address-allocation',\r\n      body: {number: number}\r\n    };\r\n\r\n    // TODO: Apply the message factory\r\n    // The msg-node-vertx should be changed the body field to receive\r\n    // the following format body: {value: {number: number}} because\r\n    // the message is generated in that way by the message factory;\r\n    // let msg = messageFactory.createMessageRequest(_this._url, 'domain://msg-node.' + domain + '/hyperty-address-allocation', '', {number: number});\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      // TODO: change this response Message using the MessageFactory\r\n      _this._bus.postMessage(msg, (reply) => {\r\n        if (reply.body.code === 200) {\r\n          resolve(reply.body.allocated);\r\n        } else {\r\n          reject(reply.body.desc);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nexport default AddressAllocation;\r\n"
  },
  {
    "__docId__": 154,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AddressAllocation",
    "memberof": "src/registry/AddressAllocation.js",
    "longname": "src/registry/AddressAllocation.js~AddressAllocation",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/registry/AddressAllocation.js",
    "importStyle": "AddressAllocation",
    "description": "Class will ask to the message node for addresses",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 155,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/registry/AddressAllocation.js~AddressAllocation",
    "longname": "src/registry/AddressAllocation.js~AddressAllocation#constructor",
    "access": null,
    "description": "Create an Address Allocation",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "URL.URL"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url from who is sending the message"
      },
      {
        "nullable": null,
        "types": [
          "MiniBus"
        ],
        "spread": false,
        "optional": false,
        "name": "bus",
        "description": "MiniBus used for address allocation"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 156,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "url",
    "memberof": "src/registry/AddressAllocation.js~AddressAllocation",
    "longname": "src/registry/AddressAllocation.js~AddressAllocation#url",
    "access": null,
    "description": "get the URL value",
    "lineNumber": 31,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The url value;"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 157,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/registry/AddressAllocation.js~AddressAllocation",
    "longname": "src/registry/AddressAllocation.js~AddressAllocation#create",
    "access": null,
    "description": "Ask for creation of a number of Hyperty addresses, to the domain message node.",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<HypertyURL>}  A list of HypertyURL's"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Domain"
        ],
        "spread": false,
        "optional": false,
        "name": "domain",
        "description": "Domain of the message node."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "number",
        "description": "Number of addresses to request"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<HypertyURL>"
      ],
      "spread": false,
      "description": "A list of HypertyURL's"
    },
    "generator": false
  },
  {
    "__docId__": 158,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/registry/HypertyDiscovery.js",
    "memberof": null,
    "longname": "src/registry/HypertyDiscovery.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {divideURL} from '../utils/utils.js';\r\n\r\n/**\r\n* Core HypertyDiscovery interface\r\n* Class to allow applications to search for hyperties using the message bus\r\n*/\r\nclass HypertyDiscovery {\r\n\r\n  /**\r\n  * To initialise the HypertyDiscover, which will provide the support for hyperties to\r\n  * query users registered in outside the internal core.\r\n  * @param  {MessageBus}          msgbus                msgbus\r\n  * @param  {RuntimeURL}          runtimeURL            runtimeURL\r\n  */\r\n  constructor(domain, msgBus) {\r\n    let _this = this;\r\n    _this.messageBus = msgBus;\r\n\r\n    _this.domain = domain;\r\n    _this.discoveryURL = 'hyperty://' + domain + '/hypertyDisovery';\r\n  }\r\n\r\n  /**\r\n  * function to request about users registered in domain registry, and\r\n  * return the hyperty instance if found.\r\n  * @param  {email}              email\r\n  * @return {Promise}          Promise\r\n  */\r\n  discoverHypertyPerUser(email) {\r\n    let _this = this;\r\n    let identityURL = 'user://' + email.substring(email.indexOf('@') + 1, email.length) + '/' + email.substring(0, email.indexOf('@'));\r\n\r\n    // message to query domain registry, asking for a user hyperty.\r\n    let message = {\r\n      type: 'READ', from: _this.discoveryURL, to: 'domain://registry.' + _this.domain + '/', body: { user: identityURL}\r\n    };\r\n\r\n    return new Promise(function(resolve, reject) {\r\n\r\n      _this.messageBus.postMessage(message, (reply) => {\r\n\r\n        let hypertyURL = reply.body.last;\r\n\r\n        if (hypertyURL === undefined) {\r\n          return reject('User Hyperty not found');\r\n        }\r\n\r\n        let idPackage = {\r\n          id: email,\r\n          descriptor: reply.body.hyperties[hypertyURL].descriptor,\r\n          hypertyURL: hypertyURL\r\n        };\r\n\r\n        resolve(idPackage);\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default HypertyDiscovery;\r\n"
  },
  {
    "__docId__": 159,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "HypertyDiscovery",
    "memberof": "src/registry/HypertyDiscovery.js",
    "longname": "src/registry/HypertyDiscovery.js~HypertyDiscovery",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/registry/HypertyDiscovery.js",
    "importStyle": "HypertyDiscovery",
    "description": "Core HypertyDiscovery interface\nClass to allow applications to search for hyperties using the message bus",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 160,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/registry/HypertyDiscovery.js~HypertyDiscovery",
    "longname": "src/registry/HypertyDiscovery.js~HypertyDiscovery#constructor",
    "access": null,
    "description": "To initialise the HypertyDiscover, which will provide the support for hyperties to\nquery users registered in outside the internal core.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "MessageBus"
        ],
        "spread": false,
        "optional": false,
        "name": "msgbus",
        "description": "msgbus"
      },
      {
        "nullable": null,
        "types": [
          "RuntimeURL"
        ],
        "spread": false,
        "optional": false,
        "name": "runtimeURL",
        "description": "runtimeURL"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 161,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "discoverHypertyPerUser",
    "memberof": "src/registry/HypertyDiscovery.js~HypertyDiscovery",
    "longname": "src/registry/HypertyDiscovery.js~HypertyDiscovery#discoverHypertyPerUser",
    "access": null,
    "description": "function to request about users registered in domain registry, and\nreturn the hyperty instance if found.",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "email"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise"
    },
    "generator": false
  },
  {
    "__docId__": 162,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/registry/HypertyInstance.js",
    "memberof": null,
    "longname": "src/registry/HypertyInstance.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import RegistryDataModel from './RegistryDataModel';\r\n\r\n/**\r\n*   @author: Gil Dias (gil.dias@tecnico.ulisboa.pt)\r\n*   HypertyInstance Data Model used to model instances of Hyperties running in devices and servers.\r\n*/\r\nclass HypertyInstance extends RegistryDataModel {\r\n\r\n  constructor(id, url, descriptor, hypertyURL, user, guid, runtime, context) {\r\n    super(id, url, descriptor);\r\n    let _this = this;\r\n    _this._hypertyURL = hypertyURL;\r\n    _this._user = user;\r\n    _this._guid = guid;\r\n    _this._runtime = runtime;\r\n    _this._context = context;\r\n  }\r\n\r\n  set user(identity) {\r\n    let _this = this;\r\n    _this.user = identity;\r\n  }\r\n\r\n  get user() {\r\n    let _this = this;\r\n    return _this._user;\r\n  }\r\n\r\n  get hypertyURL() {\r\n    let _this = this;\r\n    return _this._hypertyURL;\r\n  }\r\n}\r\n\r\nexport default HypertyInstance;\r\n"
  },
  {
    "__docId__": 163,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "HypertyInstance",
    "memberof": "src/registry/HypertyInstance.js",
    "longname": "src/registry/HypertyInstance.js~HypertyInstance",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/registry/HypertyInstance.js",
    "importStyle": "HypertyInstance",
    "description": "  @author: Gil Dias (gil.dias@tecnico.ulisboa.pt)\n  HypertyInstance Data Model used to model instances of Hyperties running in devices and servers.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/registry/RegistryDataModel.js~RegistryDataModel"
    ]
  },
  {
    "__docId__": 164,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/registry/HypertyInstance.js~HypertyInstance",
    "longname": "src/registry/HypertyInstance.js~HypertyInstance#constructor",
    "access": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "descriptor",
        "types": [
          "*"
        ]
      },
      {
        "name": "hypertyURL",
        "types": [
          "*"
        ]
      },
      {
        "name": "user",
        "types": [
          "*"
        ]
      },
      {
        "name": "guid",
        "types": [
          "*"
        ]
      },
      {
        "name": "runtime",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 165,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "user",
    "memberof": "src/registry/HypertyInstance.js~HypertyInstance",
    "longname": "src/registry/HypertyInstance.js~HypertyInstance#user",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 166,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "user",
    "memberof": "src/registry/HypertyInstance.js~HypertyInstance",
    "longname": "src/registry/HypertyInstance.js~HypertyInstance#user",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 167,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "hypertyURL",
    "memberof": "src/registry/HypertyInstance.js~HypertyInstance",
    "longname": "src/registry/HypertyInstance.js~HypertyInstance#hypertyURL",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 168,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/registry/Registry.js",
    "memberof": null,
    "longname": "src/registry/Registry.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import EventEmitter from '../utils/EventEmitter';\r\nimport AddressAllocation from './AddressAllocation';\r\nimport HypertyInstance from './HypertyInstance';\r\nimport HypertyDiscovery from './HypertyDiscovery';\r\n\r\nimport {divideURL} from '../utils/utils.js';\r\n\r\n/**\r\n* Runtime Registry Interface\r\n*/\r\nclass Registry extends EventEmitter {\r\n\r\n  /**\r\n  * To initialise the Runtime Registry with the RuntimeURL that will be the basis to derive the internal runtime addresses when allocating addresses to internal runtime component. In addition, the Registry domain back-end to be used to remotely register Runtime components, is also passed as input parameter.\r\n  * @param  {MessageBus}          msgbus                msgbus\r\n  * @param  {HypertyRuntimeURL}   runtimeURL            runtimeURL\r\n  * @param  {AppSandbox}          appSandbox            appSandbox\r\n  * @param  {DomainURL}           remoteRegistry        remoteRegistry\r\n  */\r\n  constructor(runtimeURL, appSandbox, identityModule, remoteRegistry) {\r\n\r\n    super();\r\n\r\n    // how some functions receive the parameters for example:\r\n    // new Registry('hyperty-runtime://sp1/123', appSandbox, idModule, remoteRegistry);\r\n    // registry.registerStub(sandbox, 'sp1');\r\n    // registry.registerHyperty(sandBox, 'hyperty-runtime://sp1/123');\r\n    // registry.resolve('hyperty-runtime://sp1/123');\r\n\r\n    if (!runtimeURL) throw new Error('runtimeURL is missing.');\r\n    /*if (!remoteRegistry) throw new Error('remoteRegistry is missing');*/\r\n\r\n    let _this = this;\r\n\r\n    _this.registryURL = runtimeURL + '/registry/123';\r\n    _this.appSandbox = appSandbox;\r\n    _this.runtimeURL = runtimeURL;\r\n    _this.remoteRegistry = remoteRegistry;\r\n    _this.idModule = identityModule;\r\n    _this.identifier = Math.floor((Math.random() * 10000) + 1);\r\n\r\n    _this.hypertiesListToRemove = {};\r\n    _this.hypertiesList = [];\r\n    _this.protostubsList = {};\r\n    _this.sandboxesList = {stub: {}, hyperty: {}, domain: {} };\r\n    _this.pepList = {};\r\n\r\n    _this._domain = divideURL(_this.registryURL).domain;\r\n    _this.sandboxesList.domain[_this._domain] = appSandbox;\r\n  }\r\n\r\n  /**\r\n  * return the messageBus in this Registry\r\n  * @param {MessageBus}           messageBus\r\n  */\r\n  get messageBus() {\r\n    let _this = this;\r\n    return _this._messageBus;\r\n  }\r\n\r\n  /**\r\n  * Set the messageBus in this Registry\r\n  * @param {MessageBus}           messageBus\r\n  */\r\n  set messageBus(messageBus) {\r\n    let _this = this;\r\n    _this._messageBus = messageBus;\r\n\r\n    // Install AddressAllocation\r\n    let addressAllocation = new AddressAllocation(_this.registryURL, messageBus);\r\n    _this.addressAllocation = addressAllocation;\r\n  }\r\n\r\n  /**\r\n  * This function is used to return the sandbox instance where the Application is executing. It is assumed there is just one App per Runtime instance.\r\n  */\r\n  getAppSandbox() {\r\n    let _this = this;\r\n    return _this.appSandbox;\r\n  }\r\n\r\n  /**\r\n  * Function to query the Domain registry, with an user email.\r\n  */\r\n  getUserHyperty(email) {\r\n    let _this = this;\r\n    let identityURL = 'user://' + email.substring(email.indexOf('@') + 1, email.length) + '/' + email.substring(0, email.indexOf('@'));\r\n\r\n    let msg = {\r\n      type: 'READ', from: _this.registryURL, to: 'domain://registry.' + _this._domain + '/', body: { user: identityURL}\r\n    };\r\n\r\n    return new Promise(function(resolve, reject) {\r\n\r\n      _this._messageBus.postMessage(msg, (reply) => {\r\n\r\n        let hypertyURL = reply.body.last;\r\n\r\n        if (hypertyURL === undefined) {\r\n          return reject('User Hyperty not found');\r\n        }\r\n\r\n        let idPackage = {\r\n          id: email,\r\n          descriptor: reply.body.hyperties[hypertyURL].descriptor,\r\n          hypertyURL: hypertyURL\r\n        };\r\n\r\n        console.log('===> RegisterHyperty messageBundle: ', idPackage);\r\n        resolve(idPackage);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n  * To register a new Hyperty in the runtime which returns the HypertyURL allocated to the new Hyperty.\r\n  * @param  {Sandbox}             sandbox               sandbox\r\n  * @param  {HypertyCatalogueURL} HypertyCatalogueURL   descriptor\r\n  * @return {HypertyURL}          HypertyURL\r\n  */\r\n  registerHyperty(sandbox, descriptor) {\r\n    let _this = this;\r\n\r\n    //assuming descriptor come in this format, the service-provider-domain url is retrieved by a split instruction\r\n    //hyperty-catalogue://<service-provider-domain>/<catalogue-object-identifier>\r\n    let domainUrl = divideURL(descriptor).domain;\r\n\r\n    return new Promise(function(resolve, reject) {\r\n\r\n      _this.idModule.loginWithRP('google', 'me').then(function(result) {\r\n        let email = result.email;\r\n        let identityURL = 'user://' + email.substring(email.indexOf('@') + 1, email.length) + '/' + email.substring(0, email.indexOf('@'));\r\n\r\n        if (_this._messageBus === undefined) {\r\n          reject('MessageBus not found on registerStub');\r\n        } else {\r\n          //call check if the protostub exist\r\n          _this.resolve('hyperty-runtime://' + domainUrl).then(function() {\r\n\r\n            _this.registryDomain = domainUrl;\r\n\r\n            // TODO: should be implemented with addresses poll\r\n            // In this case we will request and return only one\r\n            // address\r\n            let numberOfAddresses = 1;\r\n            _this.addressAllocation.create(domainUrl, numberOfAddresses).then(function(adderessList) {\r\n\r\n              adderessList.forEach(function(address) {\r\n\r\n                _this._messageBus.addListener(address + '/status', (msg) => {\r\n                  console.log('Message addListener for : ', address + '/status -> '  + msg);\r\n                });\r\n\r\n              });\r\n\r\n              let hyperty = new HypertyInstance(_this.identifier, _this.registryURL,\r\n              descriptor, adderessList[0], identityURL);\r\n\r\n              _this.hypertiesList.push(hyperty);\r\n              _this.sandboxesList.hyperty[adderessList[0]] = sandbox;\r\n\r\n              //message to register the new hyperty, within the domain registry\r\n              let msg = {\r\n                type: 'CREATE', from: _this.registryURL, to: 'domain://registry.' + _this.registryDomain + '/', body: {user: identityURL,  hypertyDescriptorURL: descriptor, hypertyURL: adderessList[0]}\r\n              };\r\n\r\n              _this._messageBus.postMessage(msg, (reply) => {\r\n                console.log('===> RegisterHyperty Reply: ', reply);\r\n              });\r\n\r\n              resolve(adderessList[0]);\r\n            });\r\n\r\n          }).catch(function(reason) {\r\n            console.log('Address Reason: ', reason);\r\n            reject(reason);\r\n          });\r\n\r\n        }\r\n      }, function(err) {\r\n        reject('Failed to obtain an identity');\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n  * To unregister a previously registered Hyperty\r\n  * @param  {HypertyURL}          HypertyURL url        url\r\n  */\r\n  unregisterHyperty(url) {\r\n    let _this = this;\r\n\r\n    return new Promise(function(resolve,reject) {\r\n\r\n      let found = false;\r\n      let index = 0;\r\n\r\n      for\t(index = 0; index < _this.hypertiesList.length; index++) {\r\n        let hyperty = _this.hypertiesList[index];\r\n        if (hyperty !== undefined) {\r\n          if (hyperty.hypertyURL === url) {\r\n            found = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (found === false) {\r\n        reject('Hyperty not found');\r\n      } else {\r\n        delete _this.hypertiesList[index];\r\n        resolve('Hyperty successfully deleted');\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n  * To discover protocol stubs available in the runtime for a certain domain. If available, it returns the runtime url for the protocol stub that connects to the requested domain. Required by the runtime BUS to route messages to remote servers or peers (do we need something similar for Hyperties?).\r\n  * @param  {DomainURL}           DomainURL            url\r\n  * @return {RuntimeURL}           RuntimeURL\r\n  */\r\n  discoverProtostub(url) {\r\n    if (!url) throw new Error('Parameter url needed');\r\n    let _this = this;\r\n\r\n    return new Promise(function(resolve,reject) {\r\n\r\n      let request = _this.protostubsList[url];\r\n\r\n      if (request === undefined) {\r\n        reject('requestUpdate couldn\\' get the ProtostubURL');\r\n      } else {\r\n        resolve(request);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * To register a new Protocol Stub in the runtime including as input parameters the function to postMessage, the DomainURL that is connected with the stub, which returns the RuntimeURL allocated to the new ProtocolStub.\r\n   * @param {Sandbox}        Sandbox\r\n   * @param  {DomainURL}     DomainURL service provider domain\r\n   * @return {RuntimeProtoStubURL}\r\n   */\r\n  registerStub(sandbox, domainURL) {\r\n    let _this = this;\r\n    let runtimeProtoStubURL;\r\n\r\n    return new Promise(function(resolve,reject) {\r\n\r\n      //check if messageBus is registered in registry or not\r\n      if (_this._messageBus === undefined) {\r\n        reject('MessageBus not found on registerStub');\r\n      }\r\n\r\n      //TODO implement a unique number for the protostubURL\r\n      if (!domainURL.indexOf('msg-node.')) {\r\n        domainURL = domainURL.substring(domainURL.indexOf('.') + 1);\r\n      }\r\n\r\n      runtimeProtoStubURL = 'msg-node.' + domainURL + '/protostub/' + Math.floor((Math.random() * 10000) + 1);\r\n\r\n      // TODO: Optimize this\r\n      _this.protostubsList[domainURL] = runtimeProtoStubURL;\r\n      _this.sandboxesList.stub[runtimeProtoStubURL] = sandbox;\r\n\r\n      // sandbox.addListener('*', function(msg) {\r\n      //   _this._messageBus.postMessage(msg);\r\n      // });\r\n\r\n      resolve(runtimeProtoStubURL);\r\n\r\n      _this._messageBus.addListener(runtimeProtoStubURL + '/status', (msg) => {\r\n        if (msg.resource === msg.to + '/status') {\r\n          console.log('RuntimeProtostubURL/status message: ', msg.body.value);\r\n        }\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n  * To unregister a previously registered protocol stub\r\n  * @param  {HypertyRuntimeURL}   HypertyRuntimeURL     hypertyRuntimeURL\r\n  */\r\n  unregisterStub(hypertyRuntimeURL) {\r\n    let _this = this;\r\n    let runtimeProtoStubURL;\r\n\r\n    return new Promise(function(resolve,reject) {\r\n\r\n      let data = _this.protostubsList[hypertyRuntimeURL];\r\n\r\n      if (data === undefined) {\r\n        reject('Error on unregisterStub: Hyperty not found');\r\n      } else {\r\n        delete _this.protostubsList[hypertyRuntimeURL];\r\n        resolve('ProtostubURL removed');\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n  * To register a new Policy Enforcer in the runtime including as input parameters the function to postMessage, the HypertyURL associated with the PEP, which returns the RuntimeURL allocated to the new Policy Enforcer component.\r\n  * @param  {Message.Message} postMessage postMessage\r\n  * @param  {HypertyURL}          HypertyURL            hyperty\r\n  * @return {HypertyRuntimeURL}   HypertyRuntimeURL\r\n  */\r\n  registerPEP(postMessage, hyperty) {\r\n    let _this = this;\r\n\r\n    return new Promise(function(resolve,reject) {\r\n      //TODO check what parameter in the postMessage the pep is.\r\n      _this.pepList[hyperty] = postMessage;\r\n      resolve('PEP registered with success');\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n  * To unregister a previously registered protocol stub\r\n  * @param  {HypertyRuntimeURL}   HypertyRuntimeURL     HypertyRuntimeURL\r\n  */\r\n  unregisterPEP(HypertyRuntimeURL) {\r\n    let _this = this;\r\n\r\n    return new Promise(function(resolve,reject) {\r\n\r\n      let result = _this.pepList[HypertyRuntimeURL];\r\n\r\n      if (result === undefined) {\r\n        reject('Pep Not found.');\r\n      } else {\r\n        resolve('PEP successfully removed.');\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n  * To receive status events from components registered in the Registry.\r\n  * @param  {Message.Message}     Message.Message       event\r\n  */\r\n  onEvent(event) {\r\n    // TODO body...\r\n  }\r\n\r\n  /**\r\n  * To discover sandboxes available in the runtime for a certain domain. Required by the runtime UA to avoid more than one sandbox for the same domain.\r\n  * @param  {DomainURL} DomainURL url\r\n  * @return {RuntimeSandbox}           RuntimeSandbox\r\n  */\r\n  getSandbox(url) {\r\n    if (!url) throw new Error('Parameter url needed');\r\n    console.log('getSandbox: ' + url);\r\n\r\n    let _this = this;\r\n    return new Promise(function(resolve,reject) {\r\n\r\n      //check if it is a protostub url\r\n      let request = _this.sandboxesList.stub[url];\r\n\r\n      if (request === undefined) {\r\n        //if not, check if it is a hyperty instance url\r\n        request = _this.sandboxesList.hyperty[url];\r\n\r\n        if (request === undefined) {\r\n          //if not, check if it is a specific url\r\n          request = _this.sandboxesList.domain[url];\r\n\r\n          if (request === undefined) {\r\n            //if not, check if the domain in the url, is registred.\r\n            let dividedURL = divideURL(url);\r\n            request = _this.sandboxesList.domain[dividedURL.domain];\r\n\r\n            if (request === undefined) {\r\n              reject('Sandbox not found');\r\n            } else {\r\n              resolve(request);\r\n            }\r\n          } else {\r\n            resolve(request);\r\n          }\r\n        } else {\r\n          resolve(request);\r\n        }\r\n      } else {\r\n        resolve(request);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n  * To verify if source is valid and to resolve target runtime url address if needed (eg protostub runtime url in case the message is to be dispatched to a remote endpoint).\r\n  * @param  {URL.URL}  url       url\r\n  * @return {Promise<URL.URL>}                 Promise <URL.URL>\r\n  */\r\n  resolve(url) {\r\n    console.log('resolve ' + url);\r\n    let _this = this;\r\n\r\n    //split the url to find the domainURL. deals with the url for example as:\r\n    //\"hyperty-runtime://sp1/protostub/123\",\r\n    let domainUrl = divideURL(url).domain;\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      if (!domainUrl.indexOf('msg-node.') || !domainUrl.indexOf('registry.')) {\r\n        domainUrl = domainUrl.substring(domainUrl.indexOf('.') + 1);\r\n      }\r\n\r\n      let request  = _this.protostubsList[domainUrl];\r\n\r\n      _this.addEventListener('runtime:stubLoaded', function(domainUrl) {\r\n        resolve(domainUrl);\r\n      });\r\n\r\n      if (request !== undefined) {\r\n        resolve(request);\r\n      } else {\r\n        _this.trigger('runtime:loadStub', domainUrl);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default Registry;\r\n"
  },
  {
    "__docId__": 169,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Registry",
    "memberof": "src/registry/Registry.js",
    "longname": "src/registry/Registry.js~Registry",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/registry/Registry.js",
    "importStyle": "Registry",
    "description": "Runtime Registry Interface",
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "src/utils/EventEmitter.js~EventEmitter"
    ]
  },
  {
    "__docId__": 170,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/registry/Registry.js~Registry",
    "longname": "src/registry/Registry.js~Registry#constructor",
    "access": null,
    "description": "To initialise the Runtime Registry with the RuntimeURL that will be the basis to derive the internal runtime addresses when allocating addresses to internal runtime component. In addition, the Registry domain back-end to be used to remotely register Runtime components, is also passed as input parameter.",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "MessageBus"
        ],
        "spread": false,
        "optional": false,
        "name": "msgbus",
        "description": "msgbus"
      },
      {
        "nullable": null,
        "types": [
          "HypertyRuntimeURL"
        ],
        "spread": false,
        "optional": false,
        "name": "runtimeURL",
        "description": "runtimeURL"
      },
      {
        "nullable": null,
        "types": [
          "AppSandbox"
        ],
        "spread": false,
        "optional": false,
        "name": "appSandbox",
        "description": "appSandbox"
      },
      {
        "nullable": null,
        "types": [
          "DomainURL"
        ],
        "spread": false,
        "optional": false,
        "name": "remoteRegistry",
        "description": "remoteRegistry"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 171,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "messageBus",
    "memberof": "src/registry/Registry.js~Registry",
    "longname": "src/registry/Registry.js~Registry#messageBus",
    "access": null,
    "description": "return the messageBus in this Registry",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "MessageBus"
        ],
        "spread": false,
        "optional": false,
        "name": "messageBus",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 172,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "messageBus",
    "memberof": "src/registry/Registry.js~Registry",
    "longname": "src/registry/Registry.js~Registry#messageBus",
    "access": null,
    "description": "Set the messageBus in this Registry",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "MessageBus"
        ],
        "spread": false,
        "optional": false,
        "name": "messageBus",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 173,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAppSandbox",
    "memberof": "src/registry/Registry.js~Registry",
    "longname": "src/registry/Registry.js~Registry#getAppSandbox",
    "access": null,
    "description": "This function is used to return the sandbox instance where the Application is executing. It is assumed there is just one App per Runtime instance.",
    "lineNumber": 77,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 174,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getUserHyperty",
    "memberof": "src/registry/Registry.js~Registry",
    "longname": "src/registry/Registry.js~Registry#getUserHyperty",
    "access": null,
    "description": "Function to query the Domain registry, with an user email.",
    "lineNumber": 85,
    "params": [
      {
        "name": "email",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 175,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "registerHyperty",
    "memberof": "src/registry/Registry.js~Registry",
    "longname": "src/registry/Registry.js~Registry#registerHyperty",
    "access": null,
    "description": "To register a new Hyperty in the runtime which returns the HypertyURL allocated to the new Hyperty.",
    "lineNumber": 121,
    "params": [
      {
        "nullable": null,
        "types": [
          "Sandbox"
        ],
        "spread": false,
        "optional": false,
        "name": "sandbox",
        "description": "sandbox"
      },
      {
        "nullable": null,
        "types": [
          "HypertyCatalogueURL"
        ],
        "spread": false,
        "optional": false,
        "name": "HypertyCatalogueURL",
        "description": "descriptor"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HypertyURL"
      ],
      "spread": false,
      "description": "HypertyURL"
    },
    "generator": false
  },
  {
    "__docId__": 176,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "unregisterHyperty",
    "memberof": "src/registry/Registry.js~Registry",
    "longname": "src/registry/Registry.js~Registry#unregisterHyperty",
    "access": null,
    "description": "To unregister a previously registered Hyperty",
    "lineNumber": 191,
    "params": [
      {
        "nullable": null,
        "types": [
          "HypertyURL"
        ],
        "spread": false,
        "optional": false,
        "name": "HypertyURL",
        "description": "url        url"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 177,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "discoverProtostub",
    "memberof": "src/registry/Registry.js~Registry",
    "longname": "src/registry/Registry.js~Registry#discoverProtostub",
    "access": null,
    "description": "To discover protocol stubs available in the runtime for a certain domain. If available, it returns the runtime url for the protocol stub that connects to the requested domain. Required by the runtime BUS to route messages to remote servers or peers (do we need something similar for Hyperties?).",
    "lineNumber": 224,
    "params": [
      {
        "nullable": null,
        "types": [
          "DomainURL"
        ],
        "spread": false,
        "optional": false,
        "name": "DomainURL",
        "description": "url"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RuntimeURL"
      ],
      "spread": false,
      "description": "RuntimeURL"
    },
    "generator": false
  },
  {
    "__docId__": 178,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "registerStub",
    "memberof": "src/registry/Registry.js~Registry",
    "longname": "src/registry/Registry.js~Registry#registerStub",
    "access": null,
    "description": "To register a new Protocol Stub in the runtime including as input parameters the function to postMessage, the DomainURL that is connected with the stub, which returns the RuntimeURL allocated to the new ProtocolStub.",
    "lineNumber": 247,
    "params": [
      {
        "nullable": null,
        "types": [
          "Sandbox"
        ],
        "spread": false,
        "optional": false,
        "name": "Sandbox",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "DomainURL"
        ],
        "spread": false,
        "optional": false,
        "name": "DomainURL",
        "description": "service provider domain"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RuntimeProtoStubURL"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 179,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "unregisterStub",
    "memberof": "src/registry/Registry.js~Registry",
    "longname": "src/registry/Registry.js~Registry#unregisterStub",
    "access": null,
    "description": "To unregister a previously registered protocol stub",
    "lineNumber": 288,
    "params": [
      {
        "nullable": null,
        "types": [
          "HypertyRuntimeURL"
        ],
        "spread": false,
        "optional": false,
        "name": "HypertyRuntimeURL",
        "description": "hypertyRuntimeURL"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 180,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "registerPEP",
    "memberof": "src/registry/Registry.js~Registry",
    "longname": "src/registry/Registry.js~Registry#registerPEP",
    "access": null,
    "description": "To register a new Policy Enforcer in the runtime including as input parameters the function to postMessage, the HypertyURL associated with the PEP, which returns the RuntimeURL allocated to the new Policy Enforcer component.",
    "lineNumber": 312,
    "params": [
      {
        "nullable": null,
        "types": [
          "Message.Message"
        ],
        "spread": false,
        "optional": false,
        "name": "postMessage",
        "description": "postMessage"
      },
      {
        "nullable": null,
        "types": [
          "HypertyURL"
        ],
        "spread": false,
        "optional": false,
        "name": "HypertyURL",
        "description": "hyperty"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HypertyRuntimeURL"
      ],
      "spread": false,
      "description": "HypertyRuntimeURL"
    },
    "generator": false
  },
  {
    "__docId__": 181,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "unregisterPEP",
    "memberof": "src/registry/Registry.js~Registry",
    "longname": "src/registry/Registry.js~Registry#unregisterPEP",
    "access": null,
    "description": "To unregister a previously registered protocol stub",
    "lineNumber": 327,
    "params": [
      {
        "nullable": null,
        "types": [
          "HypertyRuntimeURL"
        ],
        "spread": false,
        "optional": false,
        "name": "HypertyRuntimeURL",
        "description": "HypertyRuntimeURL"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 182,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "onEvent",
    "memberof": "src/registry/Registry.js~Registry",
    "longname": "src/registry/Registry.js~Registry#onEvent",
    "access": null,
    "description": "To receive status events from components registered in the Registry.",
    "lineNumber": 347,
    "params": [
      {
        "nullable": null,
        "types": [
          "Message.Message"
        ],
        "spread": false,
        "optional": false,
        "name": "Message.Message",
        "description": "event"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 183,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSandbox",
    "memberof": "src/registry/Registry.js~Registry",
    "longname": "src/registry/Registry.js~Registry#getSandbox",
    "access": null,
    "description": "To discover sandboxes available in the runtime for a certain domain. Required by the runtime UA to avoid more than one sandbox for the same domain.",
    "lineNumber": 356,
    "params": [
      {
        "nullable": null,
        "types": [
          "DomainURL"
        ],
        "spread": false,
        "optional": false,
        "name": "DomainURL",
        "description": "url"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RuntimeSandbox"
      ],
      "spread": false,
      "description": "RuntimeSandbox"
    },
    "generator": false
  },
  {
    "__docId__": 184,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "resolve",
    "memberof": "src/registry/Registry.js~Registry",
    "longname": "src/registry/Registry.js~Registry#resolve",
    "access": null,
    "description": "To verify if source is valid and to resolve target runtime url address if needed (eg protostub runtime url in case the message is to be dispatched to a remote endpoint).",
    "lineNumber": 401,
    "params": [
      {
        "nullable": null,
        "types": [
          "URL.URL"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<URL.URL>"
      ],
      "spread": false,
      "description": "Promise <URL.URL>"
    },
    "generator": false
  },
  {
    "__docId__": 185,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/registry/RegistryDataModel.js",
    "memberof": null,
    "longname": "src/registry/RegistryDataModel.js",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "content": "/**\r\n*   @author: Gil Dias (gil.dias@tecnico.ulisboa.pt)\r\n*   Registry Data Model includes all Objects to be handled by the Registry functionality including\r\n*/\r\nclass RegistryDataModel {\r\n\r\n  constructor(id, url, descriptor, startingTime, lastModified, status, stubs, stubsConfiguration) {\r\n    let _this = this;\r\n\r\n    _this._id = id;\r\n    _this._url = url;\r\n    _this._descriptor = descriptor;\r\n    _this._startingTime = startingTime;\r\n    _this._lastModified = lastModified;\r\n    _this._status = status;\r\n    _this._stubs = stubs;\r\n    _this._stubsConfiguration = stubsConfiguration;\r\n  }\r\n\r\n  get id() {\r\n    let _this = this;\r\n    return _this._id;\r\n  }\r\n\r\n  get url() {\r\n    let _this = this;\r\n    return _this._url;\r\n  }\r\n\r\n  get descriptor() {\r\n    let _this = this;\r\n    return _this._descriptor;\r\n  }\r\n\r\n}\r\n\r\nexport default RegistryDataModel;\r\n"
  },
  {
    "__docId__": 186,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "RegistryDataModel",
    "memberof": "src/registry/RegistryDataModel.js",
    "longname": "src/registry/RegistryDataModel.js~RegistryDataModel",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/registry/RegistryDataModel.js",
    "importStyle": "RegistryDataModel",
    "description": "  @author: Gil Dias (gil.dias@tecnico.ulisboa.pt)\n  Registry Data Model includes all Objects to be handled by the Registry functionality including",
    "lineNumber": 5,
    "interface": false
  },
  {
    "__docId__": 187,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/registry/RegistryDataModel.js~RegistryDataModel",
    "longname": "src/registry/RegistryDataModel.js~RegistryDataModel#constructor",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "descriptor",
        "types": [
          "*"
        ]
      },
      {
        "name": "startingTime",
        "types": [
          "*"
        ]
      },
      {
        "name": "lastModified",
        "types": [
          "*"
        ]
      },
      {
        "name": "status",
        "types": [
          "*"
        ]
      },
      {
        "name": "stubs",
        "types": [
          "*"
        ]
      },
      {
        "name": "stubsConfiguration",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 188,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "src/registry/RegistryDataModel.js~RegistryDataModel",
    "longname": "src/registry/RegistryDataModel.js~RegistryDataModel#id",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 189,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "url",
    "memberof": "src/registry/RegistryDataModel.js~RegistryDataModel",
    "longname": "src/registry/RegistryDataModel.js~RegistryDataModel#url",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 190,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "descriptor",
    "memberof": "src/registry/RegistryDataModel.js~RegistryDataModel",
    "longname": "src/registry/RegistryDataModel.js~RegistryDataModel#descriptor",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 191,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/runtime/RuntimeCatalogue-Local.js",
    "memberof": null,
    "longname": "src/runtime/RuntimeCatalogue-Local.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {divideURL} from '../utils/utils';\r\nimport {CatalogueFactory} from 'service-framework';\r\nimport {HypertyDescriptor, ProtocolStubDescriptor, SourcePackage} from 'service-framework';\r\n\r\nclass RuntimeCatalogue {\r\n\r\n  constructor() {\r\n    // console.log('runtime catalogue');\r\n    let _this = this;\r\n    _this._factory = new CatalogueFactory(false, undefined);\r\n  }\r\n\r\n  // TODO: Delete this\r\n  mockupHypertyDescriptor() {\r\n    let _this = this;\r\n\r\n    // TODO: Remove the code is only for development fase without the Server backend catalogue;\r\n    // Mockup load the base of descriptors\r\n    _this._makeLocalRequest('../resources/descriptors/Hyperties.json').then(function(result) {\r\n      _this.Hyperties = JSON.parse(result);\r\n    });\r\n  }\r\n\r\n  // TODO: Delete this\r\n  mockupStubDescriptor() {\r\n    let _this = this;\r\n\r\n    // TODO: Remove the code is only for development fase without the Server backend catalogue;\r\n    // Mockup load the base of descriptors\r\n    _this._makeLocalRequest('../resources/descriptors/ProtoStubs.json').then(function(result) {\r\n      _this.ProtoStubs = JSON.parse(result);\r\n    });\r\n  }\r\n\r\n  mockupDataSchemaDescriptor() {\r\n    let _this = this;\r\n\r\n    // TODO: Remove the code is only for development fase without the Server backend catalogue;\r\n    // Mockup load the base of descriptors\r\n    _this._makeLocalRequest('../resources/descriptors/DataSchemas.json').then(function(result) {\r\n      _this.DataSchemas = JSON.parse(result);\r\n    });\r\n  }\r\n\r\n  set runtimeURL(runtimeURL) {\r\n    let _this = this;\r\n    _this._runtimeURL = runtimeURL;\r\n\r\n    // TODO: Delete this\r\n    _this.mockupHypertyDescriptor();\r\n    _this.mockupStubDescriptor();\r\n    _this.mockupDataSchemaDescriptor();\r\n  }\r\n\r\n  get runtimeURL() {\r\n    let _this = this;\r\n    return _this._runtimeURL;\r\n  }\r\n\r\n  /**\r\n  * Get hypertyRuntimeURL\r\n  */\r\n  getHypertyRuntimeURL() {\r\n    let _this = this;\r\n\r\n    // TODO: check if this is real needed;\r\n    return _this._hypertyRuntimeURL;\r\n  }\r\n\r\n  /**\r\n  * TODO: Delete this method\r\n  */\r\n  _makeLocalRequest(url) {\r\n\r\n    return new Promise(function(resolve, reject) {\r\n      let protocolmap = {\r\n        'hyperty-catalogue://': 'http://',\r\n        '../': '../'\r\n      };\r\n\r\n      let foundProtocol = false;\r\n      for (let protocol in protocolmap) {\r\n        if (url.slice(0, protocol.length) === protocol) {\r\n          // console.log('exchanging ' + protocol + \" with \" + protocolmap[protocol]);\r\n          url = protocolmap[protocol] + url.slice(protocol.length, url.length);\r\n          foundProtocol = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!foundProtocol) {\r\n        reject('Invalid protocol of url: ' + url);\r\n        return;\r\n      }\r\n\r\n      let xhr = new XMLHttpRequest();\r\n\r\n      // console.log(url);\r\n\r\n      xhr.open('GET', url, true);\r\n\r\n      xhr.onreadystatechange = function(event) {\r\n        let xhr = event.currentTarget;\r\n        if (xhr.readyState === 4) {\r\n          // console.log(\"got response:\", xhr);\r\n          if (xhr.status === 200) {\r\n            resolve(xhr.responseText);\r\n          } else {\r\n            // console.log(\"rejecting promise because of response code: 200 != \", xhr.status);\r\n            reject(xhr.responseText);\r\n          }\r\n        }\r\n      };\r\n\r\n      xhr.send();\r\n\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n  * make a http request to a given URL.\r\n  * @param url\r\n  * @returns {Promise}\r\n  * @private\r\n  */\r\n  _makeExternalRequest(url) {\r\n    // console.log(\"_makeExternalRequest\", url);\r\n\r\n    // TODO: make this request compatible with nodejs\r\n    // at this moment, XMLHttpRequest only is compatible with browser implementation\r\n    // nodejs doesn't support;\r\n    return new Promise(function(resolve, reject) {\r\n      let protocolmap = {\r\n        'hyperty-catalogue://': 'http://'\r\n      };\r\n\r\n      let foundProtocol = false;\r\n      for (let protocol in protocolmap) {\r\n        if (url.slice(0, protocol.length) === protocol) {\r\n          // console.log(\"exchanging \" + protocol + \" with \" + protocolmap[protocol]);\r\n          url = protocolmap[protocol] + url.slice(protocol.length, url.length);\r\n          foundProtocol = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!foundProtocol) {\r\n        reject('Invalid protocol of url: ' + url);\r\n        return;\r\n      }\r\n\r\n      let xhr = new XMLHttpRequest();\r\n\r\n      // console.log(url);\r\n\r\n      xhr.open('GET', url, true);\r\n\r\n      xhr.onreadystatechange = function(event) {\r\n        let xhr = event.currentTarget;\r\n        if (xhr.readyState === 4) {\r\n          // console.log(\"got response:\", xhr);\r\n          if (xhr.status === 200) {\r\n            resolve(xhr.responseText);\r\n          } else {\r\n            // console.log(\"rejecting promise because of response code: 200 != \", xhr.status);\r\n            reject(xhr.responseText);\r\n          }\r\n        }\r\n      };\r\n\r\n      xhr.send();\r\n\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n  * Get HypertyDescriptor\r\n  * @param hypertyURL - e.g. mydomain.com/.well-known/hyperty/MyHyperty\r\n  * @returns {Promise}\r\n  */\r\n  getHypertyDescriptor(hypertyURL) {\r\n    let _this = this;\r\n\r\n    // console.log(\"getHypertyDescriptor\", hypertyURL);\r\n\r\n    return new Promise(function(resolve, reject) {\r\n\r\n      let dividedURL = divideURL(hypertyURL);\r\n      let domain = dividedURL.domain;\r\n      let hyperty = dividedURL.identity;\r\n\r\n      if (!domain) {\r\n        domain = hypertyURL;\r\n      }\r\n\r\n      if (hyperty) {\r\n        hyperty = hyperty.substring(hyperty.lastIndexOf('/') + 1);\r\n      }\r\n\r\n      let result = _this.Hyperties[hyperty];\r\n\r\n      if (result.error) {\r\n        // TODO handle error properly\r\n        reject(result);\r\n      } else {\r\n        // console.log(\"creating hyperty descriptor based on: \", result);\r\n\r\n        // create the descriptor\r\n        let hyperty = _this._factory.createHypertyDescriptorObject(\r\n          result.cguid,\r\n          result.objectName,\r\n          result.description,\r\n          result.language,\r\n          result.sourcePackageURL,\r\n          result.type,\r\n          result.dataObjects\r\n        );\r\n\r\n        // console.log(\"created hyperty descriptor object:\", hyperty);\r\n\r\n        // parse and attach sourcePackage\r\n        let sourcePackage = result.sourcePackage;\r\n        let sourceCode = atob(sourcePackage.sourceCode);\r\n        sourcePackage.sourceCode = sourceCode;\r\n        if (sourcePackage) {\r\n          // console.log(\"hyperty has sourcePackage:\", sourcePackage);\r\n          hyperty.sourcePackage = _this._createSourcePackage(_this._factory, sourcePackage);\r\n        }\r\n\r\n        console.log('hyperty has sourcePackage:', hyperty);\r\n\r\n        resolve(hyperty);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n  * Get source Package from a URL\r\n  * @param sourcePackageURL - e.g. mydomain.com/.well-known/hyperty/MyHyperty/sourcePackage\r\n  * @returns {Promise}\r\n  */\r\n  getSourcePackageFromURL(sourcePackageURL) {\r\n    let _this = this;\r\n\r\n    // console.log(\"getting sourcePackage from:\", sourcePackageURL);\r\n\r\n    return new Promise(function(resolve, reject) {\r\n\r\n      if (sourcePackageURL === '/sourcePackage') {\r\n        reject('sourcePackage is already contained in descriptor, please use it directly');\r\n      }\r\n\r\n      _this._makeExternalRequest(sourcePackageURL).then(function(result) {\r\n        // console.log(\"got raw sourcePackage:\", result);\r\n        if (result.error) {\r\n          // TODO handle error properly\r\n          reject(result);\r\n        } else {\r\n          result = JSON.parse(result);\r\n\r\n          let sourcePackage = result.sourcePackage;\r\n          if (sourcePackage) {\r\n            sourcePackage = _this._createSourcePackage(_this._factory, sourcePackage);\r\n            resolve(sourcePackage);\r\n          } else {\r\n            reject('no source package');\r\n          }\r\n        }\r\n      }).catch(function(reason) {\r\n        reject(reason);\r\n      });\r\n\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n  * Get StubDescriptor\r\n  * @param stubURL - e.g. mydomain.com/.well-known/protostub/MyProtostub\r\n  * @returns {Promise}\r\n  */\r\n  getStubDescriptor(stubURL) {\r\n    let _this = this;\r\n\r\n    // console.log(\"getting stub descriptor from: \" + stubURL);\r\n    return new Promise(function(resolve, reject) {\r\n\r\n      let dividedURL = divideURL(stubURL);\r\n      let domain = dividedURL.domain;\r\n      let protoStub = dividedURL.identity;\r\n\r\n      if (!domain) {\r\n        domain = stubURL;\r\n      }\r\n\r\n      if (!protoStub) {\r\n        protoStub = 'default';\r\n      } else {\r\n        protoStub = protoStub.substring(protoStub.lastIndexOf('/') + 1);\r\n      }\r\n\r\n      let result = _this.ProtoStubs[protoStub];\r\n\r\n      if (result.error) {\r\n        // TODO handle error properly\r\n        reject(result);\r\n      } else {\r\n        console.log('creating stub descriptor based on: ', result);\r\n\r\n        // create the descriptor\r\n        let stub = _this._factory.createProtoStubDescriptorObject(\r\n          result.cguid,\r\n          result.objectName,\r\n          result.description,\r\n          result.language,\r\n          result.sourcePackageURL,\r\n          result.messageSchemas,\r\n          JSON.stringify(result.configuration),\r\n          result.constraints\r\n        );\r\n\r\n        // parse and attach sourcePackage\r\n        let sourcePackage = result.sourcePackage;\r\n        let sourceCode = atob(sourcePackage.sourceCode);\r\n        sourcePackage.sourceCode = sourceCode;\r\n\r\n        if (sourcePackage) {\r\n          sourcePackage = _this._createSourcePackage(_this._factory, sourcePackage);\r\n          stub.sourcePackage = sourcePackage;\r\n        }\r\n        resolve(stub);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n  * Get DataSchemaDescriptor\r\n  * @param dataSchemaURL - e.g. mydomain.com/.well-known/dataschema/MyDataSchema\r\n  * @returns {Promise}\r\n  */\r\n  getDataSchemaDescriptor(dataSchemaURL) {\r\n    let _this = this;\r\n\r\n    return new Promise(function(resolve, reject) {\r\n\r\n      // request the json\r\n      if (dataSchemaURL) {\r\n        dataSchemaURL = dataSchemaURL.substring(dataSchemaURL.lastIndexOf('/') + 1);\r\n      }\r\n\r\n      let result = _this.DataSchemas[dataSchemaURL];\r\n\r\n      if (result.ERROR) {\r\n        // TODO handle error properly\r\n        reject(result);\r\n      } else {\r\n        console.log('creating dataSchema based on: ', result);\r\n\r\n        // FIXME: accessControlPolicy field not needed?\r\n        // create the descriptor\r\n        let dataSchema = _this._factory.createDataObjectSchema(\r\n          result.cguid,\r\n          result.objectName,\r\n          result.description,\r\n          result.language,\r\n          result.sourcePackageURL\r\n        );\r\n\r\n        console.log('created dataSchema descriptor object:', dataSchema);\r\n\r\n        // parse and attach sourcePackage\r\n        let sourcePackage = result.sourcePackage;\r\n        if (sourcePackage) {\r\n          // console.log('dataSchema has sourcePackage:', sourcePackage);\r\n          dataSchema.sourcePackage = _this._createSourcePackage(_this._factory, sourcePackage);\r\n          if (typeof dataSchema.sourcePackage.sourceCode === 'string') {\r\n            dataSchema.sourcePackage.sourceCode = JSON.parse(dataSchema.sourcePackage.sourceCode);\r\n          }\r\n        }\r\n\r\n        resolve(dataSchema);\r\n      }\r\n    });\r\n  }\r\n\r\n  _createSourcePackage(factory, sp) {\r\n    // console.log(\"creating sourcePackage. factory:\", factory, \", raw package:\", sp);\r\n    try {\r\n      sp = JSON.parse(sp);\r\n    } catch (e) {\r\n      console.log('parsing sourcePackage failed. already parsed? -> ', sp);\r\n    }\r\n\r\n    // check encoding\r\n    if (sp.encoding === 'base64') {\r\n      sp.sourceCode = atob(sp.sourceCode);\r\n      sp.encoding = 'UTF-8';\r\n    }\r\n\r\n    let sourcePackage = factory.createSourcePackage(sp.sourceCodeClassname, sp.sourceCode);\r\n\r\n    if (sp.hasOwnProperty('encoding'))\r\n    sourcePackage.encoding = sp.encoding;\r\n\r\n    if (sp.hasOwnProperty('signature'))\r\n    sourcePackage.signature = sp.signature;\r\n\r\n    return sourcePackage;\r\n  }\r\n\r\n}\r\n\r\nexport default RuntimeCatalogue;\r\n"
  },
  {
    "__docId__": 192,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "RuntimeCatalogue",
    "memberof": "src/runtime/RuntimeCatalogue-Local.js",
    "longname": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/runtime/RuntimeCatalogue-Local.js",
    "importStyle": "RuntimeCatalogue",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 193,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue#constructor",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 194,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "mockupHypertyDescriptor",
    "memberof": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue#mockupHypertyDescriptor",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 195,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "mockupStubDescriptor",
    "memberof": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue#mockupStubDescriptor",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 196,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "mockupDataSchemaDescriptor",
    "memberof": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue#mockupDataSchemaDescriptor",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 197,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "runtimeURL",
    "memberof": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue#runtimeURL",
    "access": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 198,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "runtimeURL",
    "memberof": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue#runtimeURL",
    "access": null,
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 199,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getHypertyRuntimeURL",
    "memberof": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue#getHypertyRuntimeURL",
    "access": null,
    "description": "Get hypertyRuntimeURL",
    "lineNumber": 63,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 200,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_makeLocalRequest",
    "memberof": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue#_makeLocalRequest",
    "access": null,
    "description": "TODO: Delete this method",
    "lineNumber": 73,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 201,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_makeExternalRequest",
    "memberof": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue#_makeExternalRequest",
    "access": "private",
    "description": "make a http request to a given URL.",
    "lineNumber": 127,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 202,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getHypertyDescriptor",
    "memberof": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue#getHypertyDescriptor",
    "access": null,
    "description": "Get HypertyDescriptor",
    "lineNumber": 183,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "hypertyURL",
        "description": "e.g. mydomain.com/.well-known/hyperty/MyHyperty"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 203,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSourcePackageFromURL",
    "memberof": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue#getSourcePackageFromURL",
    "access": null,
    "description": "Get source Package from a URL",
    "lineNumber": 244,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "sourcePackageURL",
        "description": "e.g. mydomain.com/.well-known/hyperty/MyHyperty/sourcePackage"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 204,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getStubDescriptor",
    "memberof": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue#getStubDescriptor",
    "access": null,
    "description": "Get StubDescriptor",
    "lineNumber": 284,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "stubURL",
        "description": "e.g. mydomain.com/.well-known/protostub/MyProtostub"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 205,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getDataSchemaDescriptor",
    "memberof": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue#getDataSchemaDescriptor",
    "access": null,
    "description": "Get DataSchemaDescriptor",
    "lineNumber": 344,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dataSchemaURL",
        "description": "e.g. mydomain.com/.well-known/dataschema/MyDataSchema"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 206,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_createSourcePackage",
    "memberof": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue-Local.js~RuntimeCatalogue#_createSourcePackage",
    "access": null,
    "description": null,
    "lineNumber": 389,
    "undocument": true,
    "params": [
      {
        "name": "factory",
        "types": [
          "*"
        ]
      },
      {
        "name": "sp",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 207,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/runtime/RuntimeCatalogue.js",
    "memberof": null,
    "longname": "src/runtime/RuntimeCatalogue.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {divideURL} from '../utils/utils';\r\nimport {CatalogueFactory} from 'service-framework';\r\nimport {HypertyDescriptor, ProtocolStubDescriptor, SourcePackage} from 'service-framework';\r\n\r\nclass RuntimeCatalogue {\r\n\r\n    constructor(nodeHttp, nodeHttps) {\r\n        // console.log('runtime catalogue');\r\n        let _this = this;\r\n        _this._nodeHttp = nodeHttp;\r\n        _this._nodeHttps = nodeHttps;\r\n        _this._factory = new CatalogueFactory(false, undefined);\r\n    }\r\n\r\n    set runtimeURL(runtimeURL) {\r\n        let _this = this;\r\n        _this._runtimeURL = runtimeURL;\r\n    }\r\n\r\n    get runtimeURL() {\r\n        let _this = this;\r\n        return _this._runtimeURL;\r\n    }\r\n\r\n    /**\r\n     * Get hypertyRuntimeURL\r\n     */\r\n    getHypertyRuntimeURL() {\r\n        // TODO: check if this is real needed;\r\n        return _hypertyRuntimeURL;\r\n    }\r\n\r\n    /**\r\n     * make a http request to a given URL.\r\n     * @param url\r\n     * @returns {Promise}\r\n     * @private\r\n     */\r\n    _makeExternalRequest(url, nodeHttp, nodeHttps) {\r\n        // console.log(\"_makeExternalRequest\", url);\r\n\r\n        // TODO: make this request compatible with nodejs\r\n        // at this moment, XMLHttpRequest only is compatible with browser implementation\r\n        // nodejs doesn't support;\r\n        return new Promise(function (resolve, reject) {\r\n            let protocolmap = {\r\n                \"hyperty-catalogue://\": \"https://\",\r\n                \"https://\": \"https://\",\r\n                \"http://\": \"http://\"\r\n            };\r\n\r\n            let usedProtocol;\r\n\r\n            let foundProtocol = false;\r\n            for (var protocol in protocolmap) {\r\n                if (url.slice(0, protocol.length) == protocol) {\r\n                    // console.log(\"exchanging \" + protocol + \" with \" + protocolmap[protocol]);\r\n                    url = protocolmap[protocol] + url.slice(protocol.length, url.length);\r\n                    usedProtocol = protocolmap[protocol];\r\n                    foundProtocol = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!foundProtocol) {\r\n                reject(\"Invalid protocol of url: \" + url);\r\n                return;\r\n            }\r\n\r\n            // nodejs specific http implementations for http & https\r\n            let nodeRequest;\r\n            if (nodeHttp && usedProtocol === \"http://\") {\r\n                nodeRequest = nodeHttp;\r\n            } else if (nodeHttps && usedProtocol === \"https://\") {\r\n                nodeRequest = nodeHttps;\r\n            }\r\n\r\n            if (nodeRequest) {\r\n                // request should be the same for http & https\r\n\r\n                // get url without protocol\r\n                let hostAndPath = url.slice(usedProtocol.length, url.length);\r\n\r\n                // get host (+ port)\r\n                let host = hostAndPath.slice(0, hostAndPath.indexOf(\"/\"));\r\n\r\n                // get path\r\n                let path = hostAndPath.slice(host.length, hostAndPath.length);\r\n\r\n                // if host has port, extract port and remove it from host\r\n                let port;\r\n                if (host.indexOf(\":\") !== -1) {\r\n                    port = host.slice(host.indexOf(\":\") + 1, host.length);\r\n                    host = host.slice(0, host.indexOf(\":\"));\r\n                }\r\n\r\n                // FIXME: remove rejectUnauthorized when catalogue is using valid certificates\r\n                // FIXME: add error handling\r\n                nodeRequest.get({\r\n                    host: host,\r\n                    port: port,\r\n                    path: path,\r\n                    rejectUnauthorized: false\r\n                }, function (response) {\r\n                    var body = \"\";\r\n                    response.on(\"data\", function(d) {\r\n                        body += d;\r\n                    });\r\n                    response.on(\"end\", function() {\r\n                        resolve(body);\r\n                    });\r\n                });\r\n            } else if (typeof XMLHttpRequest !== 'undefined') {\r\n                // generic request\r\n                let xhr = new XMLHttpRequest();\r\n                // console.log(url);\r\n                xhr.open('GET', url, true);\r\n                xhr.onreadystatechange = function (event) {\r\n                    let xhr = event.currentTarget;\r\n                    if (xhr.readyState === 4) {\r\n                        // console.log(\"got response:\", xhr);\r\n                        if (xhr.status === 200) {\r\n                            resolve(xhr.responseText);\r\n                        } else {\r\n                            // console.log(\"rejecting promise because of response code: 200 != \", xhr.status);\r\n                            reject(xhr.responseText);\r\n                        }\r\n                    }\r\n                };\r\n\r\n\r\n                xhr.send();\r\n            } else {\r\n                reject(\"no suitable implementation to send request for protocol '\" + usedProtocol + \"'.\");\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Get HypertyDescriptor\r\n     * @param hypertyURL - e.g. mydomain.com/.well-known/hyperty/MyHyperty\r\n     * @returns {Promise}\r\n     */\r\n    getHypertyDescriptor(hypertyURL) {\r\n        let _this = this;\r\n        // console.log(\"getHypertyDescriptor\", hypertyURL);\r\n\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            // request the json\r\n            _this._makeExternalRequest(hypertyURL, _this._nodeHttp, _this._nodeHttps).then(function (result) {\r\n                result = JSON.parse(result);\r\n\r\n\r\n                if (result[\"ERROR\"]) {\r\n                    // TODO handle error properly\r\n                    reject(result);\r\n                } else {\r\n                    // console.log(\"creating hyperty descriptor based on: \", result);\r\n\r\n                    // create the descriptor\r\n                    let hyperty = _this._factory.createHypertyDescriptorObject(\r\n                        result[\"cguid\"],\r\n                        result[\"objectName\"],\r\n                        result[\"description\"],\r\n                        result[\"language\"],\r\n                        result[\"sourcePackageURL\"],\r\n                        result[\"type\"] || result[\"hypertyType\"],\r\n                        result[\"dataObjects\"]\r\n                    );\r\n\r\n                    // console.log(\"created hyperty descriptor object:\", hyperty);\r\n\r\n                    // parse and attach sourcePackage\r\n                    let sourcePackage = result[\"sourcePackage\"];\r\n                    if (sourcePackage) {\r\n                        // console.log(\"hyperty has sourcePackage:\", sourcePackage);\r\n                        hyperty.sourcePackage = _this._createSourcePackage(_this._factory, sourcePackage);\r\n                    }\r\n\r\n                    resolve(hyperty);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get RuntimeDescriptor\r\n     * @param runtimeURL - e.g. mydomain.com/.well-known/runtime/MyRuntime\r\n     * @returns {Promise}\r\n     */\r\n    getRuntimeDescriptor(runtimeURL) {\r\n        let _this = this;\r\n        // console.log(\"getRuntimeDescriptor\", runtimeURL);\r\n\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            // request the json\r\n            _this._makeExternalRequest(runtimeURL, _this._nodeHttp, _this._nodeHttps).then(function (result) {\r\n                result = JSON.parse(result);\r\n\r\n\r\n                if (result[\"ERROR\"]) {\r\n                    // TODO handle error properly\r\n                    reject(result);\r\n                } else {\r\n\r\n                    // parse capabilities first\r\n                    try {\r\n                        result[\"hypertyCapabilities\"] = JSON.parse(result[\"hypertyCapabilities\"]);\r\n                        result[\"protocolCapabilities\"] = JSON.parse(result[\"protocolCapabilities\"]);\r\n                    } catch (e) {\r\n                        // already json object\r\n                    }\r\n                    console.log(\"creating runtime descriptor based on: \", result);\r\n\r\n\r\n                    // create the descriptor\r\n                    let runtime = _this._factory.createHypertyRuntimeDescriptorObject(\r\n                        result[\"cguid\"],\r\n                        result[\"objectName\"],\r\n                        result[\"description\"],\r\n                        result[\"language\"],\r\n                        result[\"sourcePackageURL\"],\r\n                        result[\"type\"] || result[\"runtimeType\"],\r\n                        result[\"hypertyCapabilities\"],\r\n                        result[\"protocolCapabilities\"]\r\n                    );\r\n\r\n                    console.log(\"created runtime descriptor object:\", runtime);\r\n\r\n                    // parse and attach sourcePackage\r\n                    let sourcePackage = result[\"sourcePackage\"];\r\n                    if (sourcePackage) {\r\n                        // console.log(\"runtime has sourcePackage:\", sourcePackage);\r\n                        runtime.sourcePackage = _this._createSourcePackage(_this._factory, sourcePackage);\r\n                    }\r\n\r\n                    resolve(runtime);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get DataSchemaDescriptor\r\n     * @param dataSchemaURL - e.g. mydomain.com/.well-known/dataschema/MyDataSchema\r\n     * @returns {Promise}\r\n     */\r\n    getDataSchemaDescriptor(dataSchemaURL) {\r\n        let _this = this;\r\n        // console.log(\"getDataSchemaDescriptor\", dataSchemaURL);\r\n\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            // request the json\r\n            _this._makeExternalRequest(dataSchemaURL, _this._nodeHttp, _this._nodeHttps).then(function (result) {\r\n                result = JSON.parse(result);\r\n\r\n\r\n                if (result[\"ERROR\"]) {\r\n                    // TODO handle error properly\r\n                    reject(result);\r\n                } else {\r\n                    console.log(\"creating dataSchema based on: \", result);\r\n\r\n                    // FIXME: accessControlPolicy field not needed?\r\n                    // create the descriptor\r\n                    let dataSchema = _this._factory.createDataObjectSchema(\r\n                        result[\"cguid\"],\r\n                        result[\"objectName\"],\r\n                        result[\"description\"],\r\n                        result[\"language\"],\r\n                        result[\"sourcePackageURL\"]\r\n                    );\r\n\r\n                    console.log(\"created dataSchema descriptor object:\", dataSchema);\r\n\r\n                    // parse and attach sourcePackage\r\n                    let sourcePackage = result[\"sourcePackage\"];\r\n                    if (sourcePackage) {\r\n                        // console.log(\"dataSchema has sourcePackage:\", sourcePackage);\r\n                        dataSchema.sourcePackage = _this._createSourcePackage(_this._factory, sourcePackage);\r\n                    }\r\n\r\n                    resolve(dataSchema);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get source Package from a URL\r\n     * @param sourcePackageURL - e.g. mydomain.com/.well-known/hyperty/MyHyperty/sourcePackage\r\n     * @returns {Promise}\r\n     */\r\n    getSourcePackageFromURL(sourcePackageURL) {\r\n        let _this = this;\r\n\r\n         //console.log(\"getting sourcePackage from:\", sourcePackageURL);\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            _this._makeExternalRequest(sourcePackageURL, _this._nodeHttp, _this._nodeHttps).then(function (result) {\r\n                 //console.log(\"got raw sourcePackage:\", result);\r\n                if (result[\"ERROR\"]) {\r\n                    // TODO handle error properly\r\n                    reject(result);\r\n                } else {\r\n                    result = JSON.parse(result);\r\n                    let sourcePackage = _this._createSourcePackage(_this._factory, result);\r\n                    resolve(sourcePackage);\r\n                }\r\n            }).catch(function (reason) {\r\n                reject(reason);\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Get StubDescriptor\r\n     * @param stubURL - e.g. mydomain.com/.well-known/protostub/MyProtostub\r\n     * @returns {Promise}\r\n     */\r\n    getStubDescriptor(stubURL) {\r\n        let _this = this;\r\n\r\n        // console.log(\"getting stub descriptor from: \" + stubURL);\r\n        return new Promise(function (resolve, reject) {\r\n\r\n          let dividedURL = divideURL(stubURL);\r\n          let domain = dividedURL.domain;\r\n          let protoStub = dividedURL.identity;\r\n\r\n          if (!domain) {\r\n            domain = stubURL;\r\n          }\r\n\r\n          if (!protoStub) {\r\n            protoStub = 'default';\r\n          } else {\r\n            protoStub = protoStub.substring(protoStub.lastIndexOf('/') + 1);\r\n          }\r\n\r\n            let url = 'hyperty-catalogue://' + domain + '/.well-known/protocolstub/' + protoStub;\r\n\r\n            _this._makeExternalRequest(url, _this._nodeHttp, _this._nodeHttps).then(function (result) {\r\n                // console.log(\"makeExternalRequest returned: \", result);\r\n\r\n                result = JSON.parse(result);\r\n                // console.log(\"parsed result: \", result);\r\n\r\n                if (result[\"ERROR\"]) {\r\n                    // TODO handle error properly\r\n                    reject(result);\r\n                } else {\r\n                    // console.log(\"creating stub descriptor based on: \", result);\r\n\r\n                    // create the descriptor\r\n                    let stub = _this._factory.createProtoStubDescriptorObject(\r\n                        result[\"cguid\"],\r\n                        result[\"objectName\"],\r\n                        result[\"description\"],\r\n                        result[\"language\"],\r\n                        result[\"sourcePackageURL\"],\r\n                        result[\"messageSchemas\"],\r\n                        result[\"configuration\"],\r\n                        result[\"constraints\"]\r\n                    );\r\n\r\n                    // parse and attach the sourcePackage\r\n                    let sourcePackage = result[\"sourcePackage\"];\r\n                    if (sourcePackage) {\r\n                        sourcePackage = _this._createSourcePackage(_this._factory, sourcePackage);\r\n                        stub.sourcePackage = sourcePackage;\r\n                    }\r\n                    resolve(stub);\r\n                }\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Returns the sourceCode of a given descriptor\r\n     * @param descriptor - Catalogue Object that was retrieved using e.g. getHypertyDescriptor()\r\n     * @returns {Promise}\r\n     */\r\n    getSourceCodeFromDescriptor(descriptor) {\r\n        let _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (descriptor.sourcePackage) {\r\n                //console.log(\"descriptor has sourcePackage\");\r\n                //console.log(\"returning sourceCode:\", descriptor.sourcePackage.sourceCode);\r\n                resolve(descriptor.sourcePackage.sourceCode);\r\n            } else {\r\n                //console.log(\"descriptor has no sourcePackage, getting it...\");\r\n                let sourcePackage = _this.getSourcePackageFromURL(descriptor.sourcePackageURL).then(function (sourcePackage) {\r\n                    //console.log(\"got sourcePackage:\", sourcePackage);\r\n                    //console.log(\"returning sourceCode:\", sourcePackage.sourceCode);\r\n                    resolve(sourcePackage.sourceCode);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    _createSourcePackage(factory, sp) {\r\n         //console.log(\"creating sourcePackage. factory:\", factory, \", raw package:\", sp);\r\n        try {\r\n            sp = JSON.parse(sp);\r\n        } catch (e) {\r\n             console.log(\"parsing sourcePackage failed. already parsed? -> \", sp);\r\n        }\r\n\r\n        // check encoding\r\n        if (sp[\"encoding\"] === \"base64\") {\r\n            sp[\"sourceCode\"] = atob(sp[\"sourceCode\"]);\r\n        }\r\n\r\n        let sourcePackage = factory.createSourcePackage(sp[\"sourceCodeClassname\"], sp[\"sourceCode\"]);\r\n        if (sp[\"encoding\"])\r\n            sourcePackage.encoding = sp[\"encoding\"];\r\n\r\n        if (sp[\"signature\"])\r\n            sourcePackage.signature = sp[\"signature\"];\r\n\r\n        return sourcePackage;\r\n    }\r\n\r\n}\r\n\r\nexport default RuntimeCatalogue;\r\n"
  },
  {
    "__docId__": 208,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "RuntimeCatalogue",
    "memberof": "src/runtime/RuntimeCatalogue.js",
    "longname": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/runtime/RuntimeCatalogue.js",
    "importStyle": "RuntimeCatalogue",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 209,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue#constructor",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "nodeHttp",
        "types": [
          "*"
        ]
      },
      {
        "name": "nodeHttps",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 210,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "runtimeURL",
    "memberof": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue#runtimeURL",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 211,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "runtimeURL",
    "memberof": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue#runtimeURL",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 212,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getHypertyRuntimeURL",
    "memberof": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue#getHypertyRuntimeURL",
    "access": null,
    "description": "Get hypertyRuntimeURL",
    "lineNumber": 28,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 213,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_makeExternalRequest",
    "memberof": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue#_makeExternalRequest",
    "access": "private",
    "description": "make a http request to a given URL.",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 214,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getHypertyDescriptor",
    "memberof": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue#getHypertyDescriptor",
    "access": null,
    "description": "Get HypertyDescriptor",
    "lineNumber": 145,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "hypertyURL",
        "description": "e.g. mydomain.com/.well-known/hyperty/MyHyperty"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 215,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getRuntimeDescriptor",
    "memberof": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue#getRuntimeDescriptor",
    "access": null,
    "description": "Get RuntimeDescriptor",
    "lineNumber": 193,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "runtimeURL",
        "description": "e.g. mydomain.com/.well-known/runtime/MyRuntime"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 216,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getDataSchemaDescriptor",
    "memberof": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue#getDataSchemaDescriptor",
    "access": null,
    "description": "Get DataSchemaDescriptor",
    "lineNumber": 251,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dataSchemaURL",
        "description": "e.g. mydomain.com/.well-known/dataschema/MyDataSchema"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 217,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSourcePackageFromURL",
    "memberof": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue#getSourcePackageFromURL",
    "access": null,
    "description": "Get source Package from a URL",
    "lineNumber": 298,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "sourcePackageURL",
        "description": "e.g. mydomain.com/.well-known/hyperty/MyHyperty/sourcePackage"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 218,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getStubDescriptor",
    "memberof": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue#getStubDescriptor",
    "access": null,
    "description": "Get StubDescriptor",
    "lineNumber": 327,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "stubURL",
        "description": "e.g. mydomain.com/.well-known/protostub/MyProtostub"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 219,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSourceCodeFromDescriptor",
    "memberof": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue#getSourceCodeFromDescriptor",
    "access": null,
    "description": "Returns the sourceCode of a given descriptor",
    "lineNumber": 391,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "descriptor",
        "description": "Catalogue Object that was retrieved using e.g. getHypertyDescriptor()"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 220,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_createSourcePackage",
    "memberof": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue",
    "longname": "src/runtime/RuntimeCatalogue.js~RuntimeCatalogue#_createSourcePackage",
    "access": null,
    "description": null,
    "lineNumber": 409,
    "undocument": true,
    "params": [
      {
        "name": "factory",
        "types": [
          "*"
        ]
      },
      {
        "name": "sp",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 221,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/runtime/RuntimeUA.js",
    "memberof": null,
    "longname": "src/runtime/RuntimeUA.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "//Main dependecies\r\nimport Registry from '../registry/Registry';\r\nimport IdentityModule from '../identity/IdentityModule';\r\nimport PolicyEngine from '../policy/PolicyEngine';\r\nimport MessageBus from '../bus/MessageBus';\r\n\r\nimport RuntimeCatalogue from './RuntimeCatalogue-Local';\r\n\r\nimport SyncherManager from '../syncher/SyncherManager';\r\n\r\nimport {divideURL, emptyObject} from '../utils/utils';\r\n\r\n/**\r\n * Runtime User Agent Interface will process all the dependecies of the core runtime;\r\n * @author Vitor Silva [vitor-t-silva@telecom.pt]\r\n * @version 0.2.0\r\n *\r\n * @property {sandboxFactory} sandboxFactory - Specific implementation of sandbox;\r\n * @property {RuntimeCatalogue} runtimeCatalogue - Catalogue of components can be installed;\r\n * @property {runtimeURL} runtimeURL - This identify the core runtime, should be unique;\r\n * @property {IdentityModule} identityModule - Identity Module;\r\n * @property {PolicyEngine} policyEngine - Policy Engine Module;\r\n * @property {Registry} registry - Registry Module;\r\n * @property {MessageBus} messageBus - Message Bus is used like a router to redirect the messages from one component to other(s)\r\n */\r\nclass RuntimeUA {\r\n\r\n  /**\r\n   * Create a new instance of Runtime User Agent\r\n   * @param {sandboxFactory} sandboxFactory - Specific implementation for the environment where the core runtime will run;\r\n   * @param {domain} domainURL - specify the domain base for the runtime;\r\n   */\r\n  constructor(sandboxFactory, domain) {\r\n\r\n    if (!sandboxFactory) throw new Error('The sandbox factory is a needed parameter');\r\n    if (!domain) throw new Error('You need the domain of runtime');\r\n\r\n    let _this = this;\r\n\r\n    _this.sandboxFactory = sandboxFactory;\r\n\r\n    _this.runtimeCatalogue = new RuntimeCatalogue();\r\n\r\n    // TODO: post and return registry/hypertyRuntimeInstance to and from Back-end Service\r\n    // the response is like: runtime://sp1/123\r\n\r\n    let runtimeURL = 'runtime://' + domain + '/' + Math.floor((Math.random() * 10000) + 1);\r\n    _this.runtimeURL = runtimeURL;\r\n    _this.domain = domain;\r\n\r\n    // TODO: check if runtime catalogue need the runtimeURL;\r\n    _this.runtimeCatalogue.runtimeURL = runtimeURL;\r\n\r\n    // Instantiate the identity Module\r\n    _this.identityModule = new IdentityModule();\r\n\r\n    // Use the sandbox factory to create an AppSandbox;\r\n    // In the future can be decided by policyEngine if we need\r\n    // create a AppSandbox or not;\r\n    let appSandbox = sandboxFactory.createAppSandbox();\r\n\r\n    // Instantiate the Registry Module\r\n    _this.registry = new Registry(runtimeURL, appSandbox, _this.identityModule);\r\n\r\n    // Instantiate the Policy Engine\r\n    _this.policyEngine = new PolicyEngine(_this.identityModule, _this.registry);\r\n\r\n    // Instantiate the Message Bus\r\n    _this.messageBus = new MessageBus(_this.registry);\r\n    _this.messageBus.pipeline.handlers = [\r\n\r\n      // Policy message authorise\r\n      function(ctx) {\r\n        _this.policyEngine.authorise(ctx.msg).then(function(changedMgs) {\r\n          ctx.msg = changedMgs;\r\n          ctx.next();\r\n        }).catch(function(reason) {\r\n          console.error(reason);\r\n          ctx.fail(reason);\r\n        });\r\n      }\r\n    ];\r\n\r\n    // Add to App Sandbox the listener;\r\n    appSandbox.addListener('*', function(msg) {\r\n      _this.messageBus.postMessage(msg);\r\n    });\r\n\r\n    // Register messageBus on Registry\r\n    _this.registry.messageBus = _this.messageBus;\r\n\r\n    _this.registry.addEventListener('runtime:loadStub', function(domainURL) {\r\n\r\n      _this.loadStub(domainURL).then(function() {\r\n        _this.registry.trigger('runtime:stubLoaded', domainURL);\r\n      }).catch(function(reason) {\r\n        console.error(reason);\r\n      });\r\n    });\r\n\r\n    // Use sandbox factory to use specific methods\r\n    // and set the message bus to the factory\r\n    sandboxFactory.messageBus = _this.messageBus;\r\n\r\n    // Instanciate the SyncherManager;\r\n    _this.syncherManager = new SyncherManager(_this.runtimeURL, _this.messageBus, { }, _this.runtimeCatalogue);\r\n\r\n  }\r\n\r\n  /**\r\n  * Accomodate interoperability in H2H and proto on the fly for newly discovered devices in M2M\r\n  * @param  {CatalogueDataObject.HypertyDescriptor}   descriptor    descriptor\r\n  */\r\n  discoverHiperty(descriptor) {\r\n    // Body...\r\n  }\r\n\r\n  /**\r\n  * Register Hyperty deployed by the App that is passed as input parameter. To be used when App and Hyperties are from the same domain otherwise the RuntimeUA will raise an exception and the App has to use the loadHyperty(..) function.\r\n  * @param  {Object} Object                   hypertyInstance\r\n  * @param  {URL.HypertyCatalogueURL}         descriptor      descriptor\r\n  */\r\n  registerHyperty(hypertyInstance, descriptor) {\r\n    // Body...\r\n  }\r\n\r\n  /**\r\n  * Deploy Hyperty from Catalogue URL\r\n  * @param  {URL.HypertyCatalogueURL}    hyperty hypertyDescriptor url;\r\n  */\r\n  loadHyperty(hypertyDescriptorURL) {\r\n\r\n    let _this = this;\r\n\r\n    if (!hypertyDescriptorURL) throw new Error('Hyperty descriptor url parameter is needed');\r\n\r\n    return new Promise(function(resolve, reject) {\r\n\r\n      let _hypertyURL;\r\n      let _hypertySandbox;\r\n      let _hypertyDescriptor;\r\n      let _hypertySourcePackage;\r\n\r\n      let errorReason = function(reason) {\r\n        reject(reason);\r\n      };\r\n\r\n      // Get Hyperty descriptor\r\n      // TODO: the request Module should be changed,\r\n      // because at this moment it is incompatible with nodejs;\r\n      // Probably we need to pass a factory like we do for sandboxes;\r\n      console.info('------------------ Hyperty ------------------------');\r\n      console.info('Get hyperty descriptor for :', hypertyDescriptorURL);\r\n      _this.runtimeCatalogue.getHypertyDescriptor(hypertyDescriptorURL).then(function(hypertyDescriptor) {\r\n        // at this point, we have completed \"step 2 and 3\" as shown in https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-hyperty.md\r\n        console.info('1: return hyperty descriptor', hypertyDescriptor);\r\n\r\n        // hyperty contains the full path of the catalogue URL, e.g.\r\n        // catalogue.rethink.eu/.well-known/..........\r\n        _hypertyDescriptor = hypertyDescriptor;\r\n\r\n        let sourcePackageURL = hypertyDescriptor.sourcePackageURL;\r\n\r\n        if (sourcePackageURL === '/sourcePackage') {\r\n          return hypertyDescriptor.sourcePackage;\r\n        }\r\n\r\n        // Get the hyperty source code\r\n        return _this.runtimeCatalogue.getSourcePackageFromURL(sourcePackageURL);\r\n      })\r\n      .then(function(sourcePackage) {\r\n        console.info('2: return hyperty source code');\r\n\r\n        // at this point, we have completed \"step 4 and 5\" as shown in https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-hyperty.md\r\n\r\n        _hypertySourcePackage = sourcePackage;\r\n\r\n        //\r\n        // steps 6 -- 9 are skipped.\r\n        // TODO: on release of core 0.2;\r\n        // TODO: Promise to check the policy engine\r\n\r\n        // mock-up code;\r\n        // temporary code, only\r\n        let policy = true;\r\n\r\n        return policy;\r\n      })\r\n      .then(function(policyResult) {\r\n        console.info('3: return policy engine result: ', policyResult);\r\n\r\n        // we have completed step 6 to 9 of https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-hyperty.md right now.\r\n        //\r\n        // Steps 6 -- 9\r\n        // As a result of the sipped steps, we know at this point if we execute\r\n        // inSameSandbox or not.\r\n        //\r\n\r\n        // For testing, just assume we execute in same Sandbox.\r\n        let inSameSandbox = true;\r\n        let sandbox;\r\n\r\n        if (inSameSandbox) {\r\n\r\n          // this don't need be a Promise;\r\n          sandbox = _this.registry.getAppSandbox();\r\n\r\n          // we have completed step 11 here.\r\n        } else {\r\n\r\n          let domain = divideURL(hypertyDescriptorURL).domain;\r\n\r\n          // getSandbox, this will return a promise;\r\n          sandbox = _this.registry.getSandbox(domain);\r\n        }\r\n\r\n        // this will return the sandbox or one promise to getSandbox;\r\n        return sandbox;\r\n      }).then(function(sandbox) {\r\n        console.info('4: return the sandbox', sandbox);\r\n\r\n        // Return the sandbox indepentely if it running in the same sandbox or not\r\n        // we have completed step 14 here.\r\n        return sandbox;\r\n      }, function(reason) {\r\n        console.error('4.1: try to register a new sandbox', reason);\r\n\r\n        // check if the sandbox is registed for this hyperty descriptor url;\r\n        // Make Steps xxx --- xxx\r\n        // Instantiate the Sandbox\r\n        let sandbox = _this.sandboxFactory.createSandbox();\r\n\r\n        sandbox.addListener('*', function(msg) {\r\n          _this.messageBus.postMessage(msg);\r\n        });\r\n\r\n        return sandbox;\r\n      })\r\n      .then(function(sandbox) {\r\n        console.info('5: return sandbox and register');\r\n\r\n        _hypertySandbox = sandbox;\r\n\r\n        // Register hyperty\r\n        return _this.registry.registerHyperty(sandbox, hypertyDescriptorURL);\r\n      })\r\n      .then(function(hypertyURL) {\r\n        console.info('6: Hyperty url, after register hyperty', hypertyURL);\r\n\r\n        // we have completed step 16 of https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-hyperty.md right now.\r\n\r\n        _hypertyURL = hypertyURL;\r\n\r\n        console.log(_hypertyDescriptor);\r\n\r\n        // Extend original hyperty configuration;\r\n        let configuration = {};\r\n        if (!emptyObject(_hypertyDescriptor.configuration)) {\r\n          configuration = Object.assign({}, JSON.parse(_hypertyDescriptor.configuration));\r\n        }\r\n        configuration.runtimeURL = _this.runtimeURL;\r\n\r\n        // We will deploy the component - step 17 of https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-hyperty.md right now.\r\n        return _hypertySandbox.deployComponent(_hypertySourcePackage.sourceCode, _hypertyURL, configuration);\r\n      })\r\n      .then(function(deployComponentStatus) {\r\n        console.info('7: Deploy component status for hyperty: ', deployComponentStatus);\r\n\r\n        // we have completed step 19 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-hyperty.md right now.\r\n\r\n        // Add the message bus listener to the appSandbox or hypertSandbox;\r\n        _this.messageBus.addListener(_hypertyURL, function(msg) {\r\n          _hypertySandbox.postMessage(msg);\r\n        });\r\n\r\n        // we have completed step 20 of https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-hyperty.md right now.\r\n        let hyperty = {\r\n          runtimeHypertyURL: _hypertyURL,\r\n          status: deployComponentStatus\r\n        };\r\n\r\n        resolve(hyperty);\r\n\r\n        // we have completed step 21 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-hyperty.md right now.\r\n        console.log('------------------ END ------------------------');\r\n      })\r\n      .catch(errorReason);\r\n\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n  * Deploy Stub from Catalogue URL or domain url\r\n  * @param  {URL.URL}     domain          domain\r\n  */\r\n  loadStub(protostubURL) {\r\n\r\n    let _this = this;\r\n\r\n    if (!protostubURL) throw new Error('domain parameter is needed');\r\n\r\n    return new Promise(function(resolve, reject) {\r\n\r\n      let domain = divideURL(protostubURL).domain;\r\n\r\n      if (!domain) {\r\n        domain = protostubURL;\r\n      }\r\n\r\n      let _stubSandbox;\r\n      let _stubDescriptor;\r\n      let _runtimeProtoStubURL;\r\n      let _stubSourcePackage;\r\n\r\n      let errorReason = function(reason) {\r\n        console.error(reason);\r\n        reject(reason);\r\n      };\r\n\r\n      // Discover Protocol Stub\r\n      console.info('------------------- ProtoStub ---------------------------\\n');\r\n      console.info('Discover or Create a new ProtoStub for domain: ', domain);\r\n      _this.registry.discoverProtostub(domain).then(function(descriptor) {\r\n        // Is registed?\r\n        console.info('1. Proto Stub Discovered: ', descriptor);\r\n        _stubDescriptor = descriptor;\r\n\r\n        // we have completed step 2 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\r\n\r\n        return _stubDescriptor;\r\n      }, function(reason) {\r\n        // is not registed?\r\n        console.info('1. Proto Stub not found:', reason);\r\n\r\n        // we have completed step 3 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\r\n\r\n        // we need to get ProtoStub descriptor step 4 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\r\n        return _this.runtimeCatalogue.getStubDescriptor(protostubURL);\r\n      })\r\n      .then(function(stubDescriptor) {\r\n\r\n        console.info('2. return the ProtoStub descriptor:', stubDescriptor);\r\n\r\n        // we have completed step 5 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\r\n\r\n        _stubDescriptor = stubDescriptor;\r\n\r\n        let sourcePackageURL = stubDescriptor.sourcePackageURL;\r\n\r\n        if (sourcePackageURL === '/sourcePackage') {\r\n          return stubDescriptor.sourcePackage;\r\n        }\r\n\r\n        // we need to get ProtoStub Source code from descriptor - step 6 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\r\n        return _this.runtimeCatalogue.getSourcePackageFromURL(sourcePackageURL);\r\n      })\r\n      .then(function(stubSourcePackage) {\r\n        console.info('3. return the ProtoStub Source Code: ', stubSourcePackage);\r\n\r\n        // we have completed step 7 https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\r\n\r\n        _stubSourcePackage = stubSourcePackage;\r\n\r\n        // TODO: Check on PEP (policy Engine) if we need the sandbox and check if the Sandbox Factory have the context sandbox;\r\n        let policy = true;\r\n        return policy;\r\n      })\r\n      .then(function(policy) {\r\n        // this will return the sandbox or one promise to getSandbox;\r\n        return _this.registry.getSandbox(domain);\r\n      })\r\n      .then(function(stubSandbox) {\r\n\r\n        console.info('4. if the sandbox is registered then return the sandbox', stubSandbox);\r\n\r\n        // we have completed step xxx https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\r\n\r\n        _stubSandbox = stubSandbox;\r\n        return stubSandbox;\r\n      }, function(reason) {\r\n        console.info('5. Sandbox was not found, creating a new one', reason);\r\n\r\n        // check if the sandbox is registed for this stub descriptor url;\r\n        // Make Steps xxx --- xxx\r\n        // Instantiate the Sandbox\r\n        let sandbox = _this.sandboxFactory.createSandbox();\r\n        sandbox.addListener('*', function(msg) {\r\n          _this.messageBus.postMessage(msg);\r\n        });\r\n\r\n        return sandbox;\r\n      })\r\n      .then(function(sandbox) {\r\n        console.info('6. return the sandbox instance and register', sandbox, 'to domain ', domain);\r\n\r\n        _stubSandbox = sandbox;\r\n\r\n        // we need register stub on registry - step xxx https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\r\n        return _this.registry.registerStub(_stubSandbox, domain);\r\n      })\r\n      .then(function(runtimeProtoStubURL) {\r\n\r\n        console.info('7. return the runtime protostub url: ', runtimeProtoStubURL);\r\n\r\n        // we have completed step xxx https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\r\n\r\n        _runtimeProtoStubURL = runtimeProtoStubURL;\r\n\r\n        console.log(_stubDescriptor);\r\n\r\n        // Extend original hyperty configuration;\r\n        let configuration = Object.assign({}, JSON.parse(_stubDescriptor.configuration));\r\n        configuration.runtimeURL = _this.runtimeURL;\r\n\r\n        // Deploy Component step xxx\r\n        return _stubSandbox.deployComponent(_stubSourcePackage.sourceCode, runtimeProtoStubURL, configuration);\r\n      })\r\n      .then(function(deployComponentStatus) {\r\n        console.info('8: return deploy component for sandbox status: ', deployComponentStatus);\r\n\r\n        // we have completed step xxx https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\r\n\r\n        // Add the message bus listener\r\n        _this.messageBus.addListener(_runtimeProtoStubURL, function(msg) {\r\n          _stubSandbox.postMessage(msg);\r\n        });\r\n\r\n        // we have completed step xxx https://github.com/reTHINK-project/core-framework/blob/master/docs/specs/runtime/dynamic-view/basics/deploy-protostub.md\r\n\r\n        // Load Stub function resolved with success;\r\n        let stub = {\r\n          runtimeProtoStubURL: _runtimeProtoStubURL,\r\n          status: deployComponentStatus\r\n        };\r\n\r\n        resolve(stub);\r\n        console.info('------------------- END ---------------------------\\n');\r\n\r\n      })\r\n      .catch(errorReason);\r\n\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n  * Used to check for updates about components handled in the Catalogue including protocol stubs and Hyperties. check relationship with lifecycle management provided by Service Workers\r\n  * @param  {CatalogueURL}       url url\r\n  */\r\n  checkForUpdate(url) {\r\n    // Body...\r\n  }\r\n\r\n}\r\n\r\nexport default RuntimeUA;\r\n"
  },
  {
    "__docId__": 222,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "RuntimeUA",
    "memberof": "src/runtime/RuntimeUA.js",
    "longname": "src/runtime/RuntimeUA.js~RuntimeUA",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/runtime/RuntimeUA.js",
    "importStyle": "RuntimeUA",
    "description": "Runtime User Agent Interface will process all the dependecies of the core runtime;",
    "lineNumber": 26,
    "version": "0.2.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Vitor Silva [vitor-t-silva@telecom.pt]"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "sandboxFactory"
        ],
        "spread": false,
        "optional": false,
        "name": "sandboxFactory",
        "description": "Specific implementation of sandbox;"
      },
      {
        "nullable": null,
        "types": [
          "RuntimeCatalogue"
        ],
        "spread": false,
        "optional": false,
        "name": "runtimeCatalogue",
        "description": "Catalogue of components can be installed;"
      },
      {
        "nullable": null,
        "types": [
          "runtimeURL"
        ],
        "spread": false,
        "optional": false,
        "name": "runtimeURL",
        "description": "This identify the core runtime, should be unique;"
      },
      {
        "nullable": null,
        "types": [
          "IdentityModule"
        ],
        "spread": false,
        "optional": false,
        "name": "identityModule",
        "description": "Identity Module;"
      },
      {
        "nullable": null,
        "types": [
          "PolicyEngine"
        ],
        "spread": false,
        "optional": false,
        "name": "policyEngine",
        "description": "Policy Engine Module;"
      },
      {
        "nullable": null,
        "types": [
          "Registry"
        ],
        "spread": false,
        "optional": false,
        "name": "registry",
        "description": "Registry Module;"
      },
      {
        "nullable": null,
        "types": [
          "MessageBus"
        ],
        "spread": false,
        "optional": false,
        "name": "messageBus",
        "description": "Message Bus is used like a router to redirect the messages from one component to other(s)"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 223,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/runtime/RuntimeUA.js~RuntimeUA",
    "longname": "src/runtime/RuntimeUA.js~RuntimeUA#constructor",
    "access": null,
    "description": "Create a new instance of Runtime User Agent",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "sandboxFactory"
        ],
        "spread": false,
        "optional": false,
        "name": "sandboxFactory",
        "description": "Specific implementation for the environment where the core runtime will run;"
      },
      {
        "nullable": null,
        "types": [
          "domain"
        ],
        "spread": false,
        "optional": false,
        "name": "domainURL",
        "description": "specify the domain base for the runtime;"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 224,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "discoverHiperty",
    "memberof": "src/runtime/RuntimeUA.js~RuntimeUA",
    "longname": "src/runtime/RuntimeUA.js~RuntimeUA#discoverHiperty",
    "access": null,
    "description": "Accomodate interoperability in H2H and proto on the fly for newly discovered devices in M2M",
    "lineNumber": 114,
    "params": [
      {
        "nullable": null,
        "types": [
          "CatalogueDataObject.HypertyDescriptor"
        ],
        "spread": false,
        "optional": false,
        "name": "descriptor",
        "description": "descriptor"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 225,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "registerHyperty",
    "memberof": "src/runtime/RuntimeUA.js~RuntimeUA",
    "longname": "src/runtime/RuntimeUA.js~RuntimeUA#registerHyperty",
    "access": null,
    "description": "Register Hyperty deployed by the App that is passed as input parameter. To be used when App and Hyperties are from the same domain otherwise the RuntimeUA will raise an exception and the App has to use the loadHyperty(..) function.",
    "lineNumber": 123,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "Object",
        "description": "hypertyInstance"
      },
      {
        "nullable": null,
        "types": [
          "URL.HypertyCatalogueURL"
        ],
        "spread": false,
        "optional": false,
        "name": "descriptor",
        "description": "descriptor"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 226,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "loadHyperty",
    "memberof": "src/runtime/RuntimeUA.js~RuntimeUA",
    "longname": "src/runtime/RuntimeUA.js~RuntimeUA#loadHyperty",
    "access": null,
    "description": "Deploy Hyperty from Catalogue URL",
    "lineNumber": 131,
    "params": [
      {
        "nullable": null,
        "types": [
          "URL.HypertyCatalogueURL"
        ],
        "spread": false,
        "optional": false,
        "name": "hyperty",
        "description": "hypertyDescriptor url;"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 227,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "loadStub",
    "memberof": "src/runtime/RuntimeUA.js~RuntimeUA",
    "longname": "src/runtime/RuntimeUA.js~RuntimeUA#loadStub",
    "access": null,
    "description": "Deploy Stub from Catalogue URL or domain url",
    "lineNumber": 297,
    "params": [
      {
        "nullable": null,
        "types": [
          "URL.URL"
        ],
        "spread": false,
        "optional": false,
        "name": "domain",
        "description": "domain"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 228,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "checkForUpdate",
    "memberof": "src/runtime/RuntimeUA.js~RuntimeUA",
    "longname": "src/runtime/RuntimeUA.js~RuntimeUA#checkForUpdate",
    "access": null,
    "description": "Used to check for updates about components handled in the Catalogue including protocol stubs and Hyperties. check relationship with lifecycle management provided by Service Workers",
    "lineNumber": 451,
    "params": [
      {
        "nullable": null,
        "types": [
          "CatalogueURL"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 229,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/runtimeUA.js",
    "memberof": null,
    "longname": "src/runtimeUA.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import RuntimeUA from './runtime/RuntimeUA';\r\nexport default RuntimeUA;\r\n"
  },
  {
    "__docId__": 230,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/sandbox/Sandbox.js",
    "memberof": null,
    "longname": "src/sandbox/Sandbox.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import SandboxRegistry from '../sandbox/SandboxRegistry';\r\nimport MiniBus from '../bus/MiniBus';\r\n// import MessageFactory from '../../resources/MessageFactory';\r\n\r\n/**\r\n * @author micaelpedrosa@gmail.com\r\n * Base class to implement external sandbox component\r\n */\r\nclass Sandbox extends MiniBus {\r\n\r\n  constructor() {\r\n\r\n    super();\r\n\r\n    let _this = this;\r\n\r\n    // Add Message Factory\r\n    // let messageFactory = new MessageFactory();\r\n    // _this.messageFactory = messageFactory;\r\n  }\r\n\r\n  /**\r\n   * Deploy an instance of the component into the sandbox.\r\n   * @param  {string} componentSourceCode Component source code (Hyperty, ProtoStub, etc)\r\n   * @param  {URL} componentURL Hyperty, ProtoStub, or any other component address.\r\n   * @param  {Config} configuration Config parameters of the component\r\n   * @return {Promise<string>} return deployed if successful, or any other string with an error\r\n   */\r\n  deployComponent(componentSourceCode, componentURL, configuration) {\r\n\r\n    let _this = this;\r\n\r\n    // let messageFactory = _this.messageFactory;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      //TODO: message format is not properly defined yet\r\n      let deployMessage = {\r\n        type: 'create', from: SandboxRegistry.ExternalDeployAddress, to: SandboxRegistry.InternalDeployAddress,\r\n        body: { url: componentURL, sourceCode: componentSourceCode, config: configuration }\r\n      };\r\n\r\n      // createMessageRequest(from, to, contextId, value, policy, idToken, accessToken, resource, signature)\r\n      // let deployMessage = messageFactory.createMessageRequest(SandboxRegistry.ExternalDeployAddress, SandboxRegistry.InternalDeployAddress, 'deploy', {url: componentURL, sourceCode: componentSourceCode, config: configuration});\r\n\r\n      //send message into the sandbox internals and wait for reply\r\n      _this.postMessage(deployMessage, (reply) => {\r\n        if (reply.body.code === 200) {\r\n          //is this response complaint with the spec?\r\n          resolve('deployed');\r\n        } else {\r\n          reject(reply.body.desc);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove the instance of a previously deployed component.\r\n   * @param  {URL} componentURL Hyperty, ProtoStub, or any other component address.\r\n   * @return {Promise<string>} return undeployed if successful, or any other string with an error\r\n   */\r\n  removeComponent(componentURL) {\r\n    let _this = this;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      //TODO: message format is not properly defined yet\r\n      let removeMessage = {\r\n        type: 'delete', from: SandboxRegistry.ExternalDeployAddress, to: SandboxRegistry.InternalDeployAddress,\r\n        body: { url: componentURL }\r\n      };\r\n\r\n      //send message into the sandbox internals and wait for reply\r\n      _this.postMessage(removeMessage, (reply) => {\r\n        if (reply.body.code === 200) {\r\n          //is this response complaint with the spec?\r\n          resolve('undeployed');\r\n        } else {\r\n          reject(reply.body.desc);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nexport default Sandbox;\r\n"
  },
  {
    "__docId__": 231,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Sandbox",
    "memberof": "src/sandbox/Sandbox.js",
    "longname": "src/sandbox/Sandbox.js~Sandbox",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/sandbox/Sandbox.js",
    "importStyle": "Sandbox",
    "description": null,
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "micaelpedrosa@gmail.com\nBase class to implement external sandbox component"
      }
    ],
    "interface": false,
    "extends": [
      "src/bus/MiniBus.js~MiniBus"
    ]
  },
  {
    "__docId__": 232,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/sandbox/Sandbox.js~Sandbox",
    "longname": "src/sandbox/Sandbox.js~Sandbox#constructor",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 233,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "deployComponent",
    "memberof": "src/sandbox/Sandbox.js~Sandbox",
    "longname": "src/sandbox/Sandbox.js~Sandbox#deployComponent",
    "access": null,
    "description": "Deploy an instance of the component into the sandbox.",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "componentSourceCode",
        "description": "Component source code (Hyperty, ProtoStub, etc)"
      },
      {
        "nullable": null,
        "types": [
          "URL"
        ],
        "spread": false,
        "optional": false,
        "name": "componentURL",
        "description": "Hyperty, ProtoStub, or any other component address."
      },
      {
        "nullable": null,
        "types": [
          "Config"
        ],
        "spread": false,
        "optional": false,
        "name": "configuration",
        "description": "Config parameters of the component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string>"
      ],
      "spread": false,
      "description": "return deployed if successful, or any other string with an error"
    },
    "generator": false
  },
  {
    "__docId__": 234,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeComponent",
    "memberof": "src/sandbox/Sandbox.js~Sandbox",
    "longname": "src/sandbox/Sandbox.js~Sandbox#removeComponent",
    "access": null,
    "description": "Remove the instance of a previously deployed component.",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "URL"
        ],
        "spread": false,
        "optional": false,
        "name": "componentURL",
        "description": "Hyperty, ProtoStub, or any other component address."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string>"
      ],
      "spread": false,
      "description": "return undeployed if successful, or any other string with an error"
    },
    "generator": false
  },
  {
    "__docId__": 235,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/sandbox/SandboxRegistry.js",
    "memberof": null,
    "longname": "src/sandbox/SandboxRegistry.js",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "content": "/**\r\n * @author micaelpedrosa@gmail.com\r\n * Base class to implement internal deploy manager of components.\r\n */\r\n\r\n// import MessageFactory from '../../resources/MessageFactory';\r\n\r\nclass SandboxRegistry {\r\n  /* private\r\n  _components: <url: instance>\r\n  */\r\n\r\n  constructor(bus) {\r\n    let _this = this;\r\n\r\n    _this._bus = bus;\r\n    _this._components = {};\r\n\r\n    // Add Message Factory\r\n    // let messageFactory = new MessageFactory();\r\n    // _this.messageFactory = messageFactory;\r\n\r\n    bus.addListener(SandboxRegistry.InternalDeployAddress, (msg) => {\r\n      //console.log('SandboxRegistry-RCV: ', msg);\r\n      // let responseMsg = {\r\n      //   id: msg.id, type: 'response', from: SandboxRegistry.InternalDeployAddress, to: SandboxRegistry.ExternalDeployAddress\r\n      // };\r\n\r\n      switch (msg.type) {\r\n        case 'create': _this._onDeploy(msg); break;\r\n        case 'delete': _this._onRemove(msg); break;\r\n      }\r\n    });\r\n  }\r\n\r\n  get components() { return this._components; }\r\n\r\n  _responseMsg(msg, code, value) {\r\n\r\n    let _this = this;\r\n\r\n    // let messageFactory = _this.messageFactory;\r\n\r\n    let responseMsg = {\r\n      id: msg.id, type: 'response', from: SandboxRegistry.InternalDeployAddress, to: SandboxRegistry.ExternalDeployAddress\r\n    };\r\n\r\n    // Chanege the origin message, because the response;\r\n    // msg.from = SandboxRegistry.InternalDeployAddress;\r\n    // msg.to = SandboxRegistry.ExternalDeployAddress;\r\n\r\n    let body = {};\r\n    if (code) body.code = code;\r\n    if (value) body.desc = value;\r\n\r\n    responseMsg.body = body;\r\n\r\n    // return messageFactory.createResponse(msg, code, value);\r\n    return responseMsg;\r\n  }\r\n\r\n  _onDeploy(msg) {\r\n    let _this = this;\r\n    let config = msg.body.config;\r\n    let componentURL = msg.body.url;\r\n    let sourceCode = msg.body.sourceCode;\r\n    let responseCode;\r\n    let responseDesc;\r\n\r\n    if (!_this._components.hasOwnProperty(componentURL)) {\r\n      try {\r\n        _this._components[componentURL] = _this._create(componentURL, sourceCode, config);\r\n        responseCode = 200;\r\n      } catch (error) {\r\n        responseCode = 500;\r\n        responseDesc = error;\r\n      }\r\n    } else {\r\n      responseCode = 500;\r\n      responseDesc = 'Instance ' + componentURL + ' already exist!';\r\n    }\r\n\r\n    // Create response message with MessageFactory\r\n    let responseMsg = _this._responseMsg(msg, responseCode, responseDesc);\r\n    _this._bus.postMessage(responseMsg);\r\n  }\r\n\r\n  _onRemove(msg) {\r\n    let _this = this;\r\n    let componentURL = msg.body.url;\r\n    let responseCode;\r\n    let responseDesc;\r\n\r\n    if (_this._components.hasOwnProperty(componentURL)) {\r\n      //remove component from the pool and all listeners\r\n      delete _this._components[componentURL];\r\n      _this._bus.removeAllListenersOf(componentURL);\r\n      responseCode = 200;\r\n    } else {\r\n      responseCode = 500;\r\n      responseDesc = 'Instance ' + componentURL + ' doesn\\'t exist!';\r\n    }\r\n\r\n    let responseMsg = _this._responseMsg(msg, responseCode, responseDesc);\r\n\r\n    _this._bus.postMessage(responseMsg);\r\n  }\r\n\r\n  /**\r\n   * This method should be implemented by the internal sandbox code.\r\n   * @param  {ComponentURL} url URL used for the instance\r\n   * @param  {string} sourceCode Code of the component\r\n   * @param  {Config} config Configuration parameters\r\n   * @return {Object} Returns instance of the component or throw an error \"throw 'error message'\"\r\n   */\r\n  _create(url, sourceCode, config) {\r\n    //implementation specific\r\n    /* example code:\r\n      eval(sourceCode);\r\n      return activate(url, _this._bus, config);\r\n    */\r\n  }\r\n}\r\n\r\nSandboxRegistry.ExternalDeployAddress = 'sandbox://external';\r\nSandboxRegistry.InternalDeployAddress = 'sandbox://internal';\r\n\r\nexport default SandboxRegistry;\r\n"
  },
  {
    "__docId__": 236,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SandboxRegistry",
    "memberof": "src/sandbox/SandboxRegistry.js",
    "longname": "src/sandbox/SandboxRegistry.js~SandboxRegistry",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/sandbox/SandboxRegistry.js",
    "importStyle": "SandboxRegistry",
    "description": null,
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "micaelpedrosa@gmail.com\nBase class to implement internal deploy manager of components."
      }
    ],
    "interface": false
  },
  {
    "__docId__": 237,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/sandbox/SandboxRegistry.js~SandboxRegistry",
    "longname": "src/sandbox/SandboxRegistry.js~SandboxRegistry#constructor",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "bus",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 238,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "components",
    "memberof": "src/sandbox/SandboxRegistry.js~SandboxRegistry",
    "longname": "src/sandbox/SandboxRegistry.js~SandboxRegistry#components",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 239,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_responseMsg",
    "memberof": "src/sandbox/SandboxRegistry.js~SandboxRegistry",
    "longname": "src/sandbox/SandboxRegistry.js~SandboxRegistry#_responseMsg",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [
      {
        "name": "msg",
        "types": [
          "*"
        ]
      },
      {
        "name": "code",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 240,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onDeploy",
    "memberof": "src/sandbox/SandboxRegistry.js~SandboxRegistry",
    "longname": "src/sandbox/SandboxRegistry.js~SandboxRegistry#_onDeploy",
    "access": null,
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "params": [
      {
        "name": "msg",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 241,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onRemove",
    "memberof": "src/sandbox/SandboxRegistry.js~SandboxRegistry",
    "longname": "src/sandbox/SandboxRegistry.js~SandboxRegistry#_onRemove",
    "access": null,
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "params": [
      {
        "name": "msg",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 242,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_create",
    "memberof": "src/sandbox/SandboxRegistry.js~SandboxRegistry",
    "longname": "src/sandbox/SandboxRegistry.js~SandboxRegistry#_create",
    "access": null,
    "description": "This method should be implemented by the internal sandbox code.",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "ComponentURL"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "URL used for the instance"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sourceCode",
        "description": "Code of the component"
      },
      {
        "nullable": null,
        "types": [
          "Config"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Configuration parameters"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Returns instance of the component or throw an error \"throw 'error message'\""
    },
    "generator": false
  },
  {
    "__docId__": 243,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/sandbox.js",
    "memberof": null,
    "longname": "src/sandbox.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Sandbox from './sandbox/Sandbox';\r\nimport SandboxRegistry from './sandbox/SandboxRegistry';\r\n\r\nexport {Sandbox, SandboxRegistry};\r\n"
  },
  {
    "__docId__": 244,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/syncher/ObjectAllocation.js",
    "memberof": null,
    "longname": "src/syncher/ObjectAllocation.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "class ObjectAllocation {\r\n  /* private\r\n  _url: URL\r\n  _bus: MiniBus\r\n  */\r\n\r\n  /**\r\n   * Create an Object Allocation\r\n   * @param  {URL.URL}      url - url from who is sending the message\r\n   * @param  {MiniBus}      bus - MiniBus used for address allocation\r\n   */\r\n  constructor(url, bus) {\r\n    let _this = this;\r\n\r\n    _this._url = url;\r\n    _this._bus = bus;\r\n  }\r\n\r\n  /**\r\n   * get the URL value\r\n   * @return {string} The url value;\r\n   */\r\n  get url() { return this._url; }\r\n\r\n  /**\r\n   * Ask for creation of a number of Object addresses, to the domain message node.\r\n   * @param  {Domain} domain - Domain of the message node.\r\n   * @param  {number} number - Number of addresses to request\r\n   * @returns {Promise<ObjectURL>}  A list of ObjectURL's\r\n   */\r\n  create(domain, scheme, children, number) {\r\n    let _this = this;\r\n\r\n    let msg = {\r\n      type: 'create', from: _this._url, to: 'domain://msg-node.' + domain + '/object-address-allocation',\r\n      body: { urlScheme: scheme, resourceChildren: children, number: number }\r\n    };\r\n\r\n    return new Promise((resolve, reject) => {\r\n      _this._bus.postMessage(msg, (reply) => {\r\n        if (reply.body.code === 200) {\r\n          resolve(reply.body.allocated);\r\n        } else {\r\n          reject(reply.body.desc);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nexport default ObjectAllocation;\r\n"
  },
  {
    "__docId__": 245,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ObjectAllocation",
    "memberof": "src/syncher/ObjectAllocation.js",
    "longname": "src/syncher/ObjectAllocation.js~ObjectAllocation",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/syncher/ObjectAllocation.js",
    "importStyle": "ObjectAllocation",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 246,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/syncher/ObjectAllocation.js~ObjectAllocation",
    "longname": "src/syncher/ObjectAllocation.js~ObjectAllocation#constructor",
    "access": null,
    "description": "Create an Object Allocation",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "URL.URL"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url from who is sending the message"
      },
      {
        "nullable": null,
        "types": [
          "MiniBus"
        ],
        "spread": false,
        "optional": false,
        "name": "bus",
        "description": "MiniBus used for address allocation"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 247,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "url",
    "memberof": "src/syncher/ObjectAllocation.js~ObjectAllocation",
    "longname": "src/syncher/ObjectAllocation.js~ObjectAllocation#url",
    "access": null,
    "description": "get the URL value",
    "lineNumber": 23,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The url value;"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 248,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/syncher/ObjectAllocation.js~ObjectAllocation",
    "longname": "src/syncher/ObjectAllocation.js~ObjectAllocation#create",
    "access": null,
    "description": "Ask for creation of a number of Object addresses, to the domain message node.",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<ObjectURL>}  A list of ObjectURL's"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Domain"
        ],
        "spread": false,
        "optional": false,
        "name": "domain",
        "description": "Domain of the message node."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "number",
        "description": "Number of addresses to request"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<ObjectURL>"
      ],
      "spread": false,
      "description": "A list of ObjectURL's"
    },
    "generator": false
  },
  {
    "__docId__": 249,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/syncher/SyncherManager.js",
    "memberof": null,
    "longname": "src/syncher/SyncherManager.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { divideURL } from '../utils/utils';\r\nimport ObjectAllocation from './ObjectAllocation';\r\n\r\n/**\r\n * @author micaelpedrosa@gmail.com\r\n * Core Syncronization system.\r\n */\r\nclass SyncherManager {\r\n  /* private\r\n  _url: URL\r\n  _bus: MiniBus\r\n  _registry: Registry\r\n  _allocator: ObjectAllocation\r\n\r\n  _subscriptions: { ObjectURL: { owner: HypertyURL, schema: Schema, sl: MsgListener, cl: [MsgListener], subs: [HypertyURL] } }\r\n  */\r\n\r\n  constructor(runtimeURL, bus, registry, catalog, allocator) {\r\n    let _this = this;\r\n\r\n    _this._bus = bus;\r\n    _this._registry = registry;\r\n    _this._catalog = catalog;\r\n\r\n    //TODO: these should be saved in persistence engine?\r\n    _this._url = runtimeURL + '/sm';\r\n    _this._objectURL = runtimeURL + '/object-allocation';\r\n    _this._subscriptions = {};\r\n\r\n    //TODO: this should not be hardcoded!\r\n    _this._domain = divideURL(runtimeURL).domain;\r\n\r\n    if (allocator) {\r\n      _this._allocator = allocator;\r\n    } else {\r\n      _this._allocator = new ObjectAllocation(_this._objectURL, bus);\r\n    }\r\n\r\n    bus.addListener(_this._url, (msg) => {\r\n      console.log('SyncherManager-RCV: ', msg);\r\n      switch (msg.type) {\r\n        case 'create': _this._onCreate(msg); break;\r\n        case 'delete': _this._onDelete(msg); break;\r\n        case 'subscribe': _this._onLocalSubscribe(msg); break;\r\n        case 'unsubscribe': _this._onLocalUnSubscribe(msg); break;\r\n      }\r\n    });\r\n  }\r\n\r\n  get url() { return this._url; }\r\n\r\n  _onCreate(msg) {\r\n    let _this = this;\r\n    let owner = msg.from;\r\n    let domain = divideURL(msg.from).domain;\r\n\r\n    //TODO: 5-7 authorizeObjectCreation(owner, obj ???? )\r\n    //TODO: other optional steps\r\n\r\n    //get schema from catalogue and parse -> (scheme, children)\r\n    _this._catalog.getDataSchemaDescriptor(msg.body.schema).then((descriptor) => {\r\n      let properties = descriptor.sourcePackage.sourceCode.properties;\r\n      let scheme = properties.scheme ? properties.scheme.constant : 'resource';\r\n      let children = properties.children ? properties.children.constant : [];\r\n\r\n      _this._allocator.create(domain, scheme, children, 1).then((allocated) => {\r\n        //TODO: get address from address allocator ?\r\n        let objURL = allocated[0];\r\n        let objSubscriptorURL = objURL + '/subscription';\r\n\r\n        //15. add subscription listener\r\n        let subscriptorListener = _this._bus.addListener(objSubscriptorURL, (msg) => {\r\n          console.log(objSubscriptorURL + '-RCV: ', msg);\r\n          switch (msg.type) {\r\n            case 'subscribe': _this._onRemoteSubscribe(objURL, msg); break;\r\n            case 'unsubscribe': _this._onRemoteUnSubscribe(objURL, msg); break;\r\n          }\r\n        });\r\n\r\n        let objSubscription = { owner: owner, children: children, sl: subscriptorListener, cl: [], subs: [] };\r\n        _this._subscriptions[objURL] = objSubscription;\r\n\r\n        //add children listeners...\r\n        let childBaseURL = objURL + '/children/';\r\n        children.forEach((child) => {\r\n          let childURL = childBaseURL + child;\r\n          let childListener = _this._bus.addListener(childURL, (msg) => {\r\n\r\n            //TODO: what todo here? Process child creations?\r\n            console.log('SyncherManager-' + childURL + '-RCV: ', msg);\r\n          });\r\n\r\n          objSubscription.cl.push(childListener);\r\n        });\r\n\r\n        //all ok, send response\r\n        _this._bus.postMessage({\r\n          id: msg.id, type: 'response', from: msg.to, to: owner,\r\n          body: { code: 200, resource: objURL, children: children }\r\n        });\r\n\r\n        //19. send create to all observers, responses will be deliver to the Hyperty owner?\r\n        setTimeout(() => {\r\n          //schedule for next cycle needed, because the Reporter should be available.\r\n          msg.body.authorise.forEach((hypertyURL) => {\r\n            _this._bus.postMessage({\r\n              type: 'create', from: owner, to: hypertyURL,\r\n              body: { schema: msg.body.schema, resource: objURL, value: msg.body.value }\r\n            });\r\n          });\r\n        });\r\n      });\r\n    }).catch((reason) => {\r\n      _this._bus.postMessage({\r\n        id: msg.id, type: 'response', from: msg.to, to: owner,\r\n        body: { code: 500, desc: reason }\r\n      });\r\n    });\r\n  }\r\n\r\n  _onDelete(msg) {\r\n    let _this = this;\r\n\r\n    //TODO: where to get objectURL ?\r\n    let objURL = '<objURL>';\r\n\r\n    //destroy all objURL listeners\r\n    delete _this._subscriptions[objURL];\r\n    _this._bus.removeAllListenersOf(objURL);\r\n    _this._bus.removeAllListenersOf(objURL + '/subscription');\r\n\r\n    //TODO: destroy object in the registry?\r\n  }\r\n\r\n  _onRemoteSubscribe(objURL, msg) {\r\n    let _this = this;\r\n    let hypertyUrl = msg.body.subscriber;\r\n\r\n    let subscription = _this._subscriptions[objURL];\r\n\r\n    //27. validate if subscription already exists?\r\n    if (subscription.subs.indexOf(hypertyUrl) !== -1) {\r\n      let errorMsg = {\r\n        id: msg.id, type: 'response', from: msg.to, to: hypertyUrl,\r\n        body: {code: 500, desc: 'Subscription for (' + objURL + ' : ' +  hypertyUrl + ') already exists!'}\r\n      };\r\n\r\n      _this._bus.postMessage(errorMsg);\r\n      return;\r\n    }\r\n\r\n    //31. ask to subscribe to Syncher? (depends on the operation mode)\r\n    //TODO: get mode from object!\r\n    let mode = 'sub/pub';\r\n\r\n    if (mode === 'sub/pub') {\r\n      //forward to Hyperty owner\r\n      let forwardMsg = {\r\n        type: 'forward', from: _this._url, to: subscription.owner,\r\n        body: { type: msg.type, from: hypertyUrl, to: objURL }\r\n      };\r\n\r\n      _this._bus.postMessage(forwardMsg, (reply) => {\r\n        console.log('forward-reply: ', reply);\r\n        if (reply.body.code === 200) {\r\n          //subscription accepted (add forward and subscription)\r\n          _this._bus.addForward(objURL, hypertyUrl);\r\n          subscription.subs.push(hypertyUrl);\r\n        }\r\n\r\n        //send subscribe-response\r\n        _this._bus.postMessage({\r\n          id: msg.id, type: 'response', from: msg.to, to: msg.from,\r\n          body: reply.body\r\n        });\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  _onRemoteUnSubscribe(objURL, msg) {\r\n    let _this = this;\r\n    let hypertyUrl = msg.from;\r\n\r\n    let subs = _this._subscriptions[objURL].subs;\r\n    let index = subs.indexOf(hypertyUrl);\r\n    subs.splice(index, 1);\r\n\r\n    //TODO: send un-subscribe message to Syncher? (depends on the operation mode)\r\n  }\r\n\r\n  _onLocalSubscribe(msg) {\r\n    let _this = this;\r\n\r\n    let domain = divideURL(msg.from).domain;\r\n    let objURL = msg.body.resource;\r\n    let objURLSubscription = objURL + '/subscription';\r\n\r\n    //get schema from catalogue and parse -> (children)\r\n    _this._catalog.getDataSchemaDescriptor(msg.body.schema).then((descriptor) => {\r\n      let properties = descriptor.sourcePackage.sourceCode.properties;\r\n      let children = properties.children ? properties.children.constant : [];\r\n      let childBaseURL = objURL + '/children/';\r\n\r\n      //1. subscribe msg for the domain node\r\n      let nodeSubscribeMsg = {\r\n        type: 'subscribe', from: _this._url, to: 'domain://msg-node.' + domain + '/sm',\r\n        body: { resource: msg.body.resource, children: children }\r\n      };\r\n\r\n      //2. subscribe in msg-node\r\n      _this._bus.postMessage(nodeSubscribeMsg, (reply) => {\r\n        console.log('node-subscribe-response: ', reply);\r\n        if (reply.body.code === 200) {\r\n          //listener accepted (add forward and subscribe to reporter)\r\n          _this._bus.addForward(objURL, msg.from);\r\n\r\n          //add forward for children\r\n          children.forEach((child) => {\r\n            _this._bus.addForward(childBaseURL + child, msg.from);\r\n          });\r\n\r\n          //send provisional response\r\n          this._bus.postMessage({\r\n            id: msg.id, type: 'response', from: msg.to, to: msg.from,\r\n            body: { code: 100, childrenResources: children }\r\n          });\r\n\r\n          let objSubscribeMsg = {\r\n            id: msg.id, type: 'subscribe', from: _this._url, to: objURLSubscription,\r\n            body: { subscriber: msg.from }\r\n          };\r\n\r\n          //subscribe to reporter SM\r\n          _this._bus.postMessage(objSubscribeMsg, (reply) => {\r\n            //forward to hyperty:\r\n            reply.from = _this._url;\r\n            reply.to = msg.from;\r\n            this._bus.postMessage(reply);\r\n          });\r\n        } else {\r\n          //listener rejected\r\n          _this._bus.postMessage({\r\n            id: msg.id, type: 'response', from: msg.to, to: msg.from,\r\n            body: reply.body\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  _onLocalUnSubscribe(msg) {\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default SyncherManager;\r\n"
  },
  {
    "__docId__": 250,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SyncherManager",
    "memberof": "src/syncher/SyncherManager.js",
    "longname": "src/syncher/SyncherManager.js~SyncherManager",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/syncher/SyncherManager.js",
    "importStyle": "SyncherManager",
    "description": null,
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "micaelpedrosa@gmail.com\nCore Syncronization system."
      }
    ],
    "interface": false
  },
  {
    "__docId__": 251,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/syncher/SyncherManager.js~SyncherManager",
    "longname": "src/syncher/SyncherManager.js~SyncherManager#constructor",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "runtimeURL",
        "types": [
          "*"
        ]
      },
      {
        "name": "bus",
        "types": [
          "*"
        ]
      },
      {
        "name": "registry",
        "types": [
          "*"
        ]
      },
      {
        "name": "catalog",
        "types": [
          "*"
        ]
      },
      {
        "name": "allocator",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 252,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "url",
    "memberof": "src/syncher/SyncherManager.js~SyncherManager",
    "longname": "src/syncher/SyncherManager.js~SyncherManager#url",
    "access": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 253,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onCreate",
    "memberof": "src/syncher/SyncherManager.js~SyncherManager",
    "longname": "src/syncher/SyncherManager.js~SyncherManager#_onCreate",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "params": [
      {
        "name": "msg",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 254,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onDelete",
    "memberof": "src/syncher/SyncherManager.js~SyncherManager",
    "longname": "src/syncher/SyncherManager.js~SyncherManager#_onDelete",
    "access": null,
    "description": null,
    "lineNumber": 121,
    "undocument": true,
    "params": [
      {
        "name": "msg",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 255,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onRemoteSubscribe",
    "memberof": "src/syncher/SyncherManager.js~SyncherManager",
    "longname": "src/syncher/SyncherManager.js~SyncherManager#_onRemoteSubscribe",
    "access": null,
    "description": null,
    "lineNumber": 135,
    "undocument": true,
    "params": [
      {
        "name": "objURL",
        "types": [
          "*"
        ]
      },
      {
        "name": "msg",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 256,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onRemoteUnSubscribe",
    "memberof": "src/syncher/SyncherManager.js~SyncherManager",
    "longname": "src/syncher/SyncherManager.js~SyncherManager#_onRemoteUnSubscribe",
    "access": null,
    "description": null,
    "lineNumber": 181,
    "undocument": true,
    "params": [
      {
        "name": "objURL",
        "types": [
          "*"
        ]
      },
      {
        "name": "msg",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 257,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onLocalSubscribe",
    "memberof": "src/syncher/SyncherManager.js~SyncherManager",
    "longname": "src/syncher/SyncherManager.js~SyncherManager#_onLocalSubscribe",
    "access": null,
    "description": null,
    "lineNumber": 192,
    "undocument": true,
    "params": [
      {
        "name": "msg",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 258,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onLocalUnSubscribe",
    "memberof": "src/syncher/SyncherManager.js~SyncherManager",
    "longname": "src/syncher/SyncherManager.js~SyncherManager#_onLocalUnSubscribe",
    "access": null,
    "description": null,
    "lineNumber": 252,
    "undocument": true,
    "params": [
      {
        "name": "msg",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 259,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/EventEmitter.js",
    "memberof": null,
    "longname": "src/utils/EventEmitter.js",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "content": "/**\r\n * EventEmitter\r\n * All classes which extends this, can have addEventListener and trigger events;\r\n */\r\nclass EventEmitter {\r\n\r\n  /**\r\n   * addEventListener listen for an eventType\r\n   * @param  {string}         eventType - listening for this type of event\r\n   * @param  {Function}       cb        - callback function will be executed when the event it is invoked\r\n   */\r\n  addEventListener(eventType, cb) {\r\n    let _this = this;\r\n    _this[eventType] = cb;\r\n  }\r\n\r\n  /**\r\n   * Invoke the eventType\r\n   * @param  {string} eventType - event will be invoked\r\n   * @param  {object} params - parameters will be passed to the addEventListener\r\n   */\r\n  trigger(eventType, params) {\r\n    let _this = this;\r\n\r\n    if (_this[eventType]) {\r\n      _this[eventType](params);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default EventEmitter;\r\n"
  },
  {
    "__docId__": 260,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "EventEmitter",
    "memberof": "src/utils/EventEmitter.js",
    "longname": "src/utils/EventEmitter.js~EventEmitter",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/utils/EventEmitter.js",
    "importStyle": "EventEmitter",
    "description": "EventEmitter\nAll classes which extends this, can have addEventListener and trigger events;",
    "lineNumber": 5,
    "interface": false
  },
  {
    "__docId__": 261,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addEventListener",
    "memberof": "src/utils/EventEmitter.js~EventEmitter",
    "longname": "src/utils/EventEmitter.js~EventEmitter#addEventListener",
    "access": null,
    "description": "addEventListener listen for an eventType",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eventType",
        "description": "listening for this type of event"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": "callback function will be executed when the event it is invoked"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 262,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "trigger",
    "memberof": "src/utils/EventEmitter.js~EventEmitter",
    "longname": "src/utils/EventEmitter.js~EventEmitter#trigger",
    "access": null,
    "description": "Invoke the eventType",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eventType",
        "description": "event will be invoked"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameters will be passed to the addEventListener"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 263,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/utils.js",
    "memberof": null,
    "longname": "src/utils/utils.js",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "content": "/**\r\n * Support module with some functions will be useful\r\n * @module utils\r\n */\r\n\r\n/**\r\n * @typedef divideURL\r\n * @type Object\r\n * @property {string} type The type of URL\r\n * @property {string} domain The domain of URL\r\n * @property {string} identity The identity of URL\r\n */\r\n\r\n/**\r\n * Divide an url in type, domain and identity\r\n * @param  {URL.URL} url - url address\r\n * @return {divideURL} the result of divideURL\r\n */\r\nexport function divideURL(url) {\r\n\r\n  // let re = /([a-zA-Z-]*)?:\\/\\/(?:\\.)?([-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b)*(\\/[\\/\\d\\w\\.-]*)*(?:[\\?])*(.+)*/gi;\r\n  let re = /([a-zA-Z-]*):\\/\\/(?:\\.)?([-a-zA-Z0-9@:%._\\+~#=]{2,256})([-a-zA-Z0-9@:%._\\+~#=\\/]*)/gi;\r\n  let subst = '$1,$2,$3';\r\n  let parts = url.replace(re, subst).split(',');\r\n  let result = {\r\n    type: parts[0],\r\n    domain: parts[1],\r\n    identity: parts[2]\r\n  };\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Check if an Object is empty\r\n * @param  {Object} object Object to be checked\r\n * @return {Boolean}       status of Object, empty or not (true|false);\r\n */\r\nexport function emptyObject(object) {\r\n  return Object.keys(object).length > 0 ? false : true;\r\n}\r\n\r\n/**\r\n * Make a COPY of the original data\r\n * @param  {Object}  obj - object to be cloned\r\n * @return {Object}\r\n */\r\nexport function deepClone(obj) {\r\n  //TODO: simple but inefficient JSON deep clone...\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\n"
  },
  {
    "__docId__": 264,
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "divideURL",
    "memberof": "src/utils/utils.js",
    "longname": "src/utils/utils.js~divideURL",
    "access": null,
    "description": null,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The type of URL"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "domain",
        "description": "The domain of URL"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "identity",
        "description": "The identity of URL"
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "divideURL"
    }
  },
  {
    "__docId__": 265,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "divideURL",
    "memberof": "src/utils/utils.js",
    "longname": "src/utils/utils.js~divideURL",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/utils/utils.js",
    "importStyle": "{divideURL}",
    "description": "Divide an url in type, domain and identity",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "URL.URL"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url address"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "divideURL"
      ],
      "spread": false,
      "description": "the result of divideURL"
    },
    "generator": false
  },
  {
    "__docId__": 266,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "emptyObject",
    "memberof": "src/utils/utils.js",
    "longname": "src/utils/utils.js~emptyObject",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/utils/utils.js",
    "importStyle": "{emptyObject}",
    "description": "Check if an Object is empty",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "Object to be checked"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "status of Object, empty or not (true|false);"
    },
    "generator": false
  },
  {
    "__docId__": 267,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "deepClone",
    "memberof": "src/utils/utils.js",
    "longname": "src/utils/utils.js~deepClone",
    "access": null,
    "export": true,
    "importPath": "runtime-core/src/utils/utils.js",
    "importStyle": "{deepClone}",
    "description": "Make a COPY of the original data",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "object to be cloned"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 269,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 270,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 271,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 272,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 273,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 274,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 275,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 276,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 277,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 278,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 279,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 280,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 281,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 282,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 283,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 284,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 285,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 286,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 287,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 288,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 289,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 290,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 291,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 292,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 293,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 294,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 295,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 296,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 297,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 298,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 299,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 300,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 301,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 302,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 303,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 304,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 305,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 306,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 307,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 308,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 309,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 310,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 311,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 312,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 313,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 314,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 315,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 317,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 318,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 319,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 320,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 321,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 322,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 323,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 324,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": null,
    "builtinExternal": true
  }
]