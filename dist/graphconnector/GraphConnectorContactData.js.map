{"version":3,"sources":["graphconnector/GraphConnectorContactData.js"],"names":["GraphConnectorContactData","guid","firstName","lastName","_classCallCheck3","default","this","_guid","_userIDs","_firstName","_lastName","_privateContact","_lastSyncBloomFilter1Hop","Date","toISOString","_lastSyncDomainUserIDs","_residenceLocation","_groups","userIDs","boolPrivate","_contactsBloomFilter1Hop","bf","geohash","groups"],"mappings":"0XA0BMA,qCAQF,QAAAA,GAAYC,EAAMC,EAAWC,IAAU,EAAAC,iBAAAC,SAAAC,KAAAN,GACrCM,KAAKC,MAAQN,EACbK,KAAKE,YACLF,KAAKG,WAAaP,EAClBI,KAAKI,UAAYP,EACjBG,KAAKK,iBAAkB,EACvBL,KAAKM,yBAA2B,GAAIC,MAAK,GAAGC,cAC5CR,KAAKS,uBAkCL,GAAKF,MAAA,GAAWC,cAjChBR,KAAKU,mBACLV,KAAKW,yEAQL,MAAOX,MAAKC,oBAOLN,GACPK,KAAKC,MAAQN,kCAQb,MAAOK,MAAKE,uBAOFU,GACVZ,KAAKE,SAAWU,EAChBZ,KAAKS,wBAAyB,GAAIF,OAAOC,gDAQzC,MAAOR,MAAKG,yBAOAP,GACZI,KAAKG,WAAaP,mCAQlB,MAAOI,MAAKI,wBAODP,GACXG,KAAKI,UAAYP,yCAQjB,MAAOG,MAAKK,8BAOKQ,GACjBb,KAAKK,gBAAkBQ,kDAQvB,MAAOb,MAAKc,uCAOcC,GAC1Bf,KAAKc,yBAA2BC,EAChCf,KAAKM,0BAA2B,GAAIC,OAAOC,wDAQ3C,MAAOR,MAAKU,iCAOQM,GACpBhB,KAAKU,mBAAqBM,iCAQ1B,MAAOhB,MAAKW,sBAOHM,GACTjB,KAAKW,QAAUM,2BAKNvB","file":"graphconnector/GraphConnectorContactData.js","sourcesContent":["/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n/**\n* Represents information about a contact.\n* @author beierle@tu-berlin.de\n*/\nclass GraphConnectorContactData {\n\n  /**\n   * Constructs a new object representing information about one contact.\n   * @param  {String}     guid        The GUID of the new contact.\n   * @param  {String}   firstName   The first name of the new contact.\n   * @param  {String}   lastName    The last name of the new contact.\n   */\n    constructor(guid, firstName, lastName) {\n      this._guid = guid;\n      this._userIDs = [];\n      this._firstName = firstName;\n      this._lastName = lastName;\n      this._privateContact = false;\n      this._lastSyncBloomFilter1Hop = new Date(0).toISOString();\n      this._lastSyncDomainUserIDs = new Date(0).toISOString();\n      this._residenceLocation;\n      this._groups = [];\n    }\n\n    /**\n     * Returns the GUID.\n     * @returns  {String}     GUID        GUID of the contact.\n     */\n    get guid() {\n      return this._guid;\n    }\n\n    /**\n     * Sets the GUID.\n     * @param  {String}     GUID        GUID of the contat.\n     */\n    set guid(guid) {\n      this._guid = guid;\n    }\n\n    /**\n     * Returns the user IDs.\n     * @returns  {List<String>}     userIDs        UserIDs of the contact.\n     */\n    get userIDs() {\n      return this._userIDs;\n    }\n\n    /**\n     * Sets the userIDs.\n     * @param  {List<String>}     userIDs        UserIDs of the contat.\n     */\n    set userIDs(userIDs) {\n      this._userIDs = userIDs;\n      this._lastSyncDomainUserIDs = new Date().toISOString();\n    }\n\n    /**\n     * Returns the first name.\n     * @returns  {String}     firstName        First name of the contact.\n     */\n    get firstName() {\n      return this._firstName;\n    }\n\n    /**\n     * Sets the first name.\n     * @param  {String}     firstName        First name of the contat.\n     */\n    set firstName(firstName) {\n      this._firstName = firstName;\n    }\n\n    /**\n     * Returns the last name.\n     * @returns  {String}     lastName        Last name of the contact.\n     */\n    get lastName() {\n      return this._lastName;\n    }\n\n    /**\n     * Sets the last name.\n     * @param  {String}     lastName        Last name of the contat.\n     */\n    set lastName(lastName) {\n      this._lastName = lastName;\n    }\n\n    /**\n     * Returns the privacy status of the contact.\n     * @returns  {Boolean}     privateContact        True/false value indicating the privacy status of the contact.\n     */\n    get privateContact() {\n      return this._privateContact;\n    }\n\n    /**\n     * Sets the privacy status of the contact according to the given Boolean value.\n     * @param  {Boolean}     boolPrivate        True/false value indicating the privacy status of the contact.\n     */\n    set privateContact(boolPrivate) {\n      this._privateContact = boolPrivate;\n    }\n\n    /**\n     * Returns the Bloom filter containing the hashed GUIDs of the contacts for the contact.\n     * @returns  {BloomFilter}     bf        Bloom filter for the contact.\n     */\n    get contactsBloomFilter1Hop() {\n      return this._contactsBloomFilter1Hop;\n    }\n\n    /**\n     * Sets the friends-of-friends Bloom filter containing the hashed GUIDs of the contacts for the contact.\n     * @param  {BloomFilter}     bf        Bloom filter for the contact.\n     */\n    set contactsBloomFilter1Hop(bf) {\n      this._contactsBloomFilter1Hop = bf;\n      this._lastSyncBloomFilter1Hop = new Date().toISOString();\n    }\n\n    /**\n     * Returns the geohash of the residence location.\n     * @returns  {String}     geohash        Geohash of the residence location.\n     */\n    get residenceLocation() {\n      return this._residenceLocation;\n    }\n\n    /**\n     * Sets the geohash of the residence location.\n     * @param  {String}     geohash        Geohash of the residence location.\n     */\n    set residenceLocation(geohash) {\n      this._residenceLocation = geohash;\n    }\n\n    /**\n     * Returns the groups.\n     * @returns  {List<String>}     groups        Groups of the contact.\n     */\n    get groups() {\n      return this._groups;\n    }\n\n    /**\n     * Sets the groups.\n     * @param  {List<String>}     groups        Groups of the contat.\n     */\n    set groups(groups) {\n      this._groups = groups;\n    }\n\n}\n\nexport default GraphConnectorContactData;\n"],"sourceRoot":"/source/"}