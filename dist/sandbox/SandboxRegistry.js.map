{"version":3,"sources":["sandbox/SandboxRegistry.js"],"names":["SandboxRegistry","bus","_classCallCheck3","default","this","_this","_bus","_components","addListener","InternalDeployAddress","msg","type","_onDeploy","_onRemove","code","value","responseMsg","id","from","to","ExternalDeployAddress","body","desc","config","componentURL","url","sourceCode","responseCode","responseDesc","hasOwnProperty","_create","error","_responseMsg","postMessage","removeAllListenersOf"],"mappings":"0XAiDQA,2BAqBJ,QAAAA,GAAAC,IAAA,EAAAC,iBAAAC,SAAAC,KAAAJ,EACI,IAAAK,GAAcD,IAMlBC,GAAAC,KAAAL,EAEII,EAAOE,eA9BXN,EAAIO,YAAYR,EAAgBS,sBAAuB,SAACC,GAkGxD,OAAAA,EAAAC,MA3FI,IAAK,SAAUN,EAAMO,UAAUF,EAAM,MACrC,KAAK,SAAUL,EAAMQ,UAAUH,4EAOxBA,EAAKI,EAAMC,GAEtB,GAKIC,IACFC,GAAIP,EAAIO,GAAIN,KAAM,WAAYO,KAAMlB,EAAgBS,sBAAuBU,GAAInB,EAAgBoB,uBAO7FC,IAOJ,OANIP,KAAMO,EAAKP,KAAOA,GAClBC,IAAOM,EAAKC,KAAOP,GAEvBC,EAAYK,KAAOA,EAGZL,oCAICN,GACR,GAAIL,GAAQD,KACRmB,EAASb,EAAIW,KAAKE,OAClBC,EAAed,EAAIW,KAAKI,IACxBC,EAAahB,EAAIW,KAAKK,WACtBC,EAAA,OACAC,EAAA,MAEJ,IAAKvB,EAAME,YAAYsB,eAAeL,GASpCG,EAAe,IACfC,EAAe,YAAcJ,EAAe,sBAT5C,KACEnB,EAAME,YAAYiB,GAAgBnB,EAAMyB,QAAQN,EAAcE,EAAYH,GAC1EI,EAAe,IACf,MAAOI,GACPJ,EAAe,IACfC,EAAeG,EAQnB,GAAIf,GAAcX,EAAM2B,aAAatB,EAAKiB,EAAcC,EACxDvB,GAAMC,KAAK2B,YAAYjB,qCAIfN,GACR,GAAIL,GAAQD,KACRoB,EAAed,EAAIW,KAAKI,IACxBE,EAAA,OACAC,EAAA,MAEAvB,GAAME,YAAYsB,eAAeL,UAE5BnB,GAAME,YAAYiB,GACzBnB,EAAMC,KAAK4B,qBAAqBV,GAChCG,EAAe,MAEfA,EAAe,IACfC,EAAe,YAAcJ,EAAe,kBAG9C,IAAIR,GAAcX,EAAM2B,aAAatB,EAAKiB,EAAcC,EAExDvB,GAAMC,KAAK2B,YAAYjB,mCAUjBS,EAAKC,EAAYH,uCAnFN,MAAOnB,MAAKG,oBA4FjCP,iBAAgBoB,sBAAwB,qCACxCpB,gBAAgBS,sBAAwB,qDAEzBT","file":"sandbox/SandboxRegistry.js","sourcesContent":["/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n/**\n * @author micaelpedrosa@gmail.com\n * Base class to implement internal deploy manager of components.\n */\n\n// import MessageFactory from '../../resources/MessageFactory';\n\n/**\n * @author micaelpedrosa@gmail.com\n * Internal component registry of all sandboxes.\n * Process internal request's for component deploy.\n */\nclass SandboxRegistry {\n  /* private\n  _components: <url: instance>\n  */\n\n  constructor(bus) {\n    let _this = this;\n\n    _this._bus = bus;\n    _this._components = {};\n\n    // Add Message Factory\n    // let messageFactory = new MessageFactory();\n    // _this.messageFactory = messageFactory;\n\n    bus.addListener(SandboxRegistry.InternalDeployAddress, (msg) => {\n      //console.log('SandboxRegistry-RCV: ', msg);\n      // let responseMsg = {\n      //   id: msg.id, type: 'response', from: SandboxRegistry.InternalDeployAddress, to: SandboxRegistry.ExternalDeployAddress\n      // };\n\n      switch (msg.type) {\n        case 'create': _this._onDeploy(msg); break;\n        case 'delete': _this._onRemove(msg); break;\n      }\n    });\n  }\n\n  get components() { return this._components; }\n\n  _responseMsg(msg, code, value) {\n\n    let _this = this;\n\n    // let messageFactory = _this.messageFactory;\n\n    //FLOW-OUT: generic response message to external Sandbox (deploy and un-deploy responses)\n    let responseMsg = {\n      id: msg.id, type: 'response', from: SandboxRegistry.InternalDeployAddress, to: SandboxRegistry.ExternalDeployAddress\n    };\n\n    // Chanege the origin message, because the response;\n    // msg.from = SandboxRegistry.InternalDeployAddress;\n    // msg.to = SandboxRegistry.ExternalDeployAddress;\n\n    let body = {};\n    if (code) body.code = code;\n    if (value) body.desc = value;\n\n    responseMsg.body = body;\n\n    // return messageFactory.createResponse(msg, code, value);\n    return responseMsg;\n  }\n\n  //FLOW-IN: message from the runtime core Sandbox -> deployComponent\n  _onDeploy(msg) {\n    let _this = this;\n    let config = msg.body.config;\n    let componentURL = msg.body.url;\n    let sourceCode = msg.body.sourceCode;\n    let responseCode;\n    let responseDesc;\n\n    if (!_this._components.hasOwnProperty(componentURL)) {\n      try {\n        _this._components[componentURL] = _this._create(componentURL, sourceCode, config);\n        responseCode = 200;\n      } catch (error) {\n        responseCode = 500;\n        responseDesc = error;\n      }\n    } else {\n      responseCode = 500;\n      responseDesc = 'Instance ' + componentURL + ' already exist!';\n    }\n\n    // Create response message with MessageFactory\n    let responseMsg = _this._responseMsg(msg, responseCode, responseDesc);\n    _this._bus.postMessage(responseMsg);\n  }\n\n  //FLOW-IN: message from the runtime core Sandbox -> removeComponent\n  _onRemove(msg) {\n    let _this = this;\n    let componentURL = msg.body.url;\n    let responseCode;\n    let responseDesc;\n\n    if (_this._components.hasOwnProperty(componentURL)) {\n      //remove component from the pool and all listeners\n      delete _this._components[componentURL];\n      _this._bus.removeAllListenersOf(componentURL);\n      responseCode = 200;\n    } else {\n      responseCode = 500;\n      responseDesc = 'Instance ' + componentURL + ' doesn\\'t exist!';\n    }\n\n    let responseMsg = _this._responseMsg(msg, responseCode, responseDesc);\n\n    _this._bus.postMessage(responseMsg);\n  }\n\n  /**\n   * This method should be implemented by the internal sandbox code.\n   * @param  {ComponentURL} url URL used for the instance\n   * @param  {string} sourceCode Code of the component\n   * @param  {Config} config Configuration parameters\n   * @return {Object} Returns instance of the component or throw an error \"throw 'error message'\"\n   */\n  _create(url, sourceCode, config) {\n    //implementation specific\n    /* example code:\n      eval(sourceCode);\n      return activate(url, _this._bus, config);\n    */\n  }\n}\n\nSandboxRegistry.ExternalDeployAddress = 'hyperty-runtime://sandbox/external';\nSandboxRegistry.InternalDeployAddress = 'hyperty-runtime://sandbox/internal';\n\nexport default SandboxRegistry;\n"],"sourceRoot":"/source/"}