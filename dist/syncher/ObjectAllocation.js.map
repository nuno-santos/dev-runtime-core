{"version":3,"sources":["syncher/ObjectAllocation.js"],"names":["ObjectAllocation","url","bus","_classCallCheck3","default","this","_this","_url","_bus","domain","scheme","number","msg","type","from","to","body","value","_promise2","resolve","reject","postMessage","reply","code","allocated","desc"],"mappings":"udAsBMA,4BAWJ,QAAAA,GAAYC,EAAKC,IAAK,EAAAC,iBAAAC,SAAAC,KAAAL,EACpB,IAAIM,GAAQD,IAEZC,GAAMC,KAAON,EAoBTK,EACFE,KAAMN,kEALHO,EAAQC,EAAQC,GACrB,GAAIL,GAAQD,KAGRO,GACFC,KAAM,SAAUC,KAAMR,EAAMC,KAAMQ,GAAI,qBAAuBN,EAAS,6BACtEO,MAAQN,OAAQA,EAAQO,OAASN,OAAQA,IAG3C,OAAO,IAAAO,WAAAd,QAAY,SAACe,EAASC,GAC3Bd,EAAME,KAAKa,YAAYT,EAAK,SAACU,GACH,MAApBA,EAAMN,KAAKO,KACbJ,EAAQG,EAAMN,KAAKC,MAAMO,WAEzBJ,EAAOE,EAAMN,KAAKS,sCAtBd,MAAOpB,MAAKE,8BA6BXP","file":"syncher/ObjectAllocation.js","sourcesContent":["/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\nclass ObjectAllocation {\n  /* private\n  _url: URL\n  _bus: MiniBus\n  */\n\n  /**\n   * Create an Object Allocation\n   * @param  {URL.URL}      url - url from who is sending the message\n   * @param  {MiniBus}      bus - MiniBus used for address allocation\n   */\n  constructor(url, bus) {\n    let _this = this;\n\n    _this._url = url;\n    _this._bus = bus;\n  }\n\n  /**\n   * get the URL value\n   * @return {string} The url value;\n   */\n  get url() { return this._url; }\n\n  /**\n   * Ask for creation of a number of Object addresses, to the domain message node.\n   * @param  {Domain} domain - Domain of the message node.\n   * @param  {number} number - Number of addresses to request\n   * @returns {Promise<ObjectURL>}  A list of ObjectURL's\n   */\n  create(domain, scheme, number) {\n    let _this = this;\n\n    //FLOW-OUT: message sent to msg-node ObjectAllocationManager component\n    let msg = {\n      type: 'create', from: _this._url, to: 'domain://msg-node.' + domain + '/object-address-allocation',\n      body: { scheme: scheme, value: { number: number } }\n    };\n\n    return new Promise((resolve, reject) => {\n      _this._bus.postMessage(msg, (reply) => {\n        if (reply.body.code === 200) {\n          resolve(reply.body.value.allocated);\n        } else {\n          reject(reply.body.desc);\n        }\n      });\n    });\n  }\n}\n\nexport default ObjectAllocation;\n"],"sourceRoot":"/source/"}