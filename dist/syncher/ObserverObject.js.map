{"version":3,"sources":["syncher/ObserverObject.js"],"names":["_utils","require","_Subscription","ObserverObject","parent","url","childrens","_classCallCheck3","default","this","_this","_parent","_url","_childrens","_bus","_subscriptions","hyperty","_Subscription2","domain","divideURL","objURLSubscription","subscription","postMessage","type","from","to","body","resource","childrenResources","_releaseListeners"],"mappings":"0XAAAA,OAAAC,QAAA,kBA+BMC,cAAAD,QAAA,uEAOME,0BAjCV,QAAAA,GAAYC,EAAQC,EAAKC,IAAW,EAAAC,iBAAAC,SAAAC,KAAAN,EAClC,IAAIO,GAAQD,IAEZC,GAAMC,QAAUP,EAChBM,EAAME,KAAOP,EACbK,EAAMG,WAAaP,EAEnBI,EAAMI,KAAOV,EAAOU,KACpBJ,EAAMK,2FAGQC,GACd,GAAIN,GAAQD,IAEZC,GAAMK,eAAeC,GAAW,GAAAC,gBAAAT,QAAiBE,EAAMI,KAAME,EAASN,EAAME,KAAMF,EAAMG,aAAY,+CAGnFG,GACjB,GAAIN,GAAQD,KAERS,GAAS,EAAAlB,OAAAmB,WAAUH,GAASE,OAC5BE,EAAqBV,EAAME,KAAO,gBAElCS,EAAeX,EAAMK,eAAeC,EACpCK,KAEFX,EAAMI,KAAKQ,aACTC,KAAM,cAAeC,KAAMd,EAAMC,QAAQC,KAAMa,GAAIL,EACnDM,MAAQC,SAAUjB,EAAME,QAK1BF,EAAMI,KAAKQ,aACTC,KAAM,cAAeC,KAAMd,EAAMC,QAAQC,KAAMa,GAAI,qBAAuBP,EAAS,MACnFQ,MAAQC,SAAUjB,EAAME,KAAMgB,kBAAmBlB,EAAMG,cAGzDQ,EAAaQ,0BACNnB,GAAMK,eAAeC,6BAMnBb","file":"syncher/ObserverObject.js","sourcesContent":["import { divideURL } from '../utils/utils';\nimport Subscription from './Subscription';\n\nclass ObserverObject {\n\n  constructor(parent, url, childrens) {\n    let _this = this;\n\n    _this._parent = parent;\n    _this._url = url;\n    _this._childrens = childrens;\n\n    _this._bus = parent._bus;\n    _this._subscriptions = {};\n  }\n\n  addSubscription(hyperty) {\n    let _this = this;\n\n    _this._subscriptions[hyperty] = new Subscription(_this._bus, hyperty, _this._url, _this._childrens, false);\n  }\n\n  removeSubscription(hyperty) {\n    let _this = this;\n\n    let domain = divideURL(hyperty).domain;\n    let objURLSubscription = _this._url + '/subscription';\n\n    let subscription = _this._subscriptions[hyperty];\n    if (subscription) {\n      //FLOW-OUT: message sent to remote ReporterObject -> _onRemoteUnSubscribe\n      _this._bus.postMessage({\n        type: 'unsubscribe', from: _this._parent._url, to: objURLSubscription,\n        body: { resource: _this._url }\n      });\n\n      //TODO: should I wait for response before unsubscribe on msg-node\n      //FLOW-OUT: message sent to msg-node SubscriptionManager component\n      _this._bus.postMessage({\n        type: 'unsubscribe', from: _this._parent._url, to: 'domain://msg-node.' + domain + '/sm',\n        body: { resource: _this._url, childrenResources: _this._childrens }\n      });\n\n      subscription._releaseListeners();\n      delete _this._subscriptions[hyperty];\n    }\n  }\n\n}\n\nexport default ObserverObject;\n"],"sourceRoot":"/source/"}