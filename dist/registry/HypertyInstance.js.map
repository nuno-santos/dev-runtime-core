{"version":3,"sources":["registry/HypertyInstance.js"],"names":["_RegistryDataModel2","require","HypertyInstance","id","url","descriptorURL","descriptor","hypertyURL","user","guid","runtime","context","_classCallCheck3","default","this","_this2","_possibleConstructorReturn3","_getPrototypeOf2","call","_this","_descriptor","_hypertyURL","_user","_guid","_runtime","_context","identity","_objectName"],"mappings":"swBAsBAA,oBAAAC,QAAA,uFAMMC,4BAEJ,QAAAA,GAAYC,EAAIC,EAAKC,EAAcC,EAAYC,EAAYC,EAAMC,EAAMC,EAASC,IAAS,EAAAC,iBAAAC,SAAAC,KAAAZ,EAAA,IAAAa,IAAA,EAAAC,4BAAAH,SAAAC,MAAA,EAAAG,iBAAAJ,SAAAX,GAAAgB,KAAAJ,KACjFX,EAAIC,EAAKC,IACXc,EAAAJ,CAFmF,OAGvFI,GAAMC,YAAcd,EACpBa,EAAME,YAAcd,EACpBY,EAAMG,MAAQd,EACdW,EAAMI,MAAQd,EACdU,EAAMK,SAAWd,EACjBS,EAAMM,SAAWd,EARsEI,0FAWhFW,GACP,GAAIP,GAAQL,IACZK,GAAMX,KAAOkB,kBAIb,GAAIP,GAAQL,IACZ,OAAOK,GAAMG,yCAIb,GAAIH,GAAQL,IACZ,OAAOK,GAAME,+CAIb,GAAIF,GAAQL,IACZ,OAAOK,GAAMC,+CAIb,GAAID,GAAQL,IACZ,OAAOK,GAAMC,YAAYO,gEAIdzB","file":"registry/HypertyInstance.js","sourcesContent":["/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\nimport RegistryDataModel from './RegistryDataModel';\n\n/**\n*   @author: Gil Dias (gil.dias@tecnico.ulisboa.pt)\n*   HypertyInstance Data Model used to model instances of Hyperties running in devices and servers.\n*/\nclass HypertyInstance extends RegistryDataModel {\n\n  constructor(id, url, descriptorURL,descriptor, hypertyURL, user, guid, runtime, context) {\n    super(id, url, descriptorURL);\n    let _this = this;\n    _this._descriptor = descriptor;\n    _this._hypertyURL = hypertyURL;\n    _this._user = user;\n    _this._guid = guid;\n    _this._runtime = runtime;\n    _this._context = context;\n  }\n\n  set user(identity) {\n    let _this = this;\n    _this.user = identity;\n  }\n\n  get user() {\n    let _this = this;\n    return _this._user;\n  }\n\n  get hypertyURL() {\n    let _this = this;\n    return _this._hypertyURL;\n  }\n\n  get descriptor() {\n    let _this = this;\n    return _this._descriptor;\n  }\n\n  get objectName() {\n    let _this = this;\n    return _this._descriptor._objectName;\n  }\n}\n\nexport default HypertyInstance;\n"],"sourceRoot":"/source/"}