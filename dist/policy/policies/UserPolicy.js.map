{"version":3,"sources":["policy/policies/UserPolicy.js"],"names":["_AdvancedCondition","require","_Condition","_Policy2","_Rule","_SubscriptionCondition","UserPolicy","key","rules","actions","combiningAlgorithm","_classCallCheck3","default","this","_possibleConstructorReturn3","_getPrototypeOf2","call","type","authorise","condition","scope","target","priority","_Condition2","_AdvancedCondition2","_SubscriptionCondition2","undefined","getLastPriority","rule","_Rule2","push","indexToRemove","indexOf","splice","priorities","length","i","Math","max","apply","Error","j","sort","a","b","x","y"],"mappings":"swBAAAA,mBAAAC,QAAA,kGACAC,WAAAD,QAAA,0EACAE,SAAAF,QAAA,uDACAG,MAAAH,QAAA,gDACAI,uBAAAJ,QAAA,8GAEMK,uBACJ,QAAAA,GAAYC,EAAKC,EAAOC,EAASC,GAAoB,OAAA,EAAAC,iBAAAC,SAAAC,KAAAP,GAC9CI,IACHA,EAAqB,kBAF4B,EAAAI,4BAAAF,SAAAC,MAAA,EAAAE,iBAAAH,SAAAN,GAAAU,KAAAH,KAI7CN,EAAKC,EAAOC,EAASC,oGAGlBO,EAAMC,EAAWC,EAAWC,EAAOC,EAAQC,GACpD,KAAMH,YAAAI,aAAAX,SACJ,OAAQK,GACN,IAAK,WACHE,EAAY,GAAAK,qBAAAZ,QAAsBO,EACpC,KAAK,SACHA,EAAY,GAAAI,aAAAX,QAAcO,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAChE,MACF,KAAK,eACHA,EAAY,GAAAM,yBAAAb,QAA0BO,EAAU,GAAIA,EAAU,GAAIA,EAAU,IAIjEO,SAAbJ,IACFA,EAAWT,KAAKc,kBAAoB,EAEtC,IAAIC,GAAO,GAAAC,QAAAjB,QAASM,EAAWC,EAAWG,EAAUF,EAAOC,EAC3DR,MAAKL,MAAMsB,KAAKF,sCAGPA,GACT,GAAIG,GAAgBlB,KAAKL,MAAMwB,QAAQJ,EACvCf,MAAKL,MAAMyB,OAAOF,EAAe,6CAIjC,GAAIG,KAEJ,IAA0B,IAAtBrB,KAAKL,MAAM2B,OAAc,CAC3B,IAAK,GAAIC,KAAKvB,MAAKL,MACjB0B,EAAWJ,KAAKjB,KAAKL,MAAM4B,GAAGd,SAEhC,OAAOe,MAAKC,IAAIC,MAAMF,KAAMH,GAE5B,OAAO,4CAIOZ,GAChB,IAAK,GAAIc,KAAKvB,MAAKL,MACjB,GAAIK,KAAKL,MAAM4B,GAAGd,UAAYA,EAC5B,MAAOT,MAAKL,MAAM4B,EAGtB,MAAMI,OAAM,sBAAwBlB,EAAW,kEAI/C,IAAK,GAAIc,KAAKvB,MAAKL,MACjB,GAA4B,WAAxBK,KAAKL,MAAM4B,GAAGhB,MAAlB,CAGA,GAAIP,KAAKL,MAAM4B,GAAGjB,oBAAdM,yBAAAb,QACF,OAAO,CAEP,IAAIC,KAAKL,MAAM4B,GAAGjB,oBAAdK,qBAAAZ,QACF,IAAK,GAAI6B,KAAK5B,MAAKL,MAAM4B,GAAGjB,UAAUA,UACpC,GAAIN,KAAKL,MAAM4B,GAAGjB,UAAUA,UAAUsB,YAAlChB,yBAAAb,QACF,OAAO,EAMjB,OAAO,sCAIP,MAAOC,MAAKL,MAAMkC,KAAK,SAASC,EAAGC,GAC/B,GAAIC,GAAIF,EAAA,SAAmBG,EAAIF,EAAA,QAC/B,OAASC,GAAIC,GAAK,EAAOD,EAAIC,EAAK,EAAI,6CAK/BxC","file":"policy/policies/UserPolicy.js","sourcesContent":["import AdvancedCondition from '../conditions/AdvancedCondition';\nimport Condition from '../conditions/Condition'\nimport Policy from '../Policy';\nimport Rule from '../Rule';\nimport SubscriptionCondition from '../conditions/SubscriptionCondition';\n\nclass UserPolicy extends Policy {\n  constructor(key, rules, actions, combiningAlgorithm) {\n    if (!combiningAlgorithm) {\n      combiningAlgorithm = 'denyOverrides';\n    }\n    super(key, rules, actions, combiningAlgorithm);\n  }\n\n  createRule(type, authorise, condition, scope, target, priority) {\n    if (!(condition instanceof Condition)) {\n      switch (type) {\n        case 'advanced':\n          condition = new AdvancedCondition(condition);\n        case 'simple':\n          condition = new Condition(condition[0], condition[1], condition[2]);\n          break;\n        case 'subscription':\n          condition = new SubscriptionCondition(condition[0], condition[1], condition[2]);\n          break;\n      }\n    }\n    if (priority === undefined) {\n      priority = this.getLastPriority() + 1;\n    }\n    let rule = new Rule(authorise, condition, priority, scope, target);\n    this.rules.push(rule);\n  }\n\n  deleteRule(rule) {\n    let indexToRemove = this.rules.indexOf(rule);\n    this.rules.splice(indexToRemove, 1);\n  }\n\n  getLastPriority() {\n    let priorities = [];\n\n    if (this.rules.length !== 0) {\n      for (let i in this.rules) {\n        priorities.push(this.rules[i].priority);\n      }\n      return Math.max.apply(Math, priorities);\n    } else {\n      return -1;\n    }\n  }\n\n  getRuleByPriority(priority) {\n    for (let i in this.rules) {\n      if (this.rules[i].priority == priority) {\n        return this.rules[i];\n      }\n    }\n    throw Error('Rule with priority ' + priority + ' does not exist!')\n  }\n\n  hasSubscriptionRule() {\n    for (let i in this.rules) {\n      if (this.rules[i].scope !== 'global') {\n        continue;\n      }\n      if (this.rules[i].condition instanceof SubscriptionCondition) {\n        return true;\n      } else {\n        if (this.rules[i].condition instanceof AdvancedCondition) {\n          for (let j in this.rules[i].condition.condition) {\n            if (this.rules[i].condition.condition[j] instanceof SubscriptionCondition) {\n              return true;\n            }\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  sortRules() {\n    return this.rules.sort(function(a, b) {\n        let x = a['priority']; let y = b['priority'];\n        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n    });\n  }\n}\n\nexport default UserPolicy;\n"],"sourceRoot":"/source/"}