{"version":3,"sources":["bus/MiniBus.js"],"names":["_Bus2","require","MiniBus","_classCallCheck3","default","this","_possibleConstructorReturn3","_getPrototypeOf2","call","inMsg","responseCallback","_this","_genId","_responseCallback","_onPostMessage","id","msg","_onResponse","itemList","_subscriptions","to","_publishOn","startsWith","_publishOnDefault"],"mappings":"swBAsBAA,MAAAC,QAAA,6CAOMC,oBAEJ,QAAAA,KAAc,OAAA,EAAAC,iBAAAC,SAAAC,KAAAH,IAAA,EAAAI,4BAAAF,SAAAC,MAAA,EAAAE,iBAAAH,SAAAF,GAAAM,KAAAH,wGAUFI,EAAOC,GACjB,GAAIC,GAAQN,IAQZ,OANAM,GAAMC,OAAOH,GACbE,EAAME,kBAAkBJ,EAAOC,GAG/BC,EAAMG,eAAeL,GAEdA,EAAMM,sCAIJC,GACT,GAAIL,GAAQN,IAEZ,KAAKM,EAAMM,YAAYD,GAAM,CAC3B,GAAIE,GAAWP,EAAMQ,eAAeH,EAAII,GACpCF,IACFP,EAAMU,WAAWH,EAAUF,GACtBA,EAAII,GAAGE,WAAW,YACrBX,EAAMY,kBAAkBP,IAG1BL,EAAMY,kBAAkBP,0CAOjBd","file":"bus/MiniBus.js","sourcesContent":["/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\nimport Bus from './Bus';\n\n/**\n* @author micaelpedrosa@gmail.com\n* Message BUS Interface is an extension of the Bus\n* It is used mainly in the internal sandbox routing.\n*/\nclass MiniBus extends Bus {\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Post a message for routing. Message is routed directly to the external routing _onPostMessage.\n   * @param  {Message} inMsg            JSON with mandatory Message structure {id, type, from, to}\n   * @param  {Callback} responseCallback Optional callback if a response is expected from the request. A response will be always sent, even if it is a \"Timeout\".\n   * @return {number}                  the Message id\n   */\n  postMessage(inMsg, responseCallback) {\n    let _this = this;\n\n    _this._genId(inMsg);\n    _this._responseCallback(inMsg, responseCallback);\n\n    //always send to external (to core MessageBus)\n    _this._onPostMessage(inMsg);\n\n    return inMsg.id;\n  }\n\n  //internal method used when a message is received by an external routing system\n  _onMessage(msg) {\n    let _this = this;\n\n    if (!_this._onResponse(msg)) {\n      let itemList = _this._subscriptions[msg.to];\n      if (itemList) {\n        _this._publishOn(itemList, msg);\n        if (!msg.to.startsWith('hyperty')) {\n          _this._publishOnDefault(msg);\n        }\n      } else {\n        _this._publishOnDefault(msg);\n      }\n    }\n  }\n\n}\n\nexport default MiniBus;\n"],"sourceRoot":"/source/"}