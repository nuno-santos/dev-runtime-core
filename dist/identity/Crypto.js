"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(exports,"__esModule",{value:!0});var _promise=require("babel-runtime/core-js/promise"),_promise2=_interopRequireDefault(_promise),_classCallCheck2=require("babel-runtime/helpers/classCallCheck"),_classCallCheck3=_interopRequireDefault(_classCallCheck2),_createClass2=require("babel-runtime/helpers/createClass"),_createClass3=_interopRequireDefault(_createClass2),Crypto=function(){function e(){(0,_classCallCheck3.default)(this,e)}return(0,_createClass3.default)(e,[{key:"encode",value:function(e){return btoa(e)}},{key:"decode",value:function(e){return new Uint8Array(JSON.parse("["+atob(e)+"]"))}},{key:"encryptRSA",value:function(e,n){var t=this;return new _promise2.default(function(r,o){t._importRSAencryptKey(new Uint8Array(e)).then(function(e){crypto.subtle.encrypt({name:"RSA-OAEP"},e,n).then(function(e){r(new Uint8Array(e))}).catch(function(e){console.log("crypto-encryptRSA",e),o(e)})})})}},{key:"decryptRSA",value:function(e,n){var t=this;return new _promise2.default(function(r,o){t._importRSAdecryptKey(e).then(function(e){crypto.subtle.decrypt({name:"RSA-OAEP"},e,n).then(function(e){var n=new Uint8Array(e);r(n)}).catch(function(e){console.log("crypto-decryptRSA",e),o(e)})})})}},{key:"signRSA",value:function(e,n){var t=this;return new _promise2.default(function(r,o){t._importRSAsignKey(e).then(function(e){crypto.subtle.sign({name:"RSASSA-PKCS1-v1_5"},e,t._utf8Encode(n)).then(function(e){r(new Uint8Array(e))}).catch(function(e){console.log("crypto-signRSA",e),o(e)})})})}},{key:"verifyRSA",value:function(e,n,t){var r=this;return new _promise2.default(function(o,c){r._importRSAverifyKey(e).then(function(e){crypto.subtle.verify({name:"RSASSA-PKCS1-v1_5"},e,t,r._utf8Encode(n)).then(function(e){o(e)}).catch(function(e){console.log("crypto-verifyRSA",e),c(e)})})})}},{key:"encryptAES",value:function(e,n,t){var r=this;return new _promise2.default(function(o,c){r._importAESkey(e).then(function(e){crypto.subtle.encrypt({name:"AES-CBC",iv:t},e,r._utf8Encode(n)).then(function(e){o(new Uint8Array(e))}).catch(function(e){console.log("crypto-encryptAES",e),c(e)})})})}},{key:"decryptAES",value:function(e,n,t){var r=this;return new _promise2.default(function(o,c){r._importAESkey(e).then(function(e){crypto.subtle.decrypt({name:"AES-CBC",iv:t},e,n).then(function(e){var n=r._utf8Decode(new Uint8Array(e));o(n)}).catch(function(e){console.log("crypto-decryptAES",e),c(e)})})})}},{key:"hashHMAC",value:function(e,n){var t=this;return new _promise2.default(function(r,o){t._importHMACkey(e).then(function(e){crypto.subtle.sign({name:"HMAC"},e,t._utf8Encode(n)).then(function(e){r(new Uint8Array(e))}).catch(function(e){console.log("crypto-hashHMAC",e),o(e)})})})}},{key:"verifyHMAC",value:function(e,n,t){var r=this;return new _promise2.default(function(o,c){r._importHMACkey(e).then(function(e){crypto.subtle.verify({name:"HMAC"},e,t,r._utf8Encode(n)).then(function(e){e?o(e):c(e)}).catch(function(e){console.error("crypto-verifyHMAC",e),c(e)})})})}},{key:"generateRSAKeyPair",value:function(){var e={};return new _promise2.default(function(n,t){crypto.subtle.generateKey({name:"RSA-PSS",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]).then(function(r){crypto.subtle.exportKey("spki",r.publicKey).then(function(n){return e.public=new Uint8Array(n),crypto.subtle.exportKey("pkcs8",r.privateKey)}).then(function(t){e.private=new Uint8Array(t),n(e)}).catch(function(e){console.error(e),t(e)})}).catch(function(e){console.error(e),t(e)})})}},{key:"generateIV",value:function(){var e=new Uint8Array(16);return crypto.getRandomValues(e),e}},{key:"generateRandom",value:function(){var e=this,n=new Uint8Array(32);crypto.getRandomValues(n);for(var t=Date.now(),r=e._utf8Encode(t),o=r.slice(r.length-4,r.length),c=0;c<4;c++)n[c]=o[c];return n}},{key:"generatePMS",value:function(){var e=new Uint8Array(48);return crypto.getRandomValues(e),e}},{key:"generateMasterSecret",value:function(e,n){var t=this;return new _promise2.default(function(r,o){var c=new Uint8Array(48),u=n;t._digest(e).then(function(e){t.hashHMAC(e,u).then(function(n){for(var r=0;r<32;r++)c[r]=n[r];return t.hashHMAC(e,u+n)}).then(function(e){for(var n=0;n<16;n++)c[n+32]=e[n];r(c)}).catch(function(e){console.log("crypto-generateMasterSecret",e),o(e)})})})}},{key:"generateKeys",value:function(e,n){var t=this;return new _promise2.default(function(r,o){var c=[],u=n;t.hashHMAC(e,u).then(function(n){return c.push(n),t.hashHMAC(e,u+n)}).then(function(n){return c.push(n),t.hashHMAC(e,u+n)}).then(function(n){return c.push(n),t.hashHMAC(e,u+n)}).then(function(e){c.push(e),r(c)}).catch(function(e){o(e)})})}},{key:"_importRSAsignKey",value:function(e){return new _promise2.default(function(n,t){crypto.subtle.importKey("pkcs8",e,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["sign"]).then(function(e){n(e)}).catch(function(e){console.error("crypto-_importRSAsignKey",e),t(e)})})}},{key:"_importRSAverifyKey",value:function(e){return new _promise2.default(function(n,t){crypto.subtle.importKey("spki",e,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["verify"]).then(function(e){n(e)}).catch(function(e){console.error("crypto-_importRSAverifyKey",e),t(e)})})}},{key:"_importRSAencryptKey",value:function(e){return new _promise2.default(function(n,t){crypto.subtle.importKey("spki",e,{name:"RSA-OAEP",hash:{name:"SHA-256"}},!0,["encrypt"]).then(function(e){n(e)}).catch(function(e){console.error("crypto-_importRSAencryptKey",e),t(e)})})}},{key:"_importRSAdecryptKey",value:function(e){return new _promise2.default(function(n,t){crypto.subtle.importKey("pkcs8",e,{name:"RSA-OAEP",hash:{name:"SHA-256"}},!0,["decrypt"]).then(function(e){n(e)}).catch(function(e){console.error("crypto-_importRSAdecryptKey",e),t(e)})})}},{key:"concatPMSwithRandoms",value:function(e,n,t){for(var r=new Uint8Array(e.length+n.length+t.length),o=0;o<e.length;o++)r[o]=e[o];for(var c=0;c<n.length;c++)r[c+e.length]=e[c];for(var u=0;u<t.length;u++)r[u+e.length+n.length]=e[u];return r}},{key:"_generate256bitKey",value:function(){var e=new Uint8Array(32);return crypto.getRandomValues(e),e}},{key:"_importHMACkey",value:function(e){var n=this;return new _promise2.default(function(t,r){n._digest(e).then(function(e){crypto.subtle.importKey("raw",e,{name:"HMAC",hash:{name:"SHA-256"},length:256},!0,["sign","verify"]).then(function(e){t(e)}).catch(function(e){r(e)})})})}},{key:"_digest",value:function(e){return new _promise2.default(function(n,t){crypto.subtle.digest({name:"SHA-256"},e).then(function(e){n(new Uint8Array(e))}).catch(function(e){console.error(e),t(e)})})}},{key:"_importAESkey",value:function(e){return new _promise2.default(function(n,t){crypto.subtle.importKey("raw",e,{name:"AES-CBC"},!0,["encrypt","decrypt"]).then(function(e){n(e)}).catch(function(e){console.error("crypto-importAESkey",e),t(e)})})}},{key:"_utf8Encode",value:function(e){return new TextEncoder("utf-8").encode(e)}},{key:"_utf8Decode",value:function(e){return new TextDecoder("utf-8").decode(e)}}]),e}();exports.default=Crypto,module.exports=exports.default;
//# sourceMappingURL=Crypto.js.map
